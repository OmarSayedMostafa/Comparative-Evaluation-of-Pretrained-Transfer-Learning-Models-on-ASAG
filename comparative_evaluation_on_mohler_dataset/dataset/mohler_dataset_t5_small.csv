,Unnamed: 0,id,question,desired_answer,student_answer,score_me,score_other,score_avg,t5_score_sowe,t5_score_mowe,t5_small_score_sowe,t5_small_score_mowe
0,0,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,High risk problems are address in the prototype program to make sure that the program is feasible.  A prototype may also be used to show a company that the software can be possibly programmed.,4.0,3.0,3.5,0.7690972685813904,0.7690973877906799,0.6890231966972351,0.6890231370925903
1,1,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,To simulate portions of the desired final product with a quick and easy program that does a small specific job. It is a way to help see what the problem is and how you may solve it in the final project.,5.0,5.0,5.0,0.7786771059036255,0.7786770462989807,0.8092326521873474,0.8092325329780579
2,2,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,A prototype program simulates the behaviors of portions of the desired software product to allow for error checking.,5.0,3.0,4.0,0.8803495764732361,0.8803495168685913,0.8355112671852112,0.8355112075805664
3,3,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,"Defined in the Specification phase a prototype stimulates the behavior of portions of the desired software product.  Meaning, the role of a prototype is a temporary solution until the program itself is refined to be used extensively in problem solving.",5.0,5.0,5.0,0.7950552105903625,0.7950553297996521,0.7513392567634583,0.751339316368103
4,4,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,It is used to let the users have a first idea of the completed program and allow the clients to evaluate the program. This can generate much feedback including software specifications and project estimations of the total project.,3.0,3.0,3.0,0.7173097729682922,0.7173097729682922,0.7057335376739502,0.7057335376739502
5,5,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,To find problem and errors in a program before it is finalized,2.0,2.0,2.0,0.5139094591140747,0.5139094591140747,0.6365776062011719,0.6365775465965271
6,6,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,"To address major issues in the creation of the program. There is no way to account for all possible bugs in the program, but it is possible to prove the program is tangible. ",3.0,2.0,2.5,0.7424660325050354,0.7424659729003906,0.7060362100601196,0.7060363292694092
7,7,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,you can break the whole program into prototype programs to simulate parts of the final program,5.0,5.0,5.0,0.6309503316879272,0.6309503316879272,0.6702179312705994,0.6702179908752441
8,8,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,#NAME?,5.0,2.0,3.5,0.31819096207618713,0.31819096207618713,0.39182376861572266,0.39182373881340027
9,9,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,Simulating the behavior of only a portion of the desired software product.,5.0,5.0,5.0,0.8828868269920349,0.8828867673873901,0.8804096579551697,0.8804097175598145
10,10,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,A program that stimulates the behavior of portions of the desired software product.,5.0,5.0,5.0,0.8667684197425842,0.8667683601379395,0.8226388692855835,0.8226388096809387
11,11,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,A program that simulates the behavior of portions of the desired software product.,5.0,5.0,5.0,0.9003609418869019,0.9003609418869019,0.8815116882324219,0.8815118074417114
12,12,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,To lay out the basics and give you a starting point in the actual problem solving.,2.0,2.0,2.0,0.7556314468383789,0.7556313872337341,0.710931122303009,0.7109310626983643
13,13,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,To simulate problem solving for parts of the problem,4.0,5.0,4.5,0.5799671411514282,0.5799671411514282,0.7376372814178467,0.7376373410224915
14,14,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,A prototype program provides a basic groundwork from which to further enhance and improve a solution to a problem.,2.0,2.0,2.0,0.6735730767250061,0.6735730171203613,0.6453898549079895,0.645389974117279
15,15,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,"A prototype program is a part of the Specification phase of Software Problem Solvin.  It's employed to illustrate how the key problem or problems will be solved in a program, and sometimes serves as a base program to expand upon.",4.0,5.0,4.5,0.7363892793655396,0.7363892793655396,0.6776133179664612,0.677613377571106
16,16,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,Program that simulates the behavior of portions of the desired software product,5.0,5.0,5.0,0.8372663855552673,0.8372664451599121,0.8004100918769836,0.8004100918769836
17,17,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,it provides a limited proof of concept to verify with the client before actually programming the whole application.,2.0,2.0,2.0,0.6829904913902283,0.6829905509948729,0.7389387488365173,0.7389386296272278
18,18,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,It tests the main function of the program while leaving out the finer details.,2.0,2.0,2.0,0.5787625908851624,0.5787625908851624,0.7028577327728271,0.7028577923774719
19,19,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,To get early feedback from users in early stages of development.  To show users a first idea of what the program will do/look like.  To make sure the program will meet requirements before intense programming begins.,3.0,2.0,2.5,0.6684492826461792,0.6684492826461792,0.7193268537521362,0.7193268537521362
20,20,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,it simulates the behavior of portions of the desired software product,5.0,5.0,5.0,0.8122072815895081,0.8122073411941528,0.8151453137397766,0.8151453137397766
21,21,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,It simulates the behavior of portions of the desired software product.,5.0,5.0,5.0,0.9180689454078674,0.9180689454078674,0.8947296738624573,0.894729733467102
22,22,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,A prototype program is used in problem solving to collect data for the problem.,1.0,2.0,1.5,0.6544737219810486,0.6544737219810486,0.6499294638633728,0.6499294638633728
23,23,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,To ease the understanding of problem under discussion and to ease the understanding of the program itself,2.0,3.0,2.5,0.5645460486412048,0.5645460486412048,0.620241105556488,0.6202410459518433
24,24,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,it simulates the behavior of portions of the desired software product,5.0,5.0,5.0,0.8122072815895081,0.8122073411941528,0.8151453137397766,0.8151453137397766
25,25,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,The role of a prototype program is to help spot key problems that may arise during the actual programing.,2.0,2.0,2.0,0.7560905218124391,0.7560905218124391,0.6833000183105469,0.6833000779151917
26,26,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,"the prototype program gives a general idea of what the end product will do,   without the time and effort to write out the entire program.",4.0,2.0,3.0,0.6937896609306335,0.6937897205352783,0.6792739629745483,0.6792739033699036
27,27,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,to show that a certain part of the program works as it is supposed to,4.0,2.0,3.0,0.6113790273666382,0.611379086971283,0.5934680104255676,0.5934681296348572
28,28,1.1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,"Prototype programming is an approach to programming that enables one to take an organized approach to developing an effective program with minimal errors and a strategic pattern when solving a problem. i.e. book gave an example of a costumer withdrawing money from a bank, the approach that was taking on a pseudo code level during the OOA/Design lvl before proceeding into creating a solution. ",3.0,2.0,2.5,0.6743151545524597,0.6743151545524597,0.6958460807800293,0.6958460807800293
29,29,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),Refining and possibly the design if the testing phase reveals problems in the design. Production can be affected if the program is unworkable in its current form which will lead to a later production time than originally estimated. Also affects coding because after testing you may need to rewrite the code for the program to remove errors.,5.0,2.0,3.5,0.561347246170044,0.5613473653793335,0.7064222097396851,0.7064221501350403
30,30,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),The implementation phase and the maintenance phase are effected,3.0,5.0,4.0,0.6912511587142944,0.6912511587142944,0.6934201121330261,0.6934201121330261
31,31,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"Verification, coding, refining the solution and maintenance are all influenced by the testing stage.",4.0,5.0,4.5,0.6649561524391174,0.6649560928344727,0.7837966680526733,0.7837965488433838
32,32,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"In RUP the stages in the software life cycle are influenced by the testing stage is:  Elaboration phase- refined progject vision, iterative devilopment of core system, development of system requirements, more accurate time and cost estimates.  Construction phase- iterative development of remaining system.  Transition phase-testing and deployment of the system.",2.0,4.0,3.0,0.6868864893913269,0.6868864893913269,0.772834300994873,0.7728344202041626
33,33,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"Refining the solution, Production and Maintenance are all influenced by the Testing stage. ",3.0,3.0,3.0,0.6139140725135803,0.6139139533042908,0.7294862866401672,0.7294861674308777
34,34,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"Elaboration, Construction, and Transition are all affected by testing",2.0,2.0,2.0,0.6375585794448853,0.6375586986541748,0.726788341999054,0.7267882823944092
35,35,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"Refining, Production, Maintenance",3.0,4.0,3.5,0.5361282825469971,0.5361283421516418,0.6778789758682251,0.6778789758682251
36,36,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),Refining the solution,3.0,5.0,4.0,0.4485607147216797,0.4485607147216797,0.6027401089668274,0.6027400493621826
37,37,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),#NAME?,3.0,1.0,2.0,0.31819096207618713,0.31819096207618713,0.39182376861572266,0.39182373881340027
38,38,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),Refining and Coding,5.0,5.0,5.0,0.5165390372276306,0.5165390968322754,0.5985490083694458,0.5985490083694458
39,39,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"The second half of the Elaboration phase, Construction phase, and the Transition phase. ",2.0,3.0,2.5,0.7351730465888977,0.7351730465888977,0.7895834445953369,0.7895833849906921
40,40,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"The refining step, the production step, and the maintenance stage.  ",3.0,4.0,3.5,0.6507236361503601,0.6507236361503601,0.7929868102073669,0.7929867506027222
41,41,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"Elaboration, Construction, Transition",2.0,2.0,2.0,0.587519109249115,0.5875189900398254,0.7150858640670776,0.7150859832763672
42,42,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),Refining.,3.0,3.0,3.0,0.5004047155380249,0.5004047751426697,0.6324235796928406,0.6324235200881958
43,43,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"The testing stage has a direct influence on the final version of a program, being as it is the debugging and finalization of a software revision.",2.0,1.0,1.5,0.6950295567512512,0.695029616355896,0.7881922125816345,0.7881922125816345
44,44,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"Directly: Refining, coding.  Because Refining is right before the Testing Phase and Coding is right after the Testing Phase.  Indirectly: Production, Maintenance.  Because Refining occurs before these last two stages in the Software Life Cycle.",5.0,5.0,5.0,0.5703462958335876,0.5703463554382324,0.7413482666015625,0.7413482666015625
45,45,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"Testing, refining, production, and maintenance.",3.0,4.0,3.5,0.6107310652732849,0.6107310056686401,0.7047234773635864,0.7047234177589417
46,46,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"Depending on how the work is done, Testing is spread throughout the  process as to prevent errors from showing up later on due to lack of foresight. ",2.0,1.0,1.5,0.5375639796257019,0.5375640392303467,0.6610785722732544,0.6610785126686096
47,47,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"Elaboration, construction, and transition.",2.0,3.0,2.5,0.6412006020545961,0.6412006020545961,0.7401831150054932,0.7401831150054932
48,48,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"All stages are influenced except setting the program requirements.  If a test fails, it can change the whole design, implementation, etc of a program as well as the final outcome.",2.0,1.0,1.5,0.6261630654335022,0.6261630654335022,0.7394543290138245,0.7394542694091797
49,49,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"Refining, production, and maintenance",3.0,3.0,3.0,0.5840024352073669,0.5840024352073669,0.6960852742195129,0.6960852742195129
50,50,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),coding and refining,5.0,5.0,5.0,0.5633990168571472,0.5633990168571472,0.6566908955574036,0.6566908359527588
51,51,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"refining, production, maintenance.",3.0,4.0,3.5,0.6081134676933289,0.6081135869026184,0.7157163023948669,0.7157161831855774
52,52,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"Removing logical errors, testing for valid data, random data and actual data.",2.0,0.0,1.0,0.6415659785270691,0.6415659785270691,0.7287457585334778,0.7287456393241882
53,53,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),1- specification 2- design 3- risk analysis 4- verification 5- coding 6- testing 7- refining 8- production 9- maintenance,1.0,4.0,2.5,0.6239722371101379,0.6239722967147827,0.7220459580421448,0.7220458984375
54,54,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"Refining stage, Production stage, and Maintenance stage.  ",3.0,4.0,3.5,0.5852575302124023,0.5852575898170471,0.7188789248466492,0.718878984451294
55,55,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),Testing could affect all parts of the life cycle; it could make you go back   to specification if it does not test well.,2.0,2.0,2.0,0.569381833076477,0.5693818926811218,0.670536458492279,0.6705365180969238
56,56,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),coding,3.0,3.0,3.0,0.21848776936531067,0.21848776936531067,0.535577654838562,0.535577654838562
57,57,1.2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"The Individual components and steps such as  analysis, design, and implementing code  as well as the entire system are tested for execution of the requirements identified during the analysis stage. i.e. Main output ",1.0,2.0,1.5,0.6553394198417664,0.6553394198417664,0.7251726984977722,0.7251726388931274
58,58,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"Modularability, the ability to reuse parts of the program later in another program sometimes with completely different goals for the program. Also it makes it easier to debug code by dividing up the code into classes that each do a specific job and when the program fails at one job you only have one class to debug. Good for security purposes because it allows you to let someone use a program which sorts lists without having to give them access to the source code. ALso allows you to use inheritance and polymorphism.",4.0,5.0,4.5,0.5221333503723145,0.5221334099769592,0.5197932720184326,0.5197933316230774
59,59,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"This type of programming is more flexible, making it easier to add and modify the program.  It is also a type of a fail safe program, you check each individual module.  This eliminates redundant code and makes the program easier to read for other programmers.  When debugging the program it is easier to track down the source of a problem within a module rather than a 2 million line program.",5.0,5.0,5.0,0.5197145342826843,0.5197145938873291,0.5110905766487122,0.5110905766487122
60,60,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,The main advantages to object-oriented programming are that existing classes can be reused and program maintenance and verification are easier.,3.0,4.0,3.5,0.6917709708213806,0.6917709708213806,0.6695837378501892,0.669583797454834
61,61,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,The advantages is that OOP allows us to build classes of objects.  Three principles that make up OOP are:  Encapsulation- Objects combine data and operations.  Inheritance- Classes can inherit properties from other classes.  Polymorphism- Objects can determine appropriate operations at execution time.,2.0,3.0,2.5,0.5661627650260925,0.5661627054214478,0.5464574098587036,0.5464575290679932
62,62,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,Some advantages are existing classes can be reused and program maintenance and verification are easier to accomplish.,3.0,4.0,3.5,0.6454474925994873,0.6454474329948425,0.6453428268432617,0.6453428864479065
63,63,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,Object oriented programming allows programmers to use an object with classes that can be changed and manipulated while not affecting the entire object at once. The classes all hold attrubutes that affect the object.,1.0,1.0,1.0,0.5878318548202515,0.5878318548202515,0.5541618466377258,0.5541618466377258
64,64,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"Reusable components, Extensibility, Maintainability, it reduces large problems into smaller more manageable problems.",4.0,4.0,4.0,0.6732720732688904,0.6732721328735352,0.6965088248252869,0.6965088844299316
65,65,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,Encapsulation-objects combine data and operations Inheritance- classes can inherit properties from other classes Polymorphism- Objects can determine appropriate operations at execution time,2.0,3.0,2.5,0.5430562496185303,0.5430562496185303,0.5126163363456726,0.5126163363456726
66,66,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,#NAME?,3.0,3.0,3.0,0.31819096207618713,0.31819096207618713,0.39182376861572266,0.39182373881340027
67,67,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,Re-usability  and ease of maintenance,3.0,5.0,4.0,0.6123534440994263,0.612353503704071,0.7637578248977661,0.7637578845024109
68,68,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"One of the main advantages is you can hide inner details a technique known by encapsulation. Objects combine the data and operations but you cannot see how it works.   Another advantage is you can reuse classes that have been defined earlier in the program, a method known as inheritance.   Finally another advantage is objects can determine appropriate operations at execution time a technique known as polymorphism. ",5.0,5.0,5.0,0.5140953063964844,0.5140953063964844,0.5410243272781372,0.541024386882782
69,69,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"Existing classes can be reused, and program maintenance and verification are easier.",3.0,4.0,3.5,0.6985684633255005,0.6985684633255005,0.7231150269508362,0.7231151461601257
70,70,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,Using different modules allows for easier debugging,2.0,2.0,2.0,0.5205959081649779,0.5205959081649779,0.49887219071388245,0.49887222051620483
71,71,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"Data encapsulation concept,the use of functions or methods to manipulate data.",3.0,4.0,3.5,0.7018724679946899,0.7018724679946899,0.6605657339096069,0.6605657935142517
72,72,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"Modular, reusable code, allowing faster deployment of solutions, and a more general view of a solution.",5.0,4.0,4.5,0.7296790480613708,0.7296790480613708,0.6055495142936707,0.6055495738983154
73,73,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"Coding and Debugging programs are usually easier, as either the compiler will specify the object that is working incorrectly, or the function an object was assigned to will be easier to identify.  The code itself also looks more organized and is easier to read and will help to avoid redundant coding.  Post-programming maintenance is also easier.  Also, modules can be reused several times in other programs without too much hassle.   Abstraction is the art of breaking down one big problem into smaller, simpler problems and solving them.  Many of the smaller problems are shared between unique complex problems, and creating modules to these solve these smaller repeated problems can save time when you encounter them again.",5.0,5.0,5.0,0.5186870098114014,0.5186870694160461,0.5336002111434937,0.5336002707481384
74,74,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"Variables can remain private. The code is easily modified and reusable, as well as easily implemented. Not to mention easier to read and follow along as an observer.",4.0,5.0,4.5,0.6362797021865845,0.6362797617912292,0.6233064532279968,0.6233065128326416
75,75,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,Data Abstraction and control... it is possible to isolate elements from other elements a lot easier and prevent tampering of data.,3.0,4.0,3.5,0.6948713064193726,0.6948712468147278,0.713070273399353,0.7130703330039978
76,76,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,Encapsulation - Objects use operations without knowing how the operation works. Inheritance - cuts redundancy by reusing earlier classes. Polymorphism - objects select the correct operation to use in the situation.,5.0,3.0,4.0,0.5932584404945374,0.5932584404945374,0.6283223032951355,0.6283223628997803
77,77,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"They make it easier to reuse and adapt previously written code and they separate complex programs into smaller, easier to understand classes.",5.0,4.0,4.5,0.5322552919387817,0.5322552919387817,0.5424084067344666,0.5424084067344666
78,78,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"Existing classes can be reused, Program maintenance and verification are easier ",3.0,4.0,3.5,0.6679274439811707,0.6679275035858154,0.6802154183387756,0.6802154779434204
79,79,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"Existing classes can be feused, Program maintenance and verification are easier",3.0,4.0,3.5,0.6645662784576416,0.6645662784576416,0.6575819849967957,0.6575819849967957
80,80,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"the main advantages to object-oriented programming  is data abstraction, easier maintenance, and re-usability.",5.0,5.0,5.0,0.7414819002151489,0.7414820194244385,0.763786792755127,0.7637868523597717
81,81,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,Existing classes can be reused Program maintenance and verifications are easy,3.0,5.0,4.0,0.5989518165588379,0.5989517569541931,0.5616739392280579,0.5616739392280579
82,82,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,1- Existing classes can be reused 2- Program maintenance and verification are easier,3.0,4.0,3.5,0.553151547908783,0.553151547908783,0.6040131449699402,0.604013204574585
83,83,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,Information can be hidden. It is easier to debug. Programming is easier and more manageable.,3.0,4.0,3.5,0.606569766998291,0.606569766998291,0.6345652341842651,0.6345652341842651
84,84,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"Existing classes can be reused, program maintenance and verification are   easier.",3.0,4.0,3.5,0.6985684633255005,0.6985684633255005,0.7231150269508362,0.7231151461601257
85,85,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,existing classes can be reused program maintenance and verification are easier,3.0,4.0,3.5,0.5637228488922119,0.5637227892875671,0.5817769765853882,0.581777036190033
86,86,1.3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"Well for one encapsulation the values of the variables inside an object are private, unless methods are written to pass info outside of the object. As well as Inheritance where each subclass inherits all variables and methods of its super class.  Example in the book included obj clock and how obj alarm would still use clock from the first class. ",3.0,4.0,3.5,0.483421117067337,0.4834211468696594,0.5292655825614929,0.5292655825614929
87,87,1.4,Where do C++ programs begin to execute?,At the main function.,At function ‘int main ()’,5.0,5.0,5.0,0.6041632294654846,0.6041632294654846,0.6863449215888977,0.6863449215888977
88,88,1.4,Where do C++ programs begin to execute?,At the main function.,the Function main().,5.0,5.0,5.0,0.5877001285552979,0.5877001881599426,0.7440908551216125,0.7440908551216125
89,89,1.4,Where do C++ programs begin to execute?,At the main function.,c++ programs begin to execute in the main method.,5.0,5.0,5.0,0.5831342339515686,0.5831342935562134,0.6853125095367432,0.6853125095367432
90,90,1.4,Where do C++ programs begin to execute?,At the main function.,A C++ program will begin to execute at the main() function.,5.0,5.0,5.0,0.7024938464164734,0.7024938464164734,0.7447962760925293,0.7447962164878845
91,91,1.4,Where do C++ programs begin to execute?,At the main function.,They begin in the main() function.,5.0,5.0,5.0,0.665694534778595,0.6656946539878845,0.7359711527824402,0.7359710931777954
92,92,1.4,Where do C++ programs begin to execute?,At the main function.,Int main(),5.0,5.0,5.0,0.5955262184143066,0.5955262780189514,0.702692449092865,0.702692449092865
93,93,1.4,Where do C++ programs begin to execute?,At the main function.,main method,5.0,5.0,5.0,0.4667511880397797,0.4667511582374573,0.5619521141052246,0.5619521141052246
94,94,1.4,Where do C++ programs begin to execute?,At the main function.,in the testing phase,0.0,0.0,0.0,0.3376741111278534,0.3376741111278534,0.4181922674179077,0.4181922674179077
95,95,1.4,Where do C++ programs begin to execute?,At the main function.,#NAME?,5.0,5.0,5.0,0.31819096207618713,0.31819096207618713,0.39182376861572266,0.39182373881340027
96,96,1.4,Where do C++ programs begin to execute?,At the main function.,main,5.0,5.0,5.0,0.3964166939258576,0.3964166939258576,0.5715691447257996,0.5715692043304443
97,97,1.4,Where do C++ programs begin to execute?,At the main function.,They begin to execute at the funcion main().,5.0,5.0,5.0,0.6957847476005554,0.6957847476005554,0.6957175135612488,0.6957176327705383
98,98,1.4,Where do C++ programs begin to execute?,At the main function.,The main method.,5.0,5.0,5.0,0.7803201675415039,0.7803202867507935,0.7856256365776062,0.7856255769729614
99,99,1.4,Where do C++ programs begin to execute?,At the main function.,At the root,0.0,5.0,2.5,0.5222752094268799,0.5222752690315247,0.6768069267272949,0.6768068075180054
100,100,1.4,Where do C++ programs begin to execute?,At the main function.,In the main() function.,5.0,5.0,5.0,0.7813760042190552,0.7813758850097656,0.8346322774887085,0.8346323370933533
101,101,1.4,Where do C++ programs begin to execute?,At the main function.,C++ programs begin execution at main.,5.0,5.0,5.0,0.64317786693573,0.6431779265403748,0.7543484568595886,0.7543483972549438
102,102,1.4,Where do C++ programs begin to execute?,At the main function.,In the Main function..?,5.0,5.0,5.0,0.7653099894523621,0.7653099298477173,0.7799113392829895,0.7799113988876343
103,103,1.4,Where do C++ programs begin to execute?,At the main function.,"At the ""main()"" function",5.0,5.0,5.0,0.6112719774246216,0.6112719774246216,0.6958893537521362,0.6958893537521362
104,104,1.4,Where do C++ programs begin to execute?,At the main function.,The main function.,5.0,5.0,5.0,0.8151822686195374,0.8151822686195374,0.8655507564544678,0.8655505776405334
105,105,1.4,Where do C++ programs begin to execute?,At the main function.,The function main,5.0,5.0,5.0,0.5739898681640625,0.5739898085594177,0.7272323369979858,0.7272323369979858
106,106,1.4,Where do C++ programs begin to execute?,At the main function.,"After loading the required include statements and libraries, the main method begins the execution.",5.0,5.0,5.0,0.5501353144645691,0.5501353144645691,0.6415398716926575,0.6415398716926575
107,107,1.4,Where do C++ programs begin to execute?,At the main function.,main function,5.0,5.0,5.0,0.5143868923187256,0.5143869519233704,0.6550425887107849,0.6550425887107849
108,108,1.4,Where do C++ programs begin to execute?,At the main function.,main,5.0,5.0,5.0,0.3964166939258576,0.3964166939258576,0.5715691447257996,0.5715692043304443
109,109,1.4,Where do C++ programs begin to execute?,At the main function.,C++ programs begin execution at the main function.,5.0,5.0,5.0,0.6575639247894287,0.6575638651847839,0.7840263247489929,0.7840263843536377
110,110,1.4,Where do C++ programs begin to execute?,At the main function.,At main,5.0,5.0,5.0,0.5130456686019897,0.5130457282066345,0.7064920663833618,0.706492006778717
111,111,1.4,Where do C++ programs begin to execute?,At the main function.,they beging to excute at main,5.0,5.0,5.0,0.4633691012859345,0.4633690416812897,0.43950438499450684,0.43950435519218445
112,112,1.4,Where do C++ programs begin to execute?,At the main function.,at the main function  int main() {},5.0,5.0,5.0,0.4704859554767609,0.4704859554767609,0.6832504868507385,0.6832505464553833
113,113,1.4,Where do C++ programs begin to execute?,At the main function.,C++ programs begin execution at the main function.,5.0,5.0,5.0,0.6575639247894287,0.6575638651847839,0.7840263247489929,0.7840263843536377
114,114,1.4,Where do C++ programs begin to execute?,At the main function.,"in the ""main"" function",5.0,5.0,5.0,0.55356365442276,0.55356365442276,0.6153685450553894,0.6153686046600342
115,115,1.4,Where do C++ programs begin to execute?,At the main function.,Within the main function,5.0,5.0,5.0,0.6805024743080139,0.6805025935173035,0.7150341272354126,0.7150341272354126
116,116,1.5,What is a variable?,A location in memory that can store a value.,Variable can be a integer or a string in a program.,1.0,3.0,2.0,0.7359457612037659,0.7359457612037659,0.6894301772117615,0.6894301772117615
117,117,1.5,What is a variable?,A location in memory that can store a value.,"In programming, a structure that holds data and is uniquely named by the programmer. It holds the data assigned to it until a new value is assigned or the program is finished. ",4.0,5.0,4.5,0.6908255219459534,0.6908254027366638,0.6774353384971619,0.6774353384971619
118,118,1.5,What is a variable?,A location in memory that can store a value.,A variable is a location in memory where a value can be stored.,5.0,5.0,5.0,0.936310052871704,0.936310052871704,0.9321099519729614,0.9321099519729614
119,119,1.5,What is a variable?,A location in memory that can store a value.," Variable is a location in the computer's memory, in which a value can be stored and later can retrieve that value.",5.0,5.0,5.0,0.8151785135269165,0.8151785731315613,0.7319692373275757,0.7319692969322205
120,120,1.5,What is a variable?,A location in memory that can store a value.,"A variable is a location in the computer's memory where a value can be stored for use by a program. Each variable has a name, a value, a type and a size.",5.0,5.0,5.0,0.7876694202423096,0.7876695394515991,0.767348051071167,0.767348051071167
121,121,1.5,What is a variable?,A location in memory that can store a value.,A named object that can hold a numerical or letter value,2.0,5.0,3.5,0.673886775970459,0.673886775970459,0.6459645628929138,0.6459645628929138
122,122,1.5,What is a variable?,A location in memory that can store a value.,"It's a sybol or name for a value/number. Example: 'a_used_number' can stand for any given number, and the programmer can refer to that number by using the variable name.",3.0,5.0,4.0,0.6587414741516113,0.6587415337562561,0.6467345356941223,0.6467346549034119
123,123,1.5,What is a variable?,A location in memory that can store a value.,A variable is a location in the computers memory where a value can be stored for use by a program,5.0,5.0,5.0,0.7798448204994202,0.7798449397087097,0.7795469164848328,0.779546856880188
124,124,1.5,What is a variable?,A location in memory that can store a value.,#NAME?,3.0,5.0,4.0,0.31819096207618713,0.31819096207618713,0.39182376861572266,0.39182373881340027
125,125,1.5,What is a variable?,A location in memory that can store a value.,a block of memory that holds a specific type of data,5.0,5.0,5.0,0.5979560613632202,0.5979560613632202,0.6302244067192078,0.630224347114563
126,126,1.5,What is a variable?,A location in memory that can store a value.,It is a location in the computer's memory where it can be stored for use by a program.,5.0,5.0,5.0,0.7113444209098816,0.7113444209098816,0.7223949432373047,0.7223950028419495
127,127,1.5,What is a variable?,A location in memory that can store a value.,A location in memory where value can be stored.,5.0,5.0,5.0,0.936310052871704,0.936310052871704,0.9321099519729614,0.9321099519729614
128,128,1.5,What is a variable?,A location in memory that can store a value.,a value/word that can assume any of a set of values,3.0,3.0,3.0,0.6385176777839661,0.6385176777839661,0.619000256061554,0.619000256061554
129,129,1.5,What is a variable?,A location in memory that can store a value.,A pointer to a location in memory.,3.0,5.0,4.0,0.8979153633117676,0.8979153633117676,0.8668445944786072,0.8668445944786072
130,130,1.5,What is a variable?,A location in memory that can store a value.,"A variable is the memory address for a specific type of stored data, or from a mathematical perspective, a symbol representing a fixed definition with changing values.",5.0,5.0,5.0,0.750809907913208,0.7508098483085632,0.7549870610237122,0.7549871206283569
131,131,1.5,What is a variable?,A location in memory that can store a value.,A variable is a value that is subject to change in a computer's memory that can be used by programs.  Programs can change the value of the variable and recall it later or act on it directly.,5.0,5.0,5.0,0.7200698256492615,0.7200698256492615,0.7001036405563354,0.7001035809516907
132,132,1.5,What is a variable?,A location in memory that can store a value.,a symbol that stands in for a value that may or may not change depending on the program.,3.0,5.0,4.0,0.663396418094635,0.6633964776992798,0.649709939956665,0.6497098803520203
133,133,1.5,What is a variable?,A location in memory that can store a value.,"a placeholder to hold information used in the program... for example: int can hold: 1, 2, 3, 4, 68, 72, 256, etc. float can hold: 1.54, 55.55, 1.24, 5.657, 8.8123, et. char can hold: A, B, C, D, E, F, !, 4, 5, 6, P, etc. ",4.0,5.0,4.5,0.3709045052528381,0.3709045052528381,0.4538303017616272,0.4538303017616272
134,134,1.5,What is a variable?,A location in memory that can store a value.,a stored value used by the program,4.0,5.0,4.5,0.6040447950363159,0.6040447354316711,0.6588432192802429,0.6588432788848877
135,135,1.5,What is a variable?,A location in memory that can store a value.,"A way to store different values into the program, such as numbers, words, letters, etc.",4.0,5.0,4.5,0.6460156440734863,0.6460156440734863,0.6675264835357666,0.6675264835357666
136,136,1.5,What is a variable?,A location in memory that can store a value.,An object with a location in memory where value can be stored,2.0,5.0,3.5,0.7295505404472351,0.7295505404472351,0.8081393837928772,0.8081393241882324
137,137,1.5,What is a variable?,A location in memory that can store a value.,location in memory where a value can be stored,5.0,5.0,5.0,0.6497760415077211,0.6497761011123657,0.719073474407196,0.7190734148025513
138,138,1.5,What is a variable?,A location in memory that can store a value.,a variable is an object where data is stored.,2.0,5.0,3.5,0.8000085353851318,0.8000083565711975,0.7072395086288452,0.7072395086288452
139,139,1.5,What is a variable?,A location in memory that can store a value.,Location in memory where a value can be stored.,5.0,5.0,5.0,0.8890048265457153,0.8890048265457153,0.8589963316917419,0.8589962720870972
140,140,1.5,What is a variable?,A location in memory that can store a value.,it is a location in memory where value can be stored,5.0,5.0,5.0,0.6497760415077211,0.6497761011123657,0.719073474407196,0.7190734148025513
141,141,1.5,What is a variable?,A location in memory that can store a value.,A variable is the location in a computer's memory where a value can be stored for use by a program.,5.0,5.0,5.0,0.8239207863807678,0.8239207863807678,0.8212146759033203,0.8212146759033203
142,142,1.5,What is a variable?,A location in memory that can store a value.,A variable is a location in a computers memory where a value can be stored   for use by a program.,5.0,5.0,5.0,0.8374111652374268,0.8374111652374268,0.8670282959938049,0.8670282363891602
143,143,1.5,What is a variable?,A location in memory that can store a value.,a location in memory where data can be stored and retrieved,5.0,5.0,5.0,0.6208735704421997,0.6208735108375549,0.6639689207077026,0.6639689803123474
144,144,1.5,What is a variable?,A location in memory that can store a value.,"Is a method or identifier I would say,  we use to bind a data object to memory location; which is then stored in a location that can be accessed when and manipulated later when the variable name is called. ",5.0,5.0,5.0,0.7616599202156067,0.7616599202156067,0.6856153607368469,0.6856153607368469
145,145,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),"They can be declared right before they are used, but it is a good practice to declare them at the beginning of the program and label what they are food.",1.0,3.0,2.0,0.6532232165336609,0.6532231569290161,0.586826503276825,0.5868265628814697
146,146,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),In the Function main() before using the variable.,1.0,5.0,3.0,0.679094135761261,0.6790940761566162,0.7435653209686279,0.7435654401779175
147,147,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),"Local variables are declared inside the method or function they will be used in at the beginning of the method. Global variables are declared outside of any function or method, generally before functions are defined.",5.0,5.0,5.0,0.8007275462150574,0.8007274270057678,0.7994222640991211,0.7994222044944763
148,148,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),Variables are declared where ever it is defined either inside a block locally or outside a block globally.,4.0,5.0,4.5,0.8080464601516724,0.8080464601516724,0.7824048399925232,0.7824047803878784
149,149,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),Variables are declared before they are actually used. They can be declared before main() to use globally,3.0,5.0,4.0,0.7754654288291931,0.7754654288291931,0.7986798286437988,0.7986799478530884
150,150,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),"For good programing practice they should be declared before main(), but should at least be declared before they are used.",2.0,3.0,2.5,0.7264050245285034,0.7264049649238586,0.7137219309806824,0.7137218713760376
151,151,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),"They can be declared globally just before the main method (but also outside of it)... or variables can be subject to only the method they're scoped within, but would still be declared at the beginning of that method (but inside of it).",5.0,5.0,5.0,0.7970539927482605,0.7970539331436157,0.7931916117668152,0.7931914925575256
152,152,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),local variables are declared inside the method while global variables are declared in the body.,5.0,5.0,5.0,0.7489203810691833,0.7489204406738281,0.6055304408073425,0.6055303812026978
153,153,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),#NAME?,1.0,3.0,2.0,0.31819096207618713,0.31819096207618713,0.39182376861572266,0.39182373881340027
154,154,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),"Globally for an entire program, and locally for individual functions (including FOR statements)",4.0,5.0,4.5,0.7501114010810852,0.7501114010810852,0.7696802616119385,0.7696802616119385
155,155,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),They are usually declared at the beginning before they can be used in the program. They always contain a name and a data type.,2.0,4.0,3.0,0.7285284399986267,0.7285284399986267,0.7063262462615967,0.7063261270523071
156,156,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),Inside the method.,2.0,3.0,2.5,0.663070023059845,0.663070023059845,0.5755753517150879,0.5755754113197327
157,157,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),at the top,1.0,2.0,1.5,0.28661373257637024,0.28661367297172546,0.3369016945362091,0.3369016647338867
158,158,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),Global variables are declared in the body of the code. Local variables are declared in the function they are to be used (unless the function is being passed a variable). Variables should always be declared before use.,5.0,5.0,5.0,0.7858154773712158,0.7858153581619263,0.8248139023780823,0.824813961982727
159,159,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),Variables are usually declared at the beginning of a module of C++ code.,2.0,3.0,2.5,0.6915459036827087,0.6915459036827087,0.7127403616905212,0.712740421295166
160,160,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),"In the main function, usually at the top of code.  They can be declared almost anywhere, but must be declared before the code can use or act upon them.",3.0,4.0,3.5,0.7664206624031067,0.7664206027984619,0.7676020264625549,0.7676020860671997
161,161,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),in the very beginning of the program. Before the main() starts.,1.0,3.0,2.0,0.6450571417808533,0.6450572013854979,0.6669698357582092,0.6669698357582092
162,162,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),"In the declaration of Functions, for statements, and while statements. in the body of If, For, while, do while, statements, in namespaces, headers, etc  ( almost anywhere. ) anywhere in the program, as long as it is on it's own line.",2.0,3.0,2.5,0.7628675699234009,0.7628675699234009,0.7689146995544434,0.7689147591590881
163,163,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),After declaration of the variable's data type.,1.0,1.0,1.0,0.7060727477073669,0.7060726881027222,0.611845850944519,0.6118457317352295
164,164,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),"anywhere in the code, can be at the top, or in the middle of the code, or anywhere.",3.0,3.0,3.0,0.7052926421165466,0.7052926421165466,0.7416147589683533,0.7416147589683533
165,165,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),Before they are used.,2.0,2.0,2.0,0.5131133794784546,0.5131133794784546,0.5306670665740967,0.5306670665740967
166,166,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),Anywhere in the same scope before they are used,3.0,4.0,3.5,0.4658461213111877,0.4658460915088654,0.5105913281440735,0.5105913877487183
167,167,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),variables can be declared in classes and methods.,1.0,4.0,2.5,0.6417081356048584,0.6417081952095032,0.5679709911346436,0.5679709911346436
168,168,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),inside the function scope and outside of the function scope in case of global variables,5.0,5.0,5.0,0.6769626140594482,0.6769624948501587,0.5333394408226013,0.5333395004272461
169,169,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),global variables are declared in the main function local variables are declared in any other function,3.0,5.0,4.0,0.5869104266166687,0.5869104862213135,0.6195988059043884,0.6195987462997437
170,170,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),"Variables are usually declared at the very beginning of a C++ program, but can be declared any in the program as long as they appear before they are called upon.",4.0,4.0,4.0,0.7278660535812378,0.727865993976593,0.7482498288154602,0.7482498288154602
171,171,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),"Variables are declared in the main function, before any operation is   attempted with the variables.",1.0,3.0,2.0,0.7606878280639648,0.7606879472732544,0.7797343730926514,0.7797344326972961
172,172,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),"anywhere, but where you declare them depends on where you want them to be accessible (their scope)",4.0,5.0,4.5,0.7537611722946167,0.7537610530853271,0.664871871471405,0.6648718118667603
173,173,1.6,Where are variables declared in a C++ program?,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),It depends if it’s a global then they have to be declared out side the source code to be used in every scope however a local variable is one declared in a local function etc. which obviously doesn’t need to be declared outside the variable seeing how it is used for the function or block its being called for.,4.0,5.0,4.5,0.7673050761222839,0.7673050165176392,0.7622357606887817,0.7622357606887817
174,174,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"""The “do” statement first evaluates the condition and then executes the lines of code in the statement 0 or more times. 	The “do while” statement executes the lines of code and then it evaluates the condition. """,4.0,5.0,4.5,0.6995461583137512,0.699546217918396,0.6023656129837036,0.6023656129837036
175,175,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,do...while statements evaluate whether or not to loop after running the block contained within it at least once. So the main differance is that while statements have a possibility of never being used. Do ... while statements on the other hand are always run at least once before evaluating whether to run again.,5.0,5.0,5.0,0.6643350720405579,0.6643350720405579,0.6789096593856812,0.6789096593856812
176,176,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"The main difference between a while and a do...while loop is that the do...while loop always cycles through the loop at least once, but the while loop does not always do so.",5.0,5.0,5.0,0.6911609768867493,0.6911609768867493,0.656323254108429,0.656323254108429
177,177,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,While loop used to execute a block of code as long as some condition is true.  A do...while loop used to execute a block of code as long as some condition is satisfied.  The difference between while and do...while is while loop tests its condition before the execution of its contents and the do...while loop tests its condition after the execution of its contents at least once.,5.0,5.0,5.0,0.6883883476257324,0.6883883476257324,0.6036778688430786,0.6036778688430786
178,178,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"The termination condition of a do...while statement is usually at the end of the loop so it will run at least once. As for the while statement, if the condition is false to begin with, then the loop will never run.",5.0,5.0,5.0,0.7295819520950317,0.7295818328857422,0.7088574171066284,0.7088574171066284
179,179,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,A while loop will check the statement to make sure it is true before executing. A do while loop will execute before checking the statement to see if it should run again.,5.0,5.0,5.0,0.7129252552986145,0.7129251956939697,0.6982582807540894,0.6982583403587341
180,180,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"A while statement will test the condition of the while loop FIRST - there is a chance the loop will never run. A do...while loop will ALWAYS run once, and then the while test will determine if it will run again.",5.0,5.0,5.0,0.6353986859321594,0.6353986859321594,0.6251246929168701,0.6251246333122253
181,181,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,a do while loop always executes once. A while loop's conditional statement has to be true for it to run.,5.0,5.0,5.0,0.7274731397628784,0.7274731993675232,0.640974223613739,0.640974223613739
182,182,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,#NAME?,5.0,5.0,5.0,0.31819096207618713,0.31819096207618713,0.39182376861572266,0.39182373881340027
183,183,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"while statements will evaluate the statement BEFORE executing a cycle of the loop, including the first cycle, meaning that a while loop will not always execute. A do...while will run evaluate the statement AFTER running through a cycle of the loop, ensuring that the loop always executes at least one time.",5.0,5.0,5.0,0.653437077999115,0.653437077999115,0.6395824551582336,0.6395823955535889
184,184,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,The main difference between a do and a do...while statement is in a do...while statement is the statements in a do block are always executed atleast once.   The while statement will only execute if its condition is true.,5.0,5.0,5.0,0.80025315284729,0.80025315284729,0.7958831191062927,0.7958831787109375
185,185,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,The loop of a do...while statement always executes once.,4.0,5.0,4.5,0.7612542510032654,0.7612542510032654,0.7405266165733337,0.7405266165733337
186,186,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"a while statement will only process if the statement is met, while a do...while will always process once, then only continue if the statement is met.",5.0,5.0,5.0,0.5836315155029297,0.5836313962936401,0.6115468144416809,0.6115467548370361
187,187,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"Do ...while runs the embedded code at least once, the do command does not necessarily",4.0,4.0,4.0,0.6675717234611511,0.6675716638565063,0.6982580423355103,0.698258101940155
188,188,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"While tests for true first before running, do...while runs once first before checking.",5.0,5.0,5.0,0.65324866771698,0.6532486081123352,0.6406208276748657,0.6406208276748657
189,189,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,A do...while statement's body always executes at least once.  Where as a while statement will not execute at all unless the condition for the while is true.,5.0,5.0,5.0,0.7502745389938354,0.7502745985984802,0.6811882853507996,0.6811884045600891
190,190,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,The statements within the block of the do while loop will always be executed at least once regardless of the conditions. Whereas the while loops may never be executed if the conditions are not met.,5.0,5.0,5.0,0.6971346139907837,0.6971346735954285,0.6564360857009888,0.6564361453056335
191,191,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"a do... while loop will always run through once, while an while loop performs a test before running through the loop.",5.0,5.0,5.0,0.6435911059379578,0.643591046333313,0.6550722122192383,0.6550721526145935
192,192,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,A while statement tests the condition before it can start. A do...while statement loops through once before the condition is tested.,5.0,5.0,5.0,0.6976150870323181,0.6976150870323181,0.5978111624717712,0.5978111028671265
193,193,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"A while loop terminates at the beginning of the loop, a do/while terminates at the end of the loop.",3.0,4.0,3.5,0.648273229598999,0.648273229598999,0.6253917813301086,0.6253917813301086
194,194,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,the loop body always executes at least once,3.0,4.0,3.5,0.6134097576141357,0.613409698009491,0.6472731232643127,0.6472731232643127
195,195,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"While loop evaluates its expression at the top of its loop and decides if it needs to execute, and the do-while always executes at least once and then evaluates its expression at the bottom of its loop.",5.0,5.0,5.0,0.6922286748886108,0.6922286152839661,0.6778197288513184,0.6778197288513184
196,196,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"A do...while statement will always execute the ""do"" piece of code at least once before checking the condition. A while statement will always check the condition first.",5.0,5.0,5.0,0.6982698440551758,0.698269784450531,0.639089047908783,0.6390891075134277
197,197,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"A do-while passes atleast 1 time before checking the condition, however, a while would fail to enter the loop if the condition fails in its first place.",5.0,5.0,5.0,0.6907967329025269,0.6907967925071716,0.6159966588020325,0.6159965991973877
198,198,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"a while loop checks if the condition is true or not first, if it was true, it excutes the statement. a do.. while loop executes the statement before it checks the condition. if the condition was true it would excute the statement again. so a do...while loop would excute the statement atleast once.",5.0,5.0,5.0,0.6695432066917419,0.6695432066917419,0.6004542708396912,0.6004543304443359
199,199,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,NO ANSWER,0.0,0.0,0.0,0.2847978174686432,0.2847978174686432,0.366256445646286,0.3662564158439636
200,200,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"A do...while loop will always execute atleast once, a while loop may never   execute depending on teh conditions.",5.0,5.0,5.0,0.6899887323379517,0.6899888515472412,0.6710006594657898,0.6710006594657898
201,201,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"a while loop is pre-check (it checks the condition statement before it executes the code within the while block)  a do while loop is post-check (it checks the condition AFTER the block executes, it runs at least once no matter what the condition statement is)",5.0,5.0,5.0,0.6302328705787659,0.6302328705787659,0.6112743616104126,0.6112744212150574
202,202,1.7,What is the main difference between a while and a do...while statement?,The block inside a do...while statement will execute at least once.,"))     What is the main difference between a while and a do...while statement? The do while construct consists of a block of code and a condition. First, the code within the block is executed, and then the condition is evaluated, this is done until it is proven false. The difference between the While loop is it tests the condition before the code within the block is executed. ",5.0,5.0,5.0,0.7168204188346863,0.7168204784393309,0.6854391694068909,0.6854391694068909
203,203,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,"For us it is usually a set, get, and displayMessge or other messages that tell you what properties a class has but does not reveal its implementations. You could have anything you want in your own class definition.",1.0,3.0,2.0,0.6932647824287415,0.6932647824287415,0.6310339570045471,0.6310338973999023
204,204,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,The attributes of said class. Also whether or not it is a subclass. Also whether it is public private or protected.,4.0,4.0,4.0,0.6925891041755676,0.6925891637802124,0.6463555097579956,0.6463554501533508
205,205,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,Information telling the compiler what data members and member functions belong to the class.,5.0,5.0,5.0,0.7334148287773132,0.7334148287773132,0.818992018699646,0.818992018699646
206,206,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,"Since class is user defined, the body of the declaration can contain members, that can be either data or function declarations, and optionally access specifiers.  Example for specifiers would be public, private, and protected.  There is the keyword Class and the Class body is enclosed with brackets ({}). ",5.0,5.0,5.0,0.7536867260932922,0.7536866664886475,0.7185264229774475,0.718526303768158
207,207,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,An object and data.,1.0,3.0,2.0,0.7360289096832275,0.7360288500785828,0.7349444627761841,0.7349444627761841
208,208,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,"It's specific class name, includes only information defined by that class... implementation details... etc.",2.0,4.0,3.0,0.7041409015655518,0.7041409611701965,0.6962286233901978,0.6962286233901978
209,209,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,data members and member functions.,5.0,5.0,5.0,0.8416624069213867,0.8416623473167419,0.8757980465888977,0.8757979273796082
210,210,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,A class definition usually contains the function and its data members,5.0,5.0,5.0,0.6347846984863281,0.6347848176956177,0.679826557636261,0.679826557636261
211,211,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,Data members and member functions,5.0,5.0,5.0,0.5809412002563477,0.5809412002563477,0.7783504724502563,0.7783504128456116
212,212,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,member functions,3.0,4.0,3.5,0.3802495002746582,0.3802495002746582,0.6422677636146545,0.6422677636146545
213,213,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,Member functions and data members belonging to the class.,5.0,5.0,5.0,0.742031455039978,0.742031455039978,0.8142736554145813,0.814273476600647
214,214,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,a public and private area that includes the functions and variables that are used in the class,5.0,4.0,4.5,0.5903035402297974,0.5903035402297974,0.6416261792182922,0.6416261196136475
215,215,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,"the keyword class followed by they class name, on the inside you declare public and private declarations of your class",3.0,4.0,3.5,0.6148102283477783,0.6148101091384888,0.518601655960083,0.518601655960083
216,216,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,A class definition typically includes function definitions.,3.0,3.0,3.0,0.7230902314186096,0.7230902314186096,0.7403244376182556,0.7403244376182556
217,217,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,"It begins with Class, followed by the class name, then usually a constructor, data members and member functions that delineates the class is included in any class's definition.",5.0,5.0,5.0,0.7685350775718689,0.7685351371765137,0.7429453134536743,0.7429451942443848
218,218,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,the data and methods,5.0,4.0,4.5,0.3807230591773987,0.3807230293750763,0.6425290107727051,0.6425290107727051
219,219,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,"A constructor, functions, and variables that are accessible to by that class, and possibly other classes depending on how they are done.",5.0,4.0,4.5,0.7272359728813171,0.7272359728813171,0.7774207592010498,0.7774207592010498
220,220,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,Member functions and data members.,5.0,5.0,5.0,0.8203082084655762,0.8203081488609314,0.8466649651527405,0.8466650247573853
221,221,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,"public section and private section, and there must be a semicolon to set the end",1.0,4.0,2.5,0.5986840128898621,0.5986841320991516,0.5515207052230835,0.5515207052230835
222,222,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,member funtions and data members,5.0,5.0,5.0,0.6066467761993408,0.6066467761993408,0.6883284449577332,0.6883283257484436
223,223,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,Data members and Member functions,5.0,5.0,5.0,0.6359037160873413,0.6359037160873413,0.7337105870246887,0.733710527420044
224,224,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,data members and member functions,5.0,5.0,5.0,0.6240662336349487,0.6240662336349487,0.762730598449707,0.762730598449707
225,225,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,"the class name and its public data types such as constructors, methods, functions.",2.0,5.0,3.5,0.8051524758338928,0.8051524758338928,0.7807436585426331,0.7807436585426331
226,226,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,"a constructor and several data members, and at least one public data member or method",4.0,5.0,4.5,0.7108635902404785,0.7108635306358337,0.7267215847969055,0.7267215847969055
227,227,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,"class name, two curly prenthesis, public and private",1.0,3.0,2.0,0.5838592052459717,0.5838590860366821,0.6035741567611694,0.6035742163658142
228,228,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,data members and member functions,5.0,5.0,5.0,0.6240662336349487,0.6240662336349487,0.762730598449707,0.762730598449707
229,229,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,Data and functions,5.0,4.0,4.5,0.4967648983001709,0.4967648684978485,0.7012567520141602,0.7012566924095154
230,230,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,functions and data members that belong to the class,5.0,5.0,5.0,0.5903101563453674,0.5903101563453674,0.7072121500968933,0.7072121500968933
231,231,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,"class variables, function definitions for the class",5.0,5.0,5.0,0.6716129779815674,0.6716128587722778,0.755915105342865,0.7559150457382202
232,232,2.1,What is typically included in a class definition?,Data members (attributes) and member functions.,"A class is an expanded concept of a data structure, it holds both the data and the functions being executed ",5.0,4.0,4.5,0.6866809725761414,0.6866810321807861,0.6825379133224487,0.6825379133224487
233,233,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,Data members are the data components of a particular class.  A member function are the functioning components of the class.,1.0,5.0,3.0,0.8114114999771118,0.8114114999771118,0.7682743072509766,0.7682743072509766
234,234,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,A field variable is a variable that is declared as a member of a class. A local variable is avariable that isdeclared local to a method.,1.0,4.0,2.5,0.782240092754364,0.7822400331497192,0.7511930465698242,0.7511929869651794
235,235,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"Data members are declared inside the class, but outside of any member functions. Unlike with local variables, each object of the class keeps its own copy of the data members stored in memory.",4.0,5.0,4.5,0.853998601436615,0.8539987206459045,0.8203411102294922,0.8203410506248474
236,236,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,Data member are variables that represent an attribute in a class definition.  Local variables declared in a function body cannot be used outside of that function body.  When a function terminates the values of its local variables are lost.,4.0,5.0,4.5,0.8641689419746399,0.8641688823699951,0.8376861810684204,0.8376861214637756
237,237,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,A local variable cannot be accessed outside the function in which it is declared. Data members normally are private. Variables of functions declared private are accessible only to member functions of the class in which they are declared.,5.0,5.0,5.0,0.846685528755188,0.846685528755188,0.8192226886749268,0.819222629070282
238,238,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"A data member is part of a C++ class or structure that stores data of a certain type... A local variable inside a member function is only available inside that function, and can be used to derive a desired outcome.",4.0,5.0,4.5,0.8224275708198547,0.8224275708198547,0.769056499004364,0.7690564393997192
239,239,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,A local variable can only be accessed within the scope of its declaration.,3.0,4.0,3.5,0.7635316848754883,0.7635316848754883,0.6828951239585876,0.6828951239585876
240,240,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,Data members are the atributes of the function and can be used outside the function. Local variable can not be used outside the function and the value is lost after the function terminates.,4.0,5.0,4.5,0.8407674431800842,0.840767502784729,0.8050838112831116,0.8050837516784668
241,241,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"data members are permanent attributes of the class, local variables inside a member function are lost when the scope of the member function ends.",3.0,5.0,4.0,0.8436211347579956,0.8436211943626404,0.7912169694900513,0.7912167906761169
242,242,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,data members are declared in a class definition but outside the bodies of a class's member-function definitions. Local variables are declared in a function definition's body,3.0,5.0,4.0,0.8538333177566528,0.8538333773612976,0.7288360595703125,0.728835940361023
243,243,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"A data member is globally accessible, while a local variable is only accessible inside the member function.",4.0,5.0,4.5,0.603722870349884,0.6037229299545288,0.5833733081817627,0.5833732485771179
244,244,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,A variable inside a member function can only be accessed inside that member and a data member can be accessed throughought the program.,5.0,5.0,5.0,0.626939594745636,0.6269396543502808,0.669154703617096,0.6691546440124512
245,245,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,Local variables are used only within the scope of its declaration,5.0,4.0,4.5,0.6954212784767151,0.6954213976860046,0.6617045402526855,0.6617044806480408
246,246,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"A data member is a more general term describing all objects instantiated within a member function.  ""Local"" in local variables refers more to the scope of a variable, which may be located in anything from a control structure to a class.  Local variables whose scope are in a member function are the same as data members of member functions.",0.0,4.0,2.0,0.8457986116409302,0.8457986116409302,0.7911995649337769,0.7911996245384216
247,247,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,A data member exists permanently in that program's memory as long as it's run.  A local variable inside a member function is temporal and only used to operate in the function and exists as long as the function is run.,2.0,5.0,3.5,0.7102338075637817,0.7102338075637817,0.6580204367637634,0.6580203771591187
248,248,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"local variables can only be used within the function, where as data members can be set to public access and can be used throughout",5.0,5.0,5.0,0.7291378974914551,0.7291379570960999,0.7402600646018982,0.7402599453926086
249,249,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"The local variable is lost once it exits the block of code, while the data member is not.",4.0,5.0,4.5,0.6756047010421753,0.6756048202514648,0.7023493051528931,0.7023493647575378
250,250,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,Every member function can access and modify a data member. A local variable can only be used from the line of declaration to the next closing } before it is lost from memory.,4.0,5.0,4.5,0.799089252948761,0.7990891933441162,0.7664088010787964,0.7664088010787964
251,251,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"data member is accessible to all functions in the class, where local variable is only available to the member function and value is lost when function closes",5.0,5.0,5.0,0.7927810549736023,0.7927811145782471,0.699215829372406,0.6992157697677612
252,252,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,Data members are variables that are declared inside the class definition but outside of the bodies of the class member functions. Local variables can only be used within the function declaration.,4.0,5.0,4.5,0.8939005732536316,0.8939006328582764,0.863067090511322,0.8630669116973877
253,253,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"The data member can be accessed outside of the class, whereas the local variable cannot.",3.0,5.0,4.0,0.7582406997680664,0.7582407593727112,0.6734638214111328,0.673463761806488
254,254,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"Local variables cannot be used outside of that function body. When a function terminates the values of its local variables are lost. Where as data members are variables in a class definition, and they exist throughout the life of the object. ",5.0,5.0,5.0,0.8620126247406006,0.8620126247406006,0.8022494912147522,0.8022494316101074
255,255,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,a local variable in a member function has to be static. a data member can change its value freely.,0.0,4.0,2.0,0.6395711898803711,0.6395712494850159,0.6922634840011597,0.6922634243965149
256,256,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"a local variable is only useable within the function it is defined, whereas a data member is available to any method within its class",5.0,5.0,5.0,0.7144850492477417,0.7144850492477417,0.6519634127616882,0.651963472366333
257,257,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,Variable declared in a function defination's body cannot be used outside of that function.  Data members accessible only to member function of that class.,5.0,5.0,5.0,0.8580010533332825,0.858001172542572,0.8095861673355103,0.8095861673355103
258,258,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"data members   local variables are declared in a function definition’s body. they Cannot be used outside of that function body. When a function terminates, the values of its local variables are lost.   ",5.0,4.0,4.5,0.8581852316856384,0.8581851124763489,0.7737997770309448,0.7737998366355896
259,259,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,local variable is only available in the function.,4.0,5.0,4.5,0.5401582717895508,0.5401582717895508,0.5042091608047485,0.5042091608047485
260,260,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,local variables are accessed inside member functions only while data members   can be accessed throughout the class,4.0,5.0,4.5,0.768405556678772,0.768405556678772,0.7815578579902649,0.7815577387809753
261,261,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"A data member is accessible anywhere in the class, while i local variable in a member function is only accessible in that particular function, and is freed after the function exits.",5.0,5.0,5.0,0.6994779109954834,0.6994779109954834,0.7252166271209717,0.7252165675163269
262,262,2.2,What is the difference between a data member and a local variable inside a member function?,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,"a Data member is encapsulated within a class or object,  it is static and can be shared by all instances of that class.  however local variable's are only used from the function or block in which it is declared and not the whole class. other wise they would be called global variables. ",3.0,5.0,4.0,0.8005340695381165,0.8005340099334717,0.7948572039604187,0.7948572039604187
263,263,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",A constructor initializes an object or objects of a class.  A function of a class performs a task such as display a line of text or do some kind of mathematical operations.,2.0,3.0,2.5,0.7874144911766052,0.7874144315719604,0.8108455538749695,0.810845673084259
264,264,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","all constructors are functions but not all functions are constructors. Also functions can have nearly infinite purposes, while constructors always create an instance of whichever class you are using. You can change how a constructor does something but not what it does. With functions you can change not only the how but also the what.",2.0,4.0,3.0,0.8232644200325012,0.8232644200325012,0.8351966142654419,0.8351965546607971
265,265,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","Unlike regular functions, constructors are only used to initialize an object’s data when it is created. Constructors must also be given the same name as the class and cannot return any values. ",5.0,5.0,5.0,0.8746286630630493,0.8746286034584045,0.8439497351646423,0.8439497947692871
266,266,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","A constructor typically used to intialize data members and allocate resources, for instance memory, files, etc.  Also a constructor cannot return values.  Functions are operations that maybe globally defined.",4.0,5.0,4.5,0.8482534289360046,0.8482533693313599,0.8417126536369324,0.8417126536369324
267,267,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","Constructors cannot return values, so they cannot specify a return type. Normally, constructors are declared public.",3.0,5.0,4.0,0.8932213187217712,0.8932213187217712,0.866496741771698,0.8664966821670532
268,268,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",A constructor is a method that starts new instances of a class. (Example: Employee employee1(parameters) starts a new instance of object of type Employee). A function is simply a module w/in a program that completes its single desired task.,2.0,4.0,3.0,0.8093901276588441,0.8093900680541992,0.829487144947052,0.8294870853424072
269,269,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",A constructor is called whenever a new object of that class is made.,4.0,3.0,3.5,0.7919888496398926,0.7919887900352478,0.7567768692970276,0.7567768692970276
270,270,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",A constructor does not return any date and has no return type.  Functions can return date or not return data can have a return type.,3.0,5.0,4.0,0.6652233004570007,0.6652233004570007,0.7404727339744568,0.7404728531837463
271,271,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","A constructor is automatically called whenever an instance of a class is created, a function must be explicitly called by the user. ",4.0,4.0,4.0,0.8419110178947449,0.8419108390808105,0.8132796287536621,0.8132796287536621
272,272,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","constructors cannot return values, so they cannot specify a return type like functions can.",3.0,5.0,4.0,0.8121048808097839,0.8121048212051392,0.8342198729515076,0.8342198729515076
273,273,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",A constructor is a function used to initialize an object's data when it is created.,4.0,3.0,3.5,0.7237715125083923,0.7237715125083923,0.7310313582420349,0.7310312986373901
274,274,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",a constructor initialises everything so that nothing is left empty or with random varioubles and a function modifies those variables with data.,2.0,3.0,2.5,0.6608315110206604,0.6608315706253052,0.7121326327323914,0.7121326327323914
275,275,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",A constructor initialized values at the execution of its instantiation. It provides default values.,4.0,3.0,3.5,0.7642577886581421,0.7642576694488525,0.7423611283302307,0.7423610687255859
276,276,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","A constructor sets up the default values of variables when an object is instantiated, whereas a function allows interaction with that object.",4.0,4.0,4.0,0.7965611219406128,0.796561062335968,0.8307745456695557,0.8307746052742004
277,277,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","A constructor is used to create an object that can be employed in the main function of a program.  This may or may not execute code along with it.  A function is a set of code that executes when called, but does not create a new object.",3.0,3.0,3.0,0.7959557175636292,0.7959555983543396,0.818687915802002,0.8186877965927124
278,278,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",a constructor initializes data members but the functions actually perform tasks. Constructors cant return values either.,3.0,5.0,4.0,0.8226158022880554,0.8226156830787659,0.817232072353363,0.8172320127487183
279,279,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","a constructor does not need a type, and it is used to initialize the variables.",3.0,4.0,3.5,0.7943156957626343,0.7943156361579895,0.7778770327568054,0.7778770327568054
280,280,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",Constructors don't have a return type.,3.0,5.0,4.0,0.7892370223999023,0.7892370223999023,0.7072163224220276,0.7072163224220276
281,281,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",constructor creates the class object into memory where functions perform actions against that object,2.0,4.0,3.0,0.597635805606842,0.5976357460021973,0.643952488899231,0.6439524292945862
282,282,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",constructors cannot return values,3.0,5.0,4.0,0.574968159198761,0.5749680995941162,0.6067280769348145,0.6067281365394592
283,283,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",A constructor initializes values and a function usual performs some sort of operation.,2.0,3.0,2.5,0.6807173490524292,0.6807172894477844,0.7503643035888672,0.750364363193512
284,284,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",A constructor is a function used to initialize an object's data when it is created. It's call is made implicitly when the object is created and must be defined with the same name as the class. Constructor also cannot return a value like a function can.,5.0,5.0,5.0,0.8435141444206238,0.843514084815979,0.8446595668792725,0.8446595668792725
285,285,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",A constructor is used to create an instance of a class and has the same name as that class. A function cannot have the same name as a class and computes data.,4.0,4.0,4.0,0.7703284025192261,0.7703283429145813,0.7741897702217102,0.7741896510124207
286,286,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","a constructor is a function that initializes a class instance, a function performs whatever task it is written for",2.0,4.0,3.0,0.6993085145950317,0.6993084549903871,0.7296304702758789,0.7296305894851685
287,287,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","A constructor cannot return values, not even void, but function get a return value.",3.0,5.0,4.0,0.7749056816101074,0.7749057412147522,0.7693802714347839,0.7693802714347839
288,288,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","a constructor cannot return values, its not even void. it is used to initialize an object's data when it is created. whereas, a function is created to do a specific task, and it can return values.",5.0,5.0,5.0,0.8061370849609375,0.8061371445655823,0.8431639075279236,0.8431638479232788
289,289,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",A constructor initializes an object. A function is part of an object.,1.0,4.0,2.5,0.7588860988616943,0.7588860392570496,0.7787883877754211,0.7787883877754211
290,290,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",constructors initialize the data that is then used in the calculations of a   function,2.0,3.0,2.5,0.5991371870040894,0.5991371870040894,0.5865073204040527,0.5865073204040527
291,291,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","a constructor is called when the class is created, a function can be called any time.",4.0,3.0,3.5,0.7380573153495789,0.7380573749542236,0.7650479674339294,0.7650479674339294
292,292,2.3,What is the difference between a constructor and a function?,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.","constructor is a special block of statements called when an object is created, either when it is declared statically or constructed on the stack. However a function is a portion of code within a larger program, which performs a specific task and independent to the rest of the code. ",4.0,4.0,4.0,0.7952183485031128,0.7952182292938232,0.8434953689575195,0.8434953689575195
293,293,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",The compiler creates a default constructor when we do not define one in our class file,5.0,5.0,5.0,0.5946215391159058,0.594621479511261,0.6166929006576538,0.616692841053009
294,294,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",during compilation,2.0,5.0,3.5,0.29093191027641296,0.29093191027641296,0.41173794865608215,0.41173794865608215
295,295,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When the class does not explicitly include a constructor.,5.0,5.0,5.0,0.674889326095581,0.6748892664909363,0.6110779047012329,0.6110778450965881
296,296,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When no parameters are set is when a default constructor is used.,3.0,3.0,3.0,0.6666776537895203,0.6666775941848755,0.6296601891517639,0.6296601891517639
297,297,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When a class does not explicitly include a constructor.,5.0,5.0,5.0,0.674889326095581,0.6748892664909363,0.6110779047012329,0.6110778450965881
298,298,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When there are no arguments passed.,1.0,2.0,1.5,0.6787693500518799,0.6787693500518799,0.5607473254203796,0.5607473254203796
299,299,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",when there is not one already for a specific class,5.0,5.0,5.0,0.4460485577583313,0.4460485577583313,0.4769972562789917,0.4769972562789917
300,300,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When it the programs compiles,2.0,5.0,3.5,0.3075399696826935,0.3075399398803711,0.48624923825263977,0.4862491488456726
301,301,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",when a constructor is not provided by the programmer of the class,5.0,5.0,5.0,0.4719801545143128,0.4719800353050232,0.5161963701248169,0.5161963105201721
302,302,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",In any class that does not explicitly include a constructor.,5.0,5.0,5.0,0.7180201411247253,0.7180201411247253,0.6520334482192993,0.6520334482192993
303,303,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",Before the main function of the code.,0.0,2.0,1.0,0.6515799760818481,0.6515799760818481,0.6202846169471741,0.6202845573425293
304,304,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",whenevery you dont specifiy your own,5.0,5.0,5.0,0.25589925050735474,0.25589922070503235,0.5176190137863159,0.5176189541816711
305,305,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When non are provided,5.0,5.0,5.0,0.380622148513794,0.3806222081184387,0.40083086490631104,0.4008308947086334
306,306,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",C++ will create a default constructor when no other constructor is present.,5.0,5.0,5.0,0.5505719780921936,0.5505720376968384,0.5949470400810242,0.5949470400810242
307,307,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.","When no constructor was specified in the constructor's class, but the class is instantiated in a program.",5.0,5.0,5.0,0.7617365717887878,0.7617365121841431,0.7380375862121582,0.7380375862121582
308,308,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.","When no constructor exists when one is needed, a parameterless default constructor is declared.",5.0,5.0,5.0,0.7494298219680786,0.7494298219680786,0.7143203020095825,0.7143203020095825
309,309,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.","The Compiler creates this automatically for you, unless you specifically create one.",5.0,5.0,5.0,0.764110803604126,0.764110803604126,0.7511696815490723,0.7511696815490723
310,310,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",In any class that doesn't explicitly include a constructor.,5.0,5.0,5.0,0.7403964400291443,0.7403964996337891,0.6461948156356812,0.6461947560310364
311,311,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",when no user-defined constructor exists,5.0,5.0,5.0,0.4709980487823486,0.4709980487823486,0.523771345615387,0.523771345615387
312,312,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.","If a class does not explicitly include a constructor, the compiler creates one.",5.0,5.0,5.0,0.8678798675537109,0.8678798079490662,0.834856390953064,0.8348565101623535
313,313,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When you do not provide your own constructor.,5.0,5.0,5.0,0.601445734500885,0.6014456748962402,0.6012916564941406,0.6012916564941406
314,314,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When a class does not explicitly include a constructor.,5.0,5.0,5.0,0.674889326095581,0.6748892664909363,0.6110779047012329,0.6110778450965881
315,315,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",C++ creates a default constructor during compilation if one is not provided.,5.0,5.0,5.0,0.7068348526954651,0.7068348526954651,0.741455614566803,0.7414555549621582
316,316,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",when a class does not explicitly include a constructor,5.0,5.0,5.0,0.4516555666923523,0.4516555666923523,0.4183933138847351,0.4183933138847351
317,317,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",The compiler will provide one when class does not explictly include a consructor.,5.0,5.0,5.0,0.6462888121604919,0.6462888121604919,0.713955819606781,0.7139557600021362
318,318,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",when the programmer does not explicitly include a constructor,5.0,5.0,5.0,0.42774152755737305,0.42774152755737305,0.4838963747024536,0.4838963747024536
319,319,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When one is not explicitly stated.,5.0,5.0,5.0,0.6066502332687378,0.6066502332687378,0.6288504600524902,0.6288504004478455
320,320,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",when one is not explicitly included by a class,5.0,5.0,5.0,0.5352062582969666,0.5352061986923218,0.517720639705658,0.5177205801010132
321,321,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When you dont specify any constructors.,5.0,5.0,5.0,0.6574510931968689,0.6574509739875793,0.6356610059738159,0.6356610059738159
322,322,2.4,When does C++ create a default constructor?,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.","at the very beginning when you run a complier, matter a fact in C++ it generates its own default constructor for the class provided if no other constructors have been provided by user",5.0,5.0,5.0,0.7178151607513428,0.717815101146698,0.6697616577148438,0.6697616577148438
323,323,2.5,How many constructors can be created for a class?,Unlimited number.,Just one per class.,0.0,0.0,0.0,0.6422449946403503,0.6422449350357056,0.659972071647644,0.659972071647644
324,324,2.5,How many constructors can be created for a class?,Unlimited number.,As many as you want so long as they have different parameters.,5.0,5.0,5.0,0.6523070335388184,0.6523069143295288,0.6617547869682312,0.661754846572876
325,325,2.5,How many constructors can be created for a class?,Unlimited number.,"There is no limit to the number of constructors in a class because like functions, constructors can be overloaded.",5.0,5.0,5.0,0.6535327434539795,0.6535326838493347,0.7113029360771179,0.7113030552864075
326,326,2.5,How many constructors can be created for a class?,Unlimited number.,It depends what type of class is being defined.  Typically you would have a constructor call for each object.,1.0,2.0,1.5,0.5343253612518309,0.5343253612518309,0.6067191958427429,0.6067192554473877
327,327,2.5,How many constructors can be created for a class?,Unlimited number.,"In C++, the constructor can be overloaded in that there can be more than one constructor for a class, each having different parameters.",5.0,5.0,5.0,0.5647810697555542,0.5647810101509094,0.5434010028839111,0.5434010624885559
328,328,2.5,How many constructors can be created for a class?,Unlimited number.,1,0.0,0.0,0.0,0.3493734300136566,0.3493734300136566,0.41071969270706177,0.410719633102417
329,329,2.5,How many constructors can be created for a class?,Unlimited number.,any number you want,5.0,5.0,5.0,0.4218595325946808,0.4218595623970032,0.6017060279846191,0.6017059683799744
330,330,2.5,How many constructors can be created for a class?,Unlimited number.,One,0.0,0.0,0.0,0.4194485545158386,0.4194485247135161,0.47097617387771606,0.47097620368003845
331,331,2.5,How many constructors can be created for a class?,Unlimited number.,"by default just one, but they may be overloaded to create as many constructors as necessary",5.0,5.0,5.0,0.5305725336074829,0.5305725336074829,0.5322768688201904,0.5322768688201904
332,332,2.5,How many constructors can be created for a class?,Unlimited number.,as many as you want,5.0,5.0,5.0,0.44791409373283386,0.44791412353515625,0.4222613573074341,0.4222613573074341
333,333,2.5,How many constructors can be created for a class?,Unlimited number.,"As many as you want, with different parameters.",5.0,5.0,5.0,0.639040470123291,0.6390403509140015,0.6396321654319763,0.6396321654319763
334,334,2.5,How many constructors can be created for a class?,Unlimited number.,infinite,5.0,5.0,5.0,0.450522780418396,0.4505227506160736,0.554128885269165,0.5541288256645203
335,335,2.5,How many constructors can be created for a class?,Unlimited number.,as many as you need,5.0,5.0,5.0,0.4071571826934815,0.4071571826934815,0.4242992103099823,0.4242991805076599
336,336,2.5,How many constructors can be created for a class?,Unlimited number.,"As many as are needed, depending on how many variables one wishes to directly modify or leave as default when instantiating an object.",5.0,5.0,5.0,0.5300441384315491,0.5300441384315491,0.5721190571784973,0.5721190571784973
337,337,2.5,How many constructors can be created for a class?,Unlimited number.,"A very large amount of constructors can be created for any given class through overloading.  When two constructors with a different type or number of parameters are created, they are said to be overloaded, and C++ can recognize which constructor to use based on the type of the variables that are passed/returned.",5.0,5.0,5.0,0.5594523549079895,0.5594522953033447,0.5409908890724182,0.540990948677063
338,338,2.5,How many constructors can be created for a class?,Unlimited number.,It depends on the number of objects. Each object should have a constructor.,1.0,4.0,2.5,0.6259883046150208,0.6259883046150208,0.6531305909156799,0.6531306505203247
339,339,2.5,How many constructors can be created for a class?,Unlimited number.,"Theoretically unlimited, as long as they are defined by the programmer.",5.0,5.0,5.0,0.6552776098251343,0.6552776694297789,0.6371410489082336,0.6371411085128784
340,340,2.5,How many constructors can be created for a class?,Unlimited number.,As many as needed.,5.0,5.0,5.0,0.6528360843658447,0.6528360843658447,0.5919638276100159,0.5919638276100159
341,341,2.5,How many constructors can be created for a class?,Unlimited number.,as many as wanted/needed,5.0,5.0,5.0,0.3003119230270386,0.3003118932247162,0.42353448271751404,0.42353448271751404
342,342,2.5,How many constructors can be created for a class?,Unlimited number.,several,4.0,5.0,4.5,0.3712854385375977,0.3712853789329529,0.5003160238265991,0.5003159642219543
343,343,2.5,How many constructors can be created for a class?,Unlimited number.,One,0.0,0.0,0.0,0.4194485545158386,0.4194485247135161,0.47097617387771606,0.47097620368003845
344,344,2.5,How many constructors can be created for a class?,Unlimited number.,one,0.0,0.0,0.0,0.3593411445617676,0.3593411445617676,0.4811229705810547,0.4811229705810547
345,345,2.5,How many constructors can be created for a class?,Unlimited number.,There can be infinite constructors as long as the signature is different.,5.0,5.0,5.0,0.6214562654495239,0.6214562654495239,0.6688661575317383,0.6688660979270935
346,346,2.5,How many constructors can be created for a class?,Unlimited number.,that depends on the number of data members in the class,0.0,3.0,1.5,0.4926712214946747,0.4926711320877075,0.5867428779602051,0.5867429971694946
347,347,2.5,How many constructors can be created for a class?,Unlimited number.,one,0.0,0.0,0.0,0.3593411445617676,0.3593411445617676,0.4811229705810547,0.4811229705810547
348,348,2.5,How many constructors can be created for a class?,Unlimited number.,you can overload constructors as you need,5.0,5.0,5.0,0.4029761850833893,0.4029762148857117,0.4434647858142853,0.4434647560119629
349,349,2.5,How many constructors can be created for a class?,Unlimited number.,As many as the programmer wants to create.,5.0,5.0,5.0,0.5837982296943665,0.583798348903656,0.5341800451278687,0.5341801047325134
350,350,2.5,How many constructors can be created for a class?,Unlimited number.,one,0.0,0.0,0.0,0.3593411445617676,0.3593411445617676,0.4811229705810547,0.4811229705810547
351,351,2.5,How many constructors can be created for a class?,Unlimited number.,"as many as you want, as long as they each have a unique argument list",5.0,5.0,5.0,0.5591261982917786,0.5591261386871338,0.6162752509117126,0.6162753105163574
352,352,2.5,How many constructors can be created for a class?,Unlimited number.,as many as the user decides to use.,5.0,5.0,5.0,0.5982975363731384,0.5982974767684937,0.5497180223464966,0.5497179627418518
353,353,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",A function definition does not require any additional information that needs to be passed inside its parenthesis  to execute. While a definition prototype requires more than one parameters to be passed in order to complete its  task.,5.0,3.0,4.0,0.6970193386077881,0.6970193386077881,0.6590703725814819,0.6590703129768372
354,354,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","The FUNCTION PROTOTYPE is where the programmer declares that he/she is using a function other than main( ). This is like declaring a variable, the programmer knows that he/she will be using in the future, but has yet to say where they are going to use it, or how. This is answers the question who, it gives the function a name and character. The function prototype, by common practice is placed at the beginning of the program after the #includes and before main( ). The FUNCTION DEFINITION is the guts of the function. This is where the programmer decides what the function is going to do and tells it how to do it. It takes whatever information it is given and performs the operations. It works sort of like the brain, the brain takes in input and based upon that input performs in some way producing an output. The function defintion is placed outside of main( ) and any other functions. A function is its own entity and should be thought of as such.",1.0,4.0,2.5,0.7534885406494141,0.7534884810447693,0.7681043744087219,0.7681043148040771
355,355,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","A function prototype tells the compiler the function name, return type and the number and type of parameters without revealing the implementations contained in the function definition.",5.0,5.0,5.0,0.7563341856002808,0.7563341856002808,0.7817386984825134,0.7817387580871582
356,356,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",Function prototype is a declaration.  Function definitions (w/multiple parameters) often require more than one piece of information. to perform their tasks.,3.0,3.0,3.0,0.8181436061859131,0.8181436061859131,0.7426345944404602,0.7426345944404602
357,357,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","A function prototype is a declaration of a function that tells the compiler the function's name, its return type and the types of its parameters.",5.0,5.0,5.0,0.7808768153190613,0.7808769345283508,0.8063995838165283,0.8063995242118835
358,358,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",A prototype shows only return types and necessary parameters. The definition includes names for those parameters and defines what the object is actually capable of doing.,5.0,4.0,4.5,0.7967714667320251,0.7967714667320251,0.7616859078407288,0.7616859078407288
359,359,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",prototype only tells the user what data types go into a function and what type is returned.,5.0,4.0,4.5,0.7187476754188538,0.7187476754188538,0.6401392817497253,0.6401392221450806
360,360,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",Function prototype is located in the .h file and only contains the access function name and paramater type.  Function definition contains the code for the function to perform its activity.,4.0,5.0,4.5,0.7536431550979614,0.7536431550979614,0.7577303647994995,0.7577303051948547
361,361,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","a function prototype is used to reference the compiler to a function that will be defined later on, a function definition is the actual function itself, complete with return type, parameters, etc...",4.0,4.0,4.0,0.8488061428070068,0.8488061428070068,0.7821279168128967,0.782127857208252
362,362,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",A function prototype describes a class's public interface without revealing the class's member function implementations,5.0,4.0,4.5,0.6924567222595215,0.6924567222595215,0.6287072896957397,0.6287072896957397
363,363,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","Function definitions are just that, the definition. The prototype is what the compiler uses to check that calls to function are correct.",1.0,3.0,2.0,0.768690824508667,0.768690824508667,0.744595468044281,0.744595468044281
364,364,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",a prototype does not include any actual code where the function has all the code that is executed in the program.,3.0,3.0,3.0,0.6960068941116333,0.6960068941116333,0.5835472345352173,0.5835471749305725
365,365,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",a prototype declares what will be used in the program and the definition,3.0,3.0,3.0,0.5061665773391724,0.5061666369438171,0.4178977608680725,0.4178977906703949
366,366,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","A function prototype lays out the name, return type, and the number and types of parameters the function expects to receive in a certain order.  The details for function prototypes are in the function definition.",5.0,5.0,5.0,0.8220179677009583,0.8220179080963135,0.8565758466720581,0.8565757870674133
367,367,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","A function definition is the code that defines the function placed in the {} brackets that determines that function's operation.  A function prototype shows the function's public interface without exposing implementation.  It shows name, return type and type of paramaters.",5.0,5.0,5.0,0.8500463962554932,0.8500463366508484,0.8486173152923584,0.8486172556877136
368,368,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","A function prototype is just a declaration of the function existing, and cant be used as an actual function. A function has to be created with a definition within to tell the compiler what the function does.",3.0,4.0,3.5,0.749257504940033,0.7492574453353882,0.7277143001556396,0.7277143597602844
369,369,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",the Prototype creates a framework to call the function definition. While a function definition is where the function is actually programmed out and created into a final product.,5.0,4.0,4.5,0.7246735692024231,0.7246735692024231,0.6707469820976257,0.670746922492981
370,370,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",A function prototype describes the class's public interface without providing how the function works. A function definition contains the inner workings of the function.,5.0,4.0,4.5,0.8107504844665527,0.8107505440711975,0.750879168510437,0.7508792281150818
371,371,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","prototype states all functions in that class before compilation, where the definition actually holds the source for the functions",3.0,4.0,3.5,0.676785409450531,0.6767853498458862,0.6178053617477417,0.6178053617477417
372,372,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","Function prototypes tell the compiler the function names, its return type, and the types of its parameters where as, function definitions actually implement the member functions.",5.0,5.0,5.0,0.7809526920318604,0.7809526920318604,0.7678797245025635,0.7678797841072083
373,373,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",A function prototype just specifies parameters.  A function definition includes parameters and a code body.,4.0,4.0,4.0,0.8193618655204773,0.8193618655204773,0.8011161684989929,0.8011161684989929
374,374,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",Function prototypes describe the class's public interface,5.0,4.0,4.5,0.6388397216796875,0.6388396620750427,0.5757538676261902,0.5757538676261902
375,375,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","A prototype only declares name, return type, and input type. A definition also defines the scope, variables, process, and return function ",4.0,5.0,4.5,0.8289012312889099,0.8289011120796204,0.8976988196372986,0.8976989388465881
376,376,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","a function prototype simply declares the functions parameters, the function definition includes any necessary variables and the function's actual code",4.0,4.0,4.0,0.6730586886405945,0.6730586886405945,0.7291766405105591,0.7291766405105591
377,377,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","A functgion prototype is a declaration of a function , while function definition specifies what a function does",3.0,4.0,3.5,0.5763326287269592,0.5763326287269592,0.639747679233551,0.6397477388381958
378,378,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","in a function prototype you include the return type, the name of the function, and its parameters if any are needed.  in a function definition you write the code of what the function will do. ",5.0,5.0,5.0,0.7804242968559265,0.7804243564605713,0.8686622381210327,0.8686621189117432
379,379,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","A function definition contains all the code for a function to work. A function prototype just shows the output, input and function name.",5.0,4.0,4.5,0.7987551689147949,0.7987551689147949,0.8120788931846619,0.8120788931846619
380,380,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","function prototype describe the class's public interface without revealing   the class's member function implementations,  function definitions show what   implementations are being done",5.0,4.0,4.5,0.7528419494628906,0.7528418898582458,0.681459903717041,0.6814598441123962
381,381,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.","A function prototype only names the function, its return type, and it's argument list, while a definition defines the above as well as what the function actually does.",5.0,5.0,5.0,0.8627373576164246,0.8627374172210693,0.8704736828804016,0.8704735636711121
382,382,2.6,What is the difference between a function prototype and a function definition?,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",function prototype describes a classes interface without reviling whatever is inside as for the function definition can't do that.,5.0,4.0,4.5,0.6864985227584839,0.6864984631538391,0.6075500845909119,0.6075501441955566
383,383,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",the role of a header file list all the functions a class can do while hiding the inner workings of its functions,5.0,4.0,4.5,0.6617738008499146,0.6617738604545593,0.6908454298973083,0.6908453702926636
384,384,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",The main role of header file is it is used to share information among various files.,3.0,3.0,3.0,0.7707528471946716,0.7707529067993164,0.6981674432754517,0.6981675028800964
385,385,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",Header files separate files in which classes are defined and allow the compiler to recognize classes when used elsewhere.,4.0,3.0,3.5,0.7668821811676025,0.7668821811676025,0.7272922396659851,0.7272922396659851
386,386,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",No,0.0,0.0,0.0,0.35487571358680725,0.35487571358680725,0.23449331521987915,0.23449331521987915
387,387,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.","A header file consists of ""reusable"" source code such as a class in a file that by convention has a .h filename extension. This differs from .cpp files that contain ""source-code.""",4.0,3.0,3.5,0.7828793525695801,0.7828794121742249,0.6999946236610413,0.6999946236610413
388,388,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.","To provide information about the contents of a library. It includes the definition of classes, declarations of functions, data types, and constants.",5.0,4.0,4.5,0.85898756980896,0.8589875102043152,0.8178489804267883,0.8178489208221436
389,389,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",the header file shows the user what types go into and come out of a function but does not allow a user to manipulate the actual code for the function.,5.0,4.0,4.5,0.7730218172073364,0.7730218172073364,0.7393869161605835,0.7393869161605835
390,390,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",Header files declares the class member functions.,3.0,4.0,3.5,0.8364828824996948,0.8364828824996948,0.7730128169059753,0.7730126976966858
391,391,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",A header file allows for the separation of declaration and implementation into separate files.,5.0,3.0,4.0,0.7342911362648009,0.7342911362648009,0.7315842509269714,0.7315842509269714
392,392,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",the header file has access to the C++ Standard Library and makes certain classes like class string work.,0.0,3.0,1.5,0.7955858707427979,0.7955858707427979,0.7397733926773071,0.7397733330726624
393,393,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",“Instruct” the compiler on how to interface with library and user-written components.,2.0,3.0,2.5,0.7792578935623169,0.7792578935623169,0.7682226896286011,0.7682227492332458
394,394,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",create a comon area to contain reusable functions.,3.0,3.0,3.0,0.7477866411209106,0.7477865219116211,0.7220876216888428,0.7220876812934875
395,395,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",to declare the functions being used in the classes,3.0,3.0,3.0,0.5864537358283997,0.5864536762237549,0.6337604522705078,0.6337605118751526
396,396,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.","#include ""hat.h""  allows the use of the hat container, so called from the act of pulling names from a hat.  The header file for hat includes functions for storage and retrieval of it's contents, mainly put(), peek(), and pull().",0.0,3.0,1.5,0.7375056743621826,0.7375057339668274,0.7180063128471375,0.7180063128471375
397,397,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",To hold reusable content or modules separate from the actual  source-code file that can be easily referenced and employed for different programs.,5.0,3.0,4.0,0.7529044151306152,0.7529044151306152,0.7602351903915405,0.7602352499961853
398,398,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",a header file is a file used to store a list of prototye functions and data members.,5.0,5.0,5.0,0.7416021823883057,0.7416021823883057,0.7518114447593689,0.7518114447593689
399,399,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.","A header file is a cross communication method between source files, to help limit the size of each individual program. Without header files a program will be 1 large lump of code and thus fairly hard to debug and traverse.",3.0,4.0,3.5,0.7535396218299866,0.7535396814346313,0.7229503393173218,0.722950279712677
400,400,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",It contains reusable source code for use by other classes.,3.0,3.0,3.0,0.7884507179260254,0.7884506583213806,0.7402130365371704,0.7402130365371704
401,401,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.","to separate the source code from the main function, allows the methods/classes to be included in the program without direct coding. allows re usability.",4.0,3.0,3.5,0.789536714553833,0.789536714553833,0.7703767418861389,0.7703766822814941
402,402,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",Header files have reusable source code in a file that a programer can use.,3.0,2.0,2.5,0.7847239971160889,0.7847239971160889,0.7439331412315369,0.7439330220222473
403,403,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",To hide the definition and details of a class.  Also to help readability of the main C++ file.,4.0,3.0,3.5,0.8021327257156372,0.8021326661109924,0.7913081049919128,0.7913081049919128
404,404,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",To allow the compiler to recognize the classes when used elsewhere.,3.0,4.0,3.5,0.7508251667022705,0.7508251070976257,0.7366113066673279,0.7366113662719727
405,405,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.","A header file declares a class, its data, and functions available through that class.",5.0,3.0,4.0,0.8626725673675537,0.8626726865768433,0.7630677223205566,0.7630677223205566
406,406,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",header files contain code which can be used in multiple files,3.0,3.0,3.0,0.6591115593910217,0.6591115593910217,0.6099092960357666,0.6099092960357666
407,407,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",Allow compiler to recognize the classes when used elsewhere,3.0,3.0,3.0,0.5519371032714844,0.5519371032714844,0.6042667031288147,0.6042666435241699
408,408,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",Allow compiler to recognize the classes when used elsewhere,3.0,4.0,3.5,0.5519371032714844,0.5519371032714844,0.6042667031288147,0.6042666435241699
409,409,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",To promote function reusuablitly,3.0,3.0,3.0,0.460442990064621,0.460442990064621,0.5035659074783325,0.5035659074783325
410,410,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",class definitions are placed here,3.0,3.0,3.0,0.523431658744812,0.5234315395355225,0.5529170036315918,0.5529170036315918
411,411,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",A header file usually contains class and/or function prototypes.,4.0,5.0,4.5,0.7668671607971191,0.7668672800064087,0.7615106105804443,0.7615104913711548
412,412,2.7,What is the role of a header-file?,"To store a class interface, including data members and member function prototypes.",contains all the standard C++ library's i.e. string,0.0,2.0,1.0,0.7246252298355103,0.7246252298355103,0.6444278359413147,0.6444278359413147
413,413,3.1,What does a function signature include?,The name of the function and the types of the parameters.,"It includes the name of the program, the type of parameters it can take. It should also include a brief description of what the function does.",4.0,5.0,4.5,0.713326632976532,0.7133266925811768,0.7607156038284302,0.760715663433075
414,414,3.1,What does a function signature include?,The name of the function and the types of the parameters.,it includes the specific information about the function such as input and output variable types and how many of each.,1.0,5.0,3.0,0.6614333987236023,0.6614333987236023,0.7209381461143494,0.7209381461143494
415,415,3.1,What does a function signature include?,The name of the function and the types of the parameters.,The function signature includes the name of the function and the types of its arguments.,5.0,5.0,5.0,0.8964143991470337,0.8964143991470337,0.8858929872512817,0.8858931064605713
416,416,3.1,What does a function signature include?,The name of the function and the types of the parameters.,"A function signature consists of the function prototype.  This tells you the general information about a function, its name, parameters, what scope it is in, and other miscellaneous information.",4.0,5.0,4.5,0.6006676554679871,0.6006676554679871,0.7056289911270142,0.7056289911270142
417,417,3.1,What does a function signature include?,The name of the function and the types of the parameters.,It includes the name of the function and the types of its arguments.,5.0,5.0,5.0,0.833749532699585,0.8337494730949402,0.8503757119178772,0.850375771522522
418,418,3.1,What does a function signature include?,The name of the function and the types of the parameters.,"Name, paramaters, scope, and other general function information",4.0,5.0,4.5,0.5945252776145935,0.5945252776145935,0.6452311277389526,0.6452312469482422
419,419,3.1,What does a function signature include?,The name of the function and the types of the parameters.,It includes a function name and parameter list. Does not include return type. Function signatures must be different.,5.0,5.0,5.0,0.6977245211601257,0.6977245211601257,0.8002112507820129,0.8002113103866577
420,420,3.1,What does a function signature include?,The name of the function and the types of the parameters.,input parameters and return type,1.0,5.0,3.0,0.5249779224395752,0.5249780416488647,0.6447691321372986,0.6447691321372986
421,421,3.1,What does a function signature include?,The name of the function and the types of the parameters.,The portion of the function prototyp tha has the function name and the arguments but NOT the return type.,5.0,5.0,5.0,0.7919344902038574,0.7919344902038574,0.7882124781608582,0.7882124781608582
422,422,3.1,What does a function signature include?,The name of the function and the types of the parameters.,Name of the function and the types of it's arguments,5.0,5.0,5.0,0.6899430751800537,0.6899430155754089,0.7278292775154114,0.7278293371200562
423,423,3.1,What does a function signature include?,The name of the function and the types of the parameters.,The name of the function and the types of its arguments.,5.0,5.0,5.0,0.9451704621315002,0.9451705813407898,0.9480037689208984,0.9480038285255432
424,424,3.1,What does a function signature include?,The name of the function and the types of the parameters.,Includes the name of the function and the types of its arguments.,5.0,5.0,5.0,0.8293464183807373,0.8293464183807373,0.8471730351448059,0.8471730351448059
425,425,3.1,What does a function signature include?,The name of the function and the types of the parameters.,"identification of a function and the data types of its parameters, it has the name, and the data type variables ",5.0,5.0,5.0,0.6950177550315857,0.6950177550315857,0.7587960958480835,0.758796215057373
426,426,3.1,What does a function signature include?,The name of the function and the types of the parameters.,"a return type, and input parameters",1.0,5.0,3.0,0.6424337029457092,0.6424337029457092,0.7272790670394897,0.7272792458534241
427,427,3.1,What does a function signature include?,The name of the function and the types of the parameters.,The function signature includes the method name and the input types.,5.0,5.0,5.0,0.8636948466300964,0.8636948466300964,0.867983877658844,0.867983877658844
428,428,3.1,What does a function signature include?,The name of the function and the types of the parameters.,"A function signature includes the name of the function and types of arguments, but not the return type.  ",5.0,5.0,5.0,0.7628533840179443,0.7628533840179443,0.8369563221931458,0.8369565606117249
429,429,3.1,What does a function signature include?,The name of the function and the types of the parameters.,The signature can include a result type and thrown errors.,1.0,3.0,2.0,0.7969583868980408,0.796958327293396,0.7927367687225342,0.792736828327179
430,430,3.1,What does a function signature include?,The name of the function and the types of the parameters.,"function name, and input paramaters",5.0,5.0,5.0,0.5838224291801453,0.5838223099708557,0.7533499002456665,0.7533499002456665
431,431,3.1,What does a function signature include?,The name of the function and the types of the parameters.,"The name of the function and the types of its arguments. This includes the number, type, and order the parameters appear in.",5.0,5.0,5.0,0.7990034222602844,0.7990035414695741,0.8609821200370789,0.8609821796417236
432,432,3.1,What does a function signature include?,The name of the function and the types of the parameters.,the name of the function and the types of its arguments,5.0,5.0,5.0,0.5828017592430115,0.5828017592430115,0.7194139361381531,0.7194139957427979
433,433,3.1,What does a function signature include?,The name of the function and the types of the parameters.,A function signature includes the name of the function and the types of its arguments,5.0,5.0,5.0,0.6667505502700806,0.6667504906654358,0.7353501319885254,0.7353502511978149
434,434,3.1,What does a function signature include?,The name of the function and the types of the parameters.,"A function signature includes a function's return type, parameters and semi-colon.",1.0,5.0,3.0,0.7164014577865601,0.7164014577865601,0.7126294374465942,0.7126294374465942
435,435,3.1,What does a function signature include?,The name of the function and the types of the parameters.,the name of the function and the types of its arguments,5.0,5.0,5.0,0.5828017592430115,0.5828017592430115,0.7194139361381531,0.7194139957427979
436,436,3.1,What does a function signature include?,The name of the function and the types of the parameters.,the function's name and parameters,5.0,5.0,5.0,0.6373063921928406,0.6373064517974854,0.6559670567512512,0.6559671759605408
437,437,3.1,What does a function signature include?,The name of the function and the types of the parameters.,The name of the function and the types of its arguments.,5.0,5.0,5.0,0.9451704621315002,0.9451705813407898,0.9480037689208984,0.9480038285255432
438,438,3.1,What does a function signature include?,The name of the function and the types of the parameters.,The portion of a function prototype that includes the name of the function and the types of its arguments,5.0,5.0,5.0,0.6892061233520508,0.6892061829566956,0.7032552361488342,0.703255295753479
439,439,3.1,What does a function signature include?,The name of the function and the types of the parameters.,the name of the function and its parameters,5.0,5.0,5.0,0.4523138999938965,0.4523138999938965,0.7420295476913452,0.74202960729599
440,440,3.1,What does a function signature include?,The name of the function and the types of the parameters.,The function name and parameters,5.0,5.0,5.0,0.7659894824028015,0.7659895420074463,0.863406777381897,0.8634068369865417
441,441,3.1,What does a function signature include?,The name of the function and the types of the parameters.,name of function and types of arguments,5.0,5.0,5.0,0.5828017592430115,0.5828017592430115,0.7194139361381531,0.7194139957427979
442,442,3.1,What does a function signature include?,The name of the function and the types of the parameters.,a function's return type and parameter list,1.0,5.0,3.0,0.6664848327636719,0.6664848327636719,0.5906174182891846,0.5906174778938293
443,443,3.1,What does a function signature include?,The name of the function and the types of the parameters.,"it includes the name of the function, and the types of its arguments. it does not specify the function return type. Function in the same scope must have unqiue signatures. ",5.0,5.0,5.0,0.6864005327224731,0.6864005923271179,0.776316225528717,0.7763163447380066
444,444,3.2,What is the scope of global variables?,File scope.,Any functions that follows their deceleration that  are in the source code file are allowed to have access the variables.  Also global scope variables retrain their value throughout the execution of the program.,5.0,5.0,5.0,0.516376793384552,0.5163768529891968,0.5065468549728394,0.5065468549728394
445,445,3.2,What is the scope of global variables?,File scope.,they can be accessed by any C++ file anywhere.,0.0,5.0,2.5,0.6130375862121582,0.6130375862121582,0.6221599578857422,0.6221598982810974
446,446,3.2,What is the scope of global variables?,File scope.,Global variables have file scope.,5.0,5.0,5.0,0.7917687892913818,0.7917686700820923,0.7960739135742188,0.7960739731788635
447,447,3.2,What is the scope of global variables?,File scope.,The scope of global variables are created by placing variable declarations outside any class or function definition.  Global variables retain their values throughout the execution of the program and they can be referenced by any function that follows their declarations or definitions in the source file.,0.0,5.0,2.5,0.4805906713008881,0.4805907011032105,0.45488056540489197,0.45488056540489197
448,448,3.2,What is the scope of global variables?,File scope.,A global variable is an identifier that retains it's value throughout the execution of the program. It has file scope.,5.0,5.0,5.0,0.6120415329933167,0.6120416522026062,0.5852625370025635,0.5852624773979187
449,449,3.2,What is the scope of global variables?,File scope.,Global Variables can be used in any function as long as the appropriate .h file that holds the variable is included,3.0,5.0,4.0,0.4941478967666626,0.4941478967666626,0.4366793930530548,0.4366793930530548
450,450,3.2,What is the scope of global variables?,File scope.,They can be accessed by any part of the program. It can be referenced by any function that follows the declarations or definitions in the source file.,5.0,5.0,5.0,0.5356131792068481,0.5356130599975586,0.5622897744178772,0.5622897148132324
451,451,3.2,What is the scope of global variables?,File scope.,can be accesed by any classes that have and object of that variables class in it,1.0,5.0,3.0,0.43538644909858704,0.4353865087032318,0.35764721035957336,0.357647180557251
452,452,3.2,What is the scope of global variables?,File scope.,Global variables have file-scope.  The variable is know to all functions throught the file,5.0,5.0,5.0,0.5941986441612244,0.5941986441612244,0.5187190771102905,0.5187190771102905
453,453,3.2,What is the scope of global variables?,File scope.,The entire program,4.0,5.0,4.5,0.4358702898025513,0.4358702898025513,0.46811333298683167,0.46811333298683167
454,454,3.2,What is the scope of global variables?,File scope.,They have file scope when placed outside a function.,5.0,5.0,5.0,0.6333611607551575,0.6333611607551575,0.6674878597259521,0.6674878597259521
455,455,3.2,What is the scope of global variables?,File scope.,File scope.,5.0,5.0,5.0,1.0,1.0,1.0,1.0
456,456,3.2,What is the scope of global variables?,File scope.,They can be used throughout the program,4.0,5.0,4.5,0.4338571131229401,0.4338571727275848,0.39776110649108887,0.39776113629341125
457,457,3.2,What is the scope of global variables?,File scope.,Global variable can b accessed by any class wit an object in the variables class,1.0,5.0,3.0,0.4566408395767212,0.4566408097743988,0.4178421199321747,0.41784214973449707
458,458,3.2,What is the scope of global variables?,File scope.,The scope of global variables is at the file level.,5.0,5.0,5.0,0.6959167718887329,0.6959167718887329,0.7808889150619507,0.7808888554573059
459,459,3.2,What is the scope of global variables?,File scope.,Global variables all have file scope.,5.0,5.0,5.0,0.7917687892913818,0.7917686700820923,0.7960739135742188,0.7960739731788635
460,460,3.2,What is the scope of global variables?,File scope.,it is accessible by all functions within a program,4.0,5.0,4.5,0.4548101723194122,0.4548101723194122,0.43364036083221436,0.43364036083221436
461,461,3.2,What is the scope of global variables?,File scope.,"variables accessible anywhere in the program, as long as they are public.",4.0,5.0,4.5,0.5570584535598755,0.5570584535598755,0.5878074169158936,0.5878075361251831
462,462,3.2,What is the scope of global variables?,File scope.,They can be referenced by any function following their declaration or definition inside the source file.,5.0,5.0,5.0,0.5291403532028198,0.5291402935981749,0.6086275577545166,0.6086275577545166
463,463,3.2,What is the scope of global variables?,File scope.,"globally, anywhere in the program.",4.0,5.0,4.5,0.5113040804862976,0.5113040804862976,0.5687018036842346,0.5687018036842346
464,464,3.2,What is the scope of global variables?,File scope.,Global variables have a file scope,5.0,5.0,5.0,0.4986160397529602,0.4986160695552826,0.5763702392578125,0.5763701796531677
465,465,3.2,What is the scope of global variables?,File scope.,The entire program.,4.0,5.0,4.5,0.5664536356925964,0.5664536356925964,0.6753124594688416,0.6753125786781311
466,466,3.2,What is the scope of global variables?,File scope.,throughout the execution of the program,4.0,5.0,4.5,0.4246852099895477,0.4246852099895477,0.3682636022567749,0.3682636022567749
467,467,3.2,What is the scope of global variables?,File scope.,"If a variable is declared global, any function or class can use that variable.",4.0,5.0,4.5,0.5075339674949646,0.5075339674949646,0.6113457679748535,0.6113457679748535
468,468,3.2,What is the scope of global variables?,File scope.,The entire program or file.,5.0,5.0,5.0,0.6577216386795044,0.6577215790748596,0.7583694458007812,0.7583695650100708
469,469,3.2,What is the scope of global variables?,File scope.,throught the programm,4.0,5.0,4.5,0.32516950368881226,0.32516953349113464,0.4575005769729614,0.4575006067752838
470,470,3.2,What is the scope of global variables?,File scope.,the whole code,4.0,5.0,4.5,0.4276934564113617,0.4276934564113617,0.44453802704811096,0.44453805685043335
471,471,3.2,What is the scope of global variables?,File scope.,File scope,5.0,5.0,5.0,0.5444750189781189,0.5444750189781189,0.6828253269195557,0.6828253269195557
472,472,3.2,What is the scope of global variables?,File scope.,can be referenced by any function that follows their declarations or definitions in the source file,5.0,5.0,5.0,0.4430976808071137,0.4430976212024689,0.4430755376815796,0.4430755376815796
473,473,3.2,What is the scope of global variables?,File scope.,global variables have program scope (accessible anywhere in program),4.0,5.0,4.5,0.5459638833999634,0.5459638833999634,0.5424087643623352,0.5424087643623352
474,474,3.2,What is the scope of global variables?,File scope.,variables that exist throught the entire script. their values can be changed anytime in the code and fucntions.,4.0,5.0,4.5,0.4693413078784943,0.4693413078784943,0.5667612552642822,0.5667612552642822
475,475,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,It expands the function's definition in that place.  Once the functions is called you can use it as many times as you need.  The compiler just expands on the function.,4.0,5.0,4.5,0.734859049320221,0.7348589301109314,0.6971099376678467,0.6971099376678467
476,476,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,"When the compiler inline-expands a function call, the function's code gets inserted into the caller's code stream (conceptually similar to what happens with a #define macro). This can, depending on a zillion other things, improve performance, because the optimizer can procedurally integrate the called code — optimize the called code into the caller.   ",4.0,5.0,4.5,0.7726106643676758,0.7726106047630309,0.7026358842849731,0.7026357054710388
477,477,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,The inline keyword advises the compiler to copy the function's code in place to avoid function calls; however the compiler can and typically does ignore the inline qualifier for all but the smallest functions.,5.0,5.0,5.0,0.727376401424408,0.7273763418197632,0.7258730530738831,0.7258729934692383
478,478,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,The compiler can ignore the inline qualifier and typically does so for all but the smallest functions.,2.0,4.0,3.0,0.6356271505355835,0.635627031326294,0.6152088642120361,0.6152088046073914
479,479,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,"Placing the qualifier inline before a function's return type in the function definition ""advises"" the compiler to generate a copy of the function's code in place to avoid a function call.",5.0,5.0,5.0,0.6922497749328613,0.6922498345375061,0.7154605388641357,0.7154605388641357
480,480,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,You declare your inline function in the header or before your int main(). You then can call that function at anytime in your main program quickly and easily.,0.0,4.0,2.0,0.7390163540840149,0.7390163540840149,0.7358275651931763,0.735827624797821
481,481,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,"It expands a small function out... making your code longer, but also makes it run faster.",4.0,4.0,4.0,0.7969901561737059,0.7969902157783508,0.6958667635917664,0.6958667635917664
482,482,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,the function is not treated as a separate unit like other functions,4.0,3.0,3.5,0.5863503813743591,0.5863503813743591,0.5846567153930664,0.5846566557884216
483,483,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,"When the program compiles,it will copy the function inplace, avoiding a function call.",5.0,5.0,5.0,0.8212406635284424,0.8212406635284424,0.7760531306266785,0.7760530114173889
484,484,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,"It replaces all instances of that function call with the inline code itself, resulting in longer but faster programs.",5.0,5.0,5.0,0.7855047583580017,0.7855048179626465,0.7556419372558594,0.7556418776512146
485,485,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,The compiler can ignore the inline qualifier and typically does so for all but the smallest functions.,2.0,4.0,3.0,0.6356271505355835,0.635627031326294,0.6152088642120361,0.6152088046073914
486,486,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,Ignores the inline qualifier and typically does so for all but the smallest functions.,2.0,4.0,3.0,0.6565344333648682,0.6565345525741577,0.5236677527427673,0.5236677527427673
487,487,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,If the function is small enough it will expand it but it will run faster as it will avoid making so many calls to the function.,5.0,4.0,4.5,0.7630471587181091,0.7630471587181091,0.727462887763977,0.7274627685546875
488,488,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,it treats them as the same function,2.0,2.0,2.0,0.24027544260025024,0.24027544260025024,0.5504053831100464,0.5504054427146912
489,489,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,"Inline functions are copied in place, instead of being referenced.",5.0,5.0,5.0,0.7245977520942688,0.724597692489624,0.6973279118537903,0.6973279118537903
490,490,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,"For inline functions, the compiler creates a copy of the function's code in place so it doesn't have to make a function call and add to the function call stack.",5.0,5.0,5.0,0.7863025665283203,0.7863026261329651,0.7726083993911743,0.7726084589958191
491,491,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,it generates a copy of the function's coding which eliminates calling the function,5.0,5.0,5.0,0.7699174284934998,0.7699174880981445,0.7033271193504333,0.7033270597457886
492,492,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,not answered,0.0,0.0,0.0,0.3385434150695801,0.3385434150695801,0.4339312016963959,0.4339311718940735
493,493,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,It generates a copy of the function's code by by inserting it in the program.,4.0,5.0,4.5,0.778192937374115,0.7781928777694702,0.7594095468521118,0.759409487247467
494,494,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,"tells the compiler to make a copy of function's code in place to avoid a function call.  it typically ignores it, except for the smallest functions.",5.0,5.0,5.0,0.7916172742843628,0.7916173338890076,0.7583737373352051,0.7583736777305603
495,495,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,The compiler can ignore the inline qualifier and typically does so for all but the smallest functions.,2.0,2.0,2.0,0.6356271505355835,0.635627031326294,0.6152088642120361,0.6152088046073914
496,496,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,"Multiple copies of the function code are inserted into the program, making it bigger.",4.0,5.0,4.5,0.7909624576568604,0.7909623384475708,0.8153833746910095,0.8153834342956543
497,497,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,compiler ignores inline qualifier,2.0,3.0,2.5,0.46212914586067205,0.4621292352676392,0.49550142884254456,0.49550139904022217
498,498,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,"It generates a copy of the function, if it is needed again.",2.0,5.0,3.5,0.8039971590042114,0.8039972186088562,0.7522391676902771,0.7522391080856323
499,499,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,"The complier includes copies of inline functions instead of making function calls, but usually only with very small functions.",5.0,5.0,5.0,0.7086072564125061,0.7086071968078613,0.7660269737243652,0.7660269141197205
500,500,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,Compiler generate a copy of the function's code in place (when appropriate) to avoid a function call,5.0,5.0,5.0,0.8290708661079407,0.8290708661079407,0.7413528561592102,0.741352915763855
501,501,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,"instead of calling the function every time it is invoked, the compiler will replace the function call with a copy of the function body",5.0,5.0,5.0,0.799631655216217,0.799631655216217,0.7643831372261047,0.7643831372261047
502,502,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,Expands the function into the program,4.0,4.0,4.0,0.5776928067207336,0.5776928067207336,0.6125102043151855,0.6125102043151855
503,503,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,it generates a copy of the functions code in place to avoid a function call,5.0,5.0,5.0,0.7596083879470825,0.7596083879470825,0.7616188526153564,0.7616188526153564
504,504,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,the function call will be replaced by the code that was defined in the inline function,5.0,5.0,5.0,0.6754366159439087,0.6754366755485535,0.6956286430358887,0.6956287026405334
505,505,3.3,How does the compiler handle inline functions?,It makes a copy of the function code in every place where a function call is made.,"When the compiler inline-expands a function call, the function's code gets inserted into the caller's code stream (conceptually similar to what happens with a #define macro). This can, depending on a zillion other things, improve performance, because the optimizer can procedurally integrate the called code — optimize the called code into the caller. ",4.0,5.0,4.5,0.7726106643676758,0.7726106047630309,0.7026358842849731,0.7026357054710388
506,506,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,Overall the program has better performance (means it is faster) because it does not have to copy large amounts of data.,5.0,5.0,5.0,0.6599187850952148,0.6599188446998596,0.7088609337806702,0.7088608145713806
507,507,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,because you can't change the original and passing by reference limits memory needed for the program.,5.0,4.0,4.5,0.6828404664993286,0.6828404068946838,0.6486539840698242,0.6486539840698242
508,508,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,Passing by reference can eliminate the pass-by-value overhead of copying large amounts of data.,5.0,5.0,5.0,0.7050838470458984,0.705083966255188,0.7060496211051941,0.7060496211051941
509,509,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,"It is often more efficient to pass references, rather than large objects, to functions. This allows the compiler to pass the address of the object while maintaining the syntax that would have been used to access the object.",5.0,5.0,5.0,0.8039090037345886,0.8039090633392334,0.7802638411521912,0.7802639603614807
510,510,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,"Pass by reference is good for performance reasons, because it can eliminate the pass by value overhead of copying large amounts of data.",5.0,5.0,5.0,0.7322873473167419,0.7322873473167419,0.7569878101348877,0.7569876909255981
511,511,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,You do not alter the original value of the variable that was passed.,3.0,3.0,3.0,0.6891489624977112,0.6891489624977112,0.6409561038017273,0.6409561038017273
512,512,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,Don't have to make copies of stuff.,4.0,5.0,4.5,0.5929936170578003,0.5929936170578003,0.6393288373947144,0.6393288373947144
513,513,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,you do not use unessesary memory space to copy variables between functions,5.0,5.0,5.0,0.6380524039268494,0.6380524635314941,0.6842327117919922,0.6842327117919922
514,514,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,It elimitates the need to copy large amonts of data,5.0,5.0,5.0,0.6450003981590271,0.6450003981590271,0.7003130912780762,0.7003129720687866
515,515,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,The function can change the data stored in a variable passed by reference directly.,3.0,4.0,3.5,0.6986069679260254,0.6986070275306702,0.6974024772644043,0.6974023580551147
516,516,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,Gives called function the ability to access and modify the caller’s argument data.,3.0,4.0,3.5,0.7562543153762817,0.7562542557716371,0.703824520111084,0.703824520111084
517,517,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,Gives called function the ability to access and modify the caller’s argument data directly.,3.0,4.0,3.5,0.763412594795227,0.7634126543998718,0.6951627731323242,0.6951627731323242
518,518,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,It is more efficient and it changes the variable not online inside the function but outside so that the new value can be used elsewhere.,3.0,3.0,3.0,0.6707471013069153,0.6707471013069153,0.6793793439865112,0.679379403591156
519,519,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,you don't make another copy and waste memory,5.0,5.0,5.0,0.6635550856590271,0.6635550856590271,0.5819214582443237,0.5819214582443237
520,520,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,"Passing by reference eliminates the copying of large amounts of data, typical with pass by value.",5.0,5.0,5.0,0.7194779515266418,0.7194779515266418,0.7969812154769897,0.796981155872345
521,521,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,"If a function's arguments are large in size, computing time and memory space is not wasted copying down the argument and passing it to the function.  Also pass by reference gives the function called the permission to read edit the argument directly.",5.0,5.0,5.0,0.7801191210746765,0.7801190614700317,0.6984269618988037,0.6984269618988037
522,522,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,"Gives access to the caller data directly, also it allows for modifying the data.",3.0,4.0,3.5,0.7042412161827087,0.7042411565780641,0.7471448183059692,0.7471448183059692
523,523,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,"less overhead overall, and you modify the variable directly.",4.0,3.0,3.5,0.647723913192749,0.647723913192749,0.6299877762794495,0.6299878358840942
524,524,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,The original variable being referenced can be modified directly by the called function.,3.0,3.0,3.0,0.7102023959159851,0.7102023959159851,0.5917935967445374,0.5917935967445374
525,525,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,gives function ability to access and modify the caller's argument data directly,3.0,4.0,3.5,0.6814218163490295,0.6814218163490295,0.6657623648643494,0.6657623052597046
526,526,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,Gives the called function the ability to access and modify the caller's argument data directly.,3.0,3.0,3.0,0.7264360785484314,0.7264360785484314,0.7013669610023499,0.7013669610023499
527,527,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,"Less overhead than passed by value, especially when using large numbers.",4.0,3.0,3.5,0.638430118560791,0.638430118560791,0.6755501627922058,0.675550103187561
528,528,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,"large data items can be passed without copying the entire data point, reducing execution time and the amout of memory space needed ",5.0,5.0,5.0,0.7037274837493896,0.7037274241447449,0.7136585116386414,0.7136583924293518
529,529,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,The data can be modified directly instead of making a copy of the data. Improves execution time with large amounts of data.,4.0,4.0,4.0,0.791034460067749,0.7910345792770386,0.7933351993560791,0.7933352589607239
530,530,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,Functions can directly modify arguments that are passed by reference.,3.0,4.0,3.5,0.7614966034889221,0.7614966034889221,0.6919634938240051,0.6919634938240051
531,531,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,It gives access and modify the caller's argument data directly. It eliminate the pass by value overhead of copying large amounts ofdata,5.0,5.0,5.0,0.803221583366394,0.803221583366394,0.742892324924469,0.7428924441337585
532,532,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,"it takes less memory, thus it would make the program faster",4.0,4.0,4.0,0.5935397744178772,0.5935397744178772,0.6587622165679932,0.6587620377540588
533,533,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,You are able to modify the variable that is referenced directly.,3.0,4.0,3.5,0.6272218823432922,0.6272218227386475,0.65577632188797,0.6557764410972595
534,534,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,"if you pass by reference, you can modify the value as opposed to passing by value where you cannot change the value",3.0,4.0,3.5,0.6175201535224915,0.6175202131271362,0.5611142516136169,0.5611141920089722
535,535,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,"only the memory address is sent to the function, so no copy of the object sent needs to be made. It makes the function run faster, and saves memory.",5.0,5.0,5.0,0.7113696336746216,0.7113695740699768,0.7012276649475098,0.701227605342865
536,536,3.4,What is the main advantage associated with function arguments that are passed by reference?,It avoids making copies of large data structures when calling functions.,"Actual arguments are associated with dummy arguments when a function or subroutine is referenced. In a procedure reference, the actual argument list identifies the correspondence between the actual arguments provided in the list and the dummy arguments of the subprogram",3.0,3.0,3.0,0.7029325366020203,0.7029324769973755,0.6067512631416321,0.6067513823509216
537,537,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","The compiler selects the proper functions to execute based on number, types and order of arguments in the function call.",5.0,5.0,5.0,0.7141906023025513,0.7141906619071959,0.754345178604126,0.7543452978134155
538,538,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",They differentiated by the compiler by the conditions/inputs used for one of the overloaded functions.,4.0,2.0,3.0,0.5578693151473999,0.5578692555427551,0.5625627636909485,0.5625628232955933
539,539,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","The compiler distinguishes overloaded functions by their signatures. It encodes each function identifier with the number and types of its parameters to generate type-safe linkage, which ensures the proper overloaded function is called.",5.0,5.0,5.0,0.7297707200050354,0.7297707796096802,0.7353842854499817,0.7353842258453369
540,540,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","Overloaded functions are distinguished by their signatures, Name mangling or name decoration, and type-safe linkage ensures that proper overloaded functions is called and types of the arguments conform to tpes to the parameters.",5.0,5.0,5.0,0.7199581265449524,0.7199581861495972,0.699953556060791,0.699953556060791
541,541,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","The compiler selects proper function to execute based on number, types and order of arguments in the function call.",5.0,5.0,5.0,0.7607560753822327,0.7607561945915222,0.7748534083366394,0.7748534083366394
542,542,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","By the type they are initilized with (int, char, etc.)",2.0,4.0,3.0,0.5998968482017517,0.5998968482017517,0.6610899567604065,0.6610900163650513
543,543,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","It selects the proper function to execute based on number, types and order of arguments in the function call.",5.0,5.0,5.0,0.7685588002204895,0.7685588598251343,0.7814761996269226,0.7814762592315674
544,544,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",overloaded functions must have the same return type but different input parameters,1.0,5.0,3.0,0.5164116621017456,0.5164116024971008,0.5695576071739197,0.5695576667785645
545,545,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","It examines the names, types, and order of arguments on each function.",5.0,5.0,5.0,0.6727470755577087,0.6727470755577087,0.705907940864563,0.7059080600738525
546,546,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",unique function signatures,5.0,5.0,5.0,0.5344074368476868,0.5344074368476868,0.5586473345756531,0.5586472749710083
547,547,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","Is based on number, types, and order of arguments in the function call.",5.0,5.0,5.0,0.7320812344551086,0.7320812940597534,0.7416940331459045,0.7416939735412598
548,548,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","Compiler selects proper function to execute based on number, types and order of arguments in the function call.",5.0,5.0,5.0,0.7791344523429871,0.7791345715522766,0.7556915879249573,0.7556915879249573
549,549,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",not answered,0.0,0.0,0.0,0.3385434150695801,0.3385434150695801,0.4339312016963959,0.4339311718940735
550,550,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","they have to have same return type, but different input parameters",1.0,5.0,3.0,0.6261561512947083,0.626156210899353,0.6257582902908325,0.6257583498954773
551,551,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",Overloaded functions are differentiated by their parameters.,4.0,5.0,4.5,0.5925697684288025,0.5925697684288025,0.5713405013084412,0.5713405013084412
552,552,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","The compiler selects the right function to execute from the number, types and order of arguments in the function call.",5.0,5.0,5.0,0.7288340926170349,0.7288340330123901,0.7652214765548706,0.7652214765548706
553,553,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",it creates a set of candidate functions then a set of viable functions,3.0,3.0,3.0,0.5113710165023804,0.5113710761070251,0.5130361318588257,0.5130360722541809
554,554,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",their function signature.,5.0,5.0,5.0,0.6817700862884521,0.6817700862884521,0.7004061937332153,0.7004060745239258
555,555,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",The number and type of its parameters.,5.0,5.0,5.0,0.6414538621902466,0.6414538025856018,0.6505179405212402,0.6505178809165955
556,556,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",by their function signature,5.0,5.0,5.0,0.3982041776180267,0.3982042074203491,0.5785247087478638,0.5785247087478638
557,557,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","They have the same name, just different parameters.",3.0,4.0,3.5,0.6727118492126465,0.6727120876312256,0.6469764709472656,0.6469765305519104
558,558,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","They are differntiated by number, types and order of arguments in the function call.",5.0,5.0,5.0,0.6644315123558044,0.6644315123558044,0.6891515851020813,0.6891515851020813
559,559,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","it looks at the number, types, and order of arguments in the function call ",5.0,5.0,5.0,0.6167064309120178,0.6167063713073729,0.7065650820732117,0.7065650820732117
560,560,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",The compiler differentiates overloaded functions by their signature.,5.0,5.0,5.0,0.52408367395401,0.5240836143493652,0.6417793035507202,0.6417793035507202
561,561,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","By the number, types, and order of their arguments",5.0,5.0,5.0,0.5383486151695251,0.5383486151695251,0.6665066480636597,0.6665065884590149
562,562,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","Compiler selects proper function to execute based on number, types and order of arguments in the function call.",5.0,5.0,5.0,0.7791344523429871,0.7791345715522766,0.7556915879249573,0.7556915879249573
563,563,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",paremeters,4.0,5.0,4.5,0.33744147419929504,0.33744150400161743,0.37956953048706055,0.3795694410800934
564,564,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","By the number, and the types and order of the  parameters.",5.0,5.0,5.0,0.7119162678718567,0.7119162678718567,0.7163788080215454,0.7163788676261902
565,565,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",by the number and type of arguments,5.0,5.0,5.0,0.4167230725288391,0.4167230725288391,0.4910949170589447,0.4910949170589447
566,566,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","by their signature (return type, argument list)",3.0,5.0,4.0,0.6601282954216003,0.6601282954216003,0.6813196539878845,0.6813196539878845
567,567,3.5,How are overloaded functions differentiated by the compiler?,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",overloaded function simply invovles haing a method with the same name within the class. is used to implement a method for subclass which overrides in other words replaces the implementation of the super class. Overloading the concept of providing different meaning to a object based on the context of its presence. Overloading is one type of polymorphism and this is also a feature in programing.,1.0,5.0,3.0,0.7333968877792358,0.7333968281745911,0.6802161931991577,0.6802161335945129
568,568,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.","A base case that is the simplest case for a problem so that the function will lead to it, if this does not happen then it will end up as an infinite loop. And a condition to know when to terminate.   ",5.0,5.0,5.0,0.7698740959167479,0.7698740363121033,0.7306292653083801,0.7306293845176697
569,569,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",badly designed algorithyms. using recursion for a non recursive problem.,2.0,3.0,2.5,0.6056394577026367,0.6056394577026367,0.580609917640686,0.580609917640686
570,570,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",Infinite recursion can occur when the base case is omitted or the recursion step is written incorrectly so that it never converges on the base case.,5.0,5.0,5.0,0.7615553140640259,0.7615552544593811,0.7850148677825928,0.7850149273872375
571,571,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.","Infinite recursion is an infinite loop if the condition is not met.  Either omitting the base case, or writing the recursion step incorrectly so that it does not converge on the base case causes ""indefinite"" recursion, eventually exhausting memory.  ",5.0,5.0,5.0,0.7340463399887085,0.7340463399887085,0.703726589679718,0.703726589679718
572,572,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",Either omitting the base case or writing the recursion step incorrectly so that it does not converge on the base case can cause an infinite recursion.,5.0,5.0,5.0,0.8055760860443115,0.8055760264396667,0.7870733737945557,0.78707355260849
573,573,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",Not having a base case that returns a base value.,3.0,5.0,4.0,0.7688236236572266,0.7688236236572266,0.7671544551849365,0.7671544551849365
574,574,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",Incorrect or missing base case. Must reduce to the base case. The function must get simpler each time it is run (converge to the base case).,5.0,5.0,5.0,0.8138473033905029,0.8138473033905029,0.7090815901756287,0.7090816497802734
575,575,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",no base case no change in values.,4.0,5.0,4.5,0.7683480978012085,0.7683480978012085,0.7302667498588562,0.7302666902542114
576,576,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.","If at each recursive call the problem does not diminish or if it does not diminish to a base case, can cause infinite recursion.",5.0,5.0,5.0,0.7938089370727539,0.7938089370727539,0.7905715703964233,0.7905716300010681
577,577,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",Omitting the base case or incorrectly calling the recursive step.,5.0,5.0,5.0,0.7927128672599792,0.7927128076553345,0.8103615641593933,0.8103615045547485
578,578,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",The recursive problem cannot be reduced to reach the base case.,4.0,5.0,4.5,0.6789429187774658,0.678942859172821,0.7347843647003174,0.7347844839096069
579,579,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.","Lack of defining a base case, or writing the recursion step incorrectly so that it does not converge on the base case",5.0,5.0,5.0,0.639508843421936,0.639508843421936,0.7874976396560669,0.7874975800514221
580,580,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",Not having the proper case to leave the recursion,3.0,5.0,4.0,0.5923094153404236,0.5923094153404236,0.6736314296722412,0.673631489276886
581,581,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.","no base case, or the recursive calls do not converge to the base case",5.0,5.0,5.0,0.5716212391853333,0.5716211795806885,0.6275394558906555,0.6275394558906555
582,582,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.","No base case, or an incorrectly written recursion step that does not converge on the base case will lead to infinite recursion.",5.0,5.0,5.0,0.7326937317848206,0.7326937317848206,0.8415170311927795,0.8415169715881348
583,583,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.","If the recursion function never reaches or successfully defines the base case it will recurse forever.  This happens many ways, such as the function doesn't progress towards the base case, or the function is coded poorly and doesn't even contain a base case.",5.0,5.0,5.0,0.7812777161598206,0.7812776565551758,0.6711708307266235,0.6711708903312683
584,584,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included."," not creating a base case, or in the case where the base case will never be met.",5.0,5.0,5.0,0.6841976642608643,0.6841976642608643,0.706229567527771,0.706229567527771
585,585,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",improper handling of cases such that not all possible values are able to be handled.,2.0,5.0,3.5,0.6728116273880005,0.6728116869926453,0.6533783674240112,0.6533783674240112
586,586,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",There is no base case. The recursion step doesn't reduce the problem during each recursive call.,4.0,5.0,4.5,0.7576029300689697,0.7576029896736145,0.6791267395019531,0.6791267991065979
587,587,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.","no base case, as in a single return that does not include calling the function again.  a static value to end at.",2.0,5.0,3.5,0.7264499068260193,0.7264497876167297,0.7684361934661865,0.7684361338615417
588,588,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.","Either omitting the base case, or writing the recursion step incorrectly so the it does not reach the base case can cause infinite recursion.",5.0,5.0,5.0,0.8032082319259644,0.8032082319259644,0.7660245895385742,0.7660245895385742
589,589,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",omitting the base case or writing the recursive call so that it does not converge upon the base case.,5.0,5.0,5.0,0.7281128168106079,0.7281128168106079,0.7073416709899902,0.707341730594635
590,590,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.","Either omitting the base case, or writing the recursion step incorrectly so that it does not converge on the base case",5.0,5.0,5.0,0.7217620015144348,0.7217620015144348,0.7586323022842407,0.7586323618888855
591,591,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",Infinite recursion may occur if no base case is defined or if the call is not varied.,4.0,5.0,4.5,0.6737377047538757,0.6737377643585205,0.7852441668510437,0.7852442264556885
592,592,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.","Not having a base case, or building a recursion process that doesn't converge on the base case.",5.0,5.0,5.0,0.7485275268554688,0.7485275864601135,0.6595301628112793,0.6595301032066345
593,593,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.","Either omitting the base case, or writing the recursion step incorerectly ",5.0,5.0,5.0,0.6518123149871826,0.6518122553825378,0.699543297290802,0.699543297290802
594,594,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",no base case or if the programmar does not define the base case as the simplest case and it never gets reached,5.0,5.0,5.0,0.7033094763755798,0.7033095359802246,0.6721991896629333,0.6721992492675781
595,595,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",No easily reached base case and no base case at all,5.0,5.0,5.0,0.627150297164917,0.627150297164917,0.6530985832214355,0.6530985832214355
596,596,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",function is never allowed to reach the 'base case',5.0,5.0,5.0,0.6993451714515686,0.6993451118469238,0.5959156155586243,0.5959156155586243
597,597,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.","it has no base case, or the base case is never met",5.0,5.0,5.0,0.5589624047279358,0.558962345123291,0.6146348714828491,0.6146348714828491
598,598,3.6,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion step is defined incorrectly, or if the base case is not included.",recursion refers to situations in which functions call themselves. These types of functions are known as recursive functions. That being said Infinite recursion occurs when the function is designed in such a way as to call it self forever without stopping possible causes,1.0,5.0,3.0,0.6058449149131775,0.6058449149131775,0.6001091003417969,0.6001090407371521
599,599,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"Both involve a controlled repetition structures, and they both have a termination test.  Also both of them can loop forever. ",5.0,5.0,5.0,0.8047890663146973,0.8047890067100525,0.8601179122924805,0.8601179718971252
600,600,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"As discussed earlier, recursion may be used to process iterative actions. Recursion is used for calculations where the answer can be described in a function that relates to itself.",1.0,3.0,2.0,0.6060605049133301,0.6060605049133301,0.7086993455886841,0.7086994051933289
601,601,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,Both iteration and recursion are based on control statements and involve repetition. They can both also occur indefinitely.,5.0,5.0,5.0,0.7842992544174194,0.7842993140220642,0.8454676866531372,0.8454678058624268
602,602,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,Both are based on a control statement         - Iteration-repetition structure         - Recursion-selection structure        Both involve repetition         -Iteration-explicitly uses repetition structure         -Recursion-repeated function calls        Both involve a termination test         -Iteration-loop-termination test         -Recursion-base case         Both gradually approach termination         -Iteration-modifies counter until loop-termination test fails         -Recursion-produces progressively simpler versions of problem        Both can occur indefinitely         -Iteration-if loop-continuation condition never fails         -Recursion-if recursion step does not simplify the problem,5.0,5.0,5.0,0.5502824783325195,0.5502824187278748,0.6511328220367432,0.6511328220367432
603,603,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"Iteration and recursion have many similarities: both are based on a control statement, involve repetition, involve a termination test, gradually approach termination and can occur infinitely.",5.0,5.0,5.0,0.7162725329399109,0.7162725329399109,0.8556200861930847,0.8556201457977295
604,604,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"Both rely on repetition, both have a base case, both can become an infinite loop. Anything recursive can also be solved with iteration.",5.0,5.0,5.0,0.7152249217033386,0.7152248620986938,0.8286266922950745,0.8286266922950745
605,605,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"Both will repeat (loop) until a condition is met, and exit the loop. Both are capable of entering an infinite loop.",3.0,5.0,4.0,0.707802951335907,0.7078030705451965,0.7800171971321106,0.7800171375274658
606,606,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,anything you can do iterativly you can do recursively,2.0,4.0,3.0,0.382057785987854,0.3820578157901764,0.5535449981689453,0.5535449981689453
607,607,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,Both are repetative and both have a end test.,4.0,5.0,4.5,0.5792955160140991,0.5792955160140991,0.6547386646270752,0.6547386646270752
608,608,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"Incorrectly writing either can result in infinite loops, both perform the same task over and over.",3.0,4.0,3.5,0.6326382756233215,0.6326382756233215,0.7524834275245667,0.7524834275245667
609,609,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,Both are based on a control statement. Both involve repetition. Both involve a termination test. Both gradually approach termination. Both can occur infinitely.,5.0,5.0,5.0,0.7651994824409485,0.7651996016502379,0.7949566841125488,0.7949567437171936
610,610,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"Both are based on a control statement, Both involve repetition, Both involve a termination test, Both gradually approach termination, Both can occur infinitely",5.0,5.0,5.0,0.7284625768661499,0.7284626364707947,0.7642655968666077,0.7642655968666077
611,611,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,not answered,0.0,0.0,0.0,0.3385434150695801,0.3385434150695801,0.4339312016963959,0.4339311718940735
612,612,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,anything you can do recursively you can do iteratively,2.0,4.0,3.0,0.4255671501159668,0.4255671203136444,0.5642136335372925,0.564213752746582
613,613,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"Many problems can be solved by both iteration and recursion, and either may go into a condition of infinite execution if a termination test is omitted.",2.0,5.0,3.5,0.6677687764167786,0.6677687764167786,0.770066499710083,0.7700666189193726
614,614,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"Iteration and recursion both use repetition and perform several simple operations and algorithms successively until they reach a certain limit.  So both involve a termination test to find that limit and both slowly approach that termination limit.  Both are based on a control statement as well.    If coded poorly, both can continue on for forever until the compiler or the computer either locks up, shuts down or halts the operation.",5.0,5.0,5.0,0.6184169054031372,0.618416965007782,0.7380974292755127,0.7380974292755127
615,615,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"both based on control statement, involve repetition, and involve a termination test within loops",5.0,5.0,5.0,0.630967915058136,0.6309678554534912,0.7721729278564453,0.7721730470657349
616,616,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,they are methods of repeating the same task.,1.0,3.0,2.0,0.5721171498298645,0.5721170902252197,0.7008286118507385,0.7008286714553833
617,617,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,Both involve a termination test.   They use a control statement and repition to solve the problem.  They can also result in an infinite loop.,5.0,5.0,5.0,0.7183058857917786,0.7183059453964233,0.8071694374084473,0.8071694374084473
618,618,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"based on a control statement, involve repetition, involve a termination test.",5.0,5.0,5.0,0.6819028854370117,0.6819028854370117,0.807198166847229,0.8071982264518738
619,619,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,Both are bases on a control statement. Both involve repetition. Both involve a termination test. Both gradually approach termination. Both can occur infinitely.,5.0,5.0,5.0,0.7725798487663269,0.7725797891616821,0.8098378777503967,0.8098379969596863
620,620,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"both based on a control statement, both involve repitition, both involve a termination test, both gradually approach termination, both can potentially occur infinetly.",5.0,5.0,5.0,0.6933096051216125,0.6933096051216125,0.8436883091926575,0.8436883091926575
621,621,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"they are both based on a control statement, both involve repetition, both involve a termination case, both graduatlly approach that termination case, and both can occur infinitely",5.0,5.0,5.0,0.7175166010856628,0.7175165414810181,0.7984347939491272,0.798434853553772
622,622,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"They both use repetition, a control or test to terminate, and both can infinitely repeat if not defined correctly.",5.0,5.0,5.0,0.6989317536354065,0.6989316940307617,0.886615514755249,0.8866155743598938
623,623,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"Both are based on a control statement; both gradually approach termination ending with a termination test; both involve repetition, and can both repeat infinitely if their  termination requirements are not met.",5.0,5.0,5.0,0.7216243743896484,0.721624493598938,0.8619274497032166,0.8619273900985718
624,624,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"both are based on a control statement, involve repetition and involve a termination test. both gradually approach termination, both can occur infinitely",5.0,5.0,5.0,0.7073097229003906,0.7073097229003906,0.7952876091003418,0.7952876687049866
625,625,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,they are used to solve the same type of problems. they do a task over and over again until a cirtain conditional statement is reached (its called the base case in recursion).,3.0,4.0,3.5,0.6319380402565002,0.6319380402565002,0.7176437973976135,0.717643678188324
626,626,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,Based on control statement;  involve repetition; involve a terminal test; both can occur infinitly,5.0,5.0,5.0,0.7728190422058105,0.7728191018104553,0.8612543940544128,0.8612543344497681
627,627,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"repetition, termination test, eventually terminate, occur infinately",5.0,5.0,5.0,0.6601918935775757,0.6601918935775757,0.8071668148040771,0.8071668744087219
628,628,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,both need to have some kind of base case to tell when the loop needs to stop.,3.0,3.0,3.0,0.514271080493927,0.514271080493927,0.5939014554023743,0.5939013957977295
629,629,3.7,What are the similarities between iteration and recursion?,They both involve repetition; they both have termination tests; they can both occur infinitely.,"they both are able to do repetiive tasks. however recurisve calls itself with different parameters and defines and exit clause that is guaranteeed to be reached. Iterative includes a loop which iterates a pre-determined number of times, or checks for an exit clause every time through",2.0,5.0,3.5,0.6394690275192261,0.6394690871238708,0.6851480603218079,0.6851481199264526
630,630,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",int n[10]; //array of 10 integers and int n[arraySize] //where arraySize is some positive integer defined by the user,3.0,5.0,4.0,0.5999682545661926,0.5999683141708374,0.6138333082199097,0.6138332486152649
631,631,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",by either inputing the different elements in the array at coding or giving the array specifacations as to the size of the array. it is also possible when giving it specifacations to tell the array to grow as needed.,3.0,5.0,4.0,0.6422563791275024,0.6422563195228577,0.6065146327018738,0.606514573097229
632,632,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",You can initialize and array by using an initializer list in its declaration or by initializing its size with a constant variable.,5.0,5.0,5.0,0.7769829630851746,0.7769829630851746,0.8105664849281311,0.8105664849281311
633,633,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",Pass the length along with the array or use a vector.,2.0,4.0,3.0,0.6762305498123169,0.6762306094169617,0.715485692024231,0.715485692024231
634,634,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","One way is to declare a size of the array using a variable that is equal to an integer. The other way, if the size is omitted in the declaration, the compiler determines the size of the array based on the size of the initializer list.",5.0,5.0,5.0,0.7651790380477905,0.7651790380477905,0.7746177315711975,0.7746177315711975
635,635,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","In the declaration (int array [x]) or with an initilizer (int array[]={0,1,2,etc.}",5.0,5.0,5.0,0.7014281749725342,0.7014281153678894,0.7121241688728333,0.7121241688728333
636,636,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","1. Declare the length of the array (int array[10];) 2. Initialize the array (int array[] = {0, 1, 2, 3}; //compiler will assume size of 4)",5.0,5.0,5.0,0.6400692462921143,0.640069305896759,0.6378761529922485,0.6378762722015381
637,637,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",statically and dynamically,2.0,3.0,2.5,0.2536106109619141,0.25361064076423645,0.44252535700798035,0.44252535700798035
638,638,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",Explicitly int array[10]; or by variable const int size = 10; int array[size];,3.0,5.0,4.0,0.6407649517059326,0.6407650709152222,0.652344286441803,0.6523442268371582
639,639,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","Array lengths can be explicitly specified by inputing the number of elements between the brackets [ ] during declaration, or implicitly by including an initializer list WITHOUT specifying a number between [ ], the compiler will automatically declare the array with the proper number of elements needed for the list. ",5.0,5.0,5.0,0.7349383234977722,0.7349383234977722,0.7411578893661499,0.7411578893661499
640,640,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",Specify an arrays size with a constant variable. And setting array elements with calculations.,2.0,5.0,3.5,0.7649716138839722,0.7649716138839722,0.6946935057640076,0.6946934461593628
641,641,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","statically, using {} and dynamically, using []",4.0,4.0,4.0,0.6465961933135986,0.6465963125228882,0.6735693216323853,0.6735693216323853
642,642,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","define it as array[5] or array[1,2,3,4,5]",4.0,5.0,4.5,0.4950800836086273,0.4950801134109497,0.5646588802337646,0.5646589398384094
643,643,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",Static and dynamic.,2.0,3.0,2.5,0.5761682987213135,0.576168417930603,0.5496637225151062,0.5496637225151062
644,644,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",manually inside the brackets or automatically via an initializer list,5.0,5.0,5.0,0.6710946559906006,0.6710946559906006,0.6138157844543457,0.6138158440589905
645,645,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","You can use an initializer list, or simply tell the compiler how many elements you want in the array.  For an Initializer list:  int a[] = {10, 2, 3, -4, 5};  For an elemental declaration: int b[5];  Both arrays have 5 elements in them, but array a is already initialized.",5.0,5.0,5.0,0.7345817089080809,0.7345818281173706,0.7056773900985718,0.7056773900985718
646,646,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","In a string you can specify with the strlen(arrayname) command. This gets the length of the string. Another way is with integers where you initiate the size from the start, ex array[40] specifying a possible length of up to 40. Then it is passed by an object the actual ammout in the array. Another way is to declare it in an initializing program. ",4.0,5.0,4.5,0.7304306030273438,0.7304307818412781,0.7471106648445129,0.7471107244491577
647,647,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","Implicit, namely when you give it values, like {1,2,3,4,5,6,7,8,9}, at which the compiler will automatically give this a size. Static, during the declaration. ",5.0,5.0,5.0,0.6347317099571228,0.6347317695617676,0.6489225625991821,0.6489225625991821
648,648,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","Supply an integer inside the brackets or the compiler counts the number of elements in the initializer list. int n[5]; int n[] = { 1,2,3,4,5 }",5.0,5.0,5.0,0.6610187292098999,0.6610187292098999,0.6406754851341248,0.6406754851341248
649,649,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",either initializing the array with a specific length or initializing an array while declaring its contents.,5.0,5.0,5.0,0.6110765933990479,0.6110765933990479,0.6791728734970093,0.6791729927062988
650,650,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",within the brackets or by using an initializer list.,5.0,5.0,5.0,0.7921974658966064,0.792197585105896,0.793330192565918,0.7933303713798523
651,651,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",specify the number of elements in the array declaration with a constant or using a constant variable for future scalability,3.0,5.0,4.0,0.6417626142501831,0.6417625546455383,0.5843914151191711,0.5843914151191711
652,652,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",with a number and with a variable,3.0,3.0,3.0,0.26301804184913635,0.26301804184913635,0.4456617534160614,0.4456617534160614
653,653,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","explicitly, by declaring it in brackets (i.e. int array[50];) and implicitly, by initializing several values (i.e. int array[] = {1, 2, 3};)",5.0,5.0,5.0,0.6182667016983032,0.6182668209075928,0.6430919170379639,0.6430920362472534
654,654,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","one way of specifying of array is A[10] ; other way of specifying array is a[arraysize] = [1,2,3,4,5,6,7,8,9,10}",4.0,5.0,4.5,0.5271850824356079,0.5271852016448975,0.5477378368377686,0.5477378368377686
655,655,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",1-Initializing an array in a declaration with an initializer list 2-Specifying an arrays size with a constant variable,5.0,5.0,5.0,0.6455057859420776,0.6455057859420776,0.6765236854553223,0.6765238046646118
656,656,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","Initializing the size in the brackets: int a[100]; Initializing the length by assigning variables: int a[] = {1,2,3};",5.0,5.0,5.0,0.6797849535942078,0.6797850728034973,0.6604296565055847,0.6604297757148743
657,657,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.",user defined value or by the number of elements in initializer list,5.0,5.0,5.0,0.5790999531745911,0.5791000127792358,0.6251165270805359,0.6251164674758911
658,658,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","you can assign the size of it inside the brackets when you declare the array [3], or you can have it set by how many items you set the array equal to {1,2,3}",5.0,5.0,5.0,0.6535365581512451,0.6535366177558899,0.6150137186050415,0.6150136590003967
659,659,4.1,What are the two different ways of specifying the length of an array?,"In the array declaration, or by using an initializer list.","use an arraylist, or have your program ask the array how many elements it has. As an obj it it should have member length that is the number of slots it has. ",3.0,5.0,4.0,0.7604759335517883,0.7604759931564331,0.7382358312606812,0.7382358312606812
660,660,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"strings that are used in an char array are much easier to manipulate than as a string object, because each character is stored separately rather than as a whole",1.0,4.0,2.5,0.6039662361145021,0.6039662957191467,0.5913736820220947,0.59137362241745
661,661,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"the type string uses less storage and you have to change the string all at once. with an array of characters you can make permutations of words using the characters stored in the array, without needing to actually access and change the variables. with an array of characters you can just change how they're accessed.",1.0,5.0,3.0,0.6435698866844177,0.6435698866844177,0.5750707983970642,0.5750707983970642
662,662,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"Unlike in a string declared using type string, in a string declared using an array of characters the programmer must provide the null terminating character and must ensure the array is large enough to hold the string and null terminating character.",5.0,5.0,5.0,0.690488338470459,0.690488338470459,0.6703303456306458,0.6703303456306458
663,663,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"All strings represented by character arrays end with the null character. You declare an object of type string just like any other type, for example:  string s; ",5.0,5.0,5.0,0.7413193583488464,0.7413192391395569,0.700622022151947,0.7006219625473022
664,664,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"By using an array of characters, one can store and manipulate the strings rather than just having a type string variable.",1.0,4.0,2.5,0.7006142139434814,0.7006142735481262,0.6639886498451233,0.6639886498451233
665,665,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,type string is an array of chars that will make an array of single letter characters while an array of strings will be an actual array of words (or an array of char arrays),0.0,4.0,2.0,0.6117352247238159,0.6117352247238159,0.5914385318756104,0.5914384722709656
666,666,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"They're basically the same, however, a string ends w/ a null character, denoting the end of the string (and the size). A char array has potential to be any size, so it must be declared or limited.",2.0,5.0,3.5,0.6524859070777893,0.6524859666824341,0.6453636884689331,0.6453636288642883
667,667,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,string is a class in the standard library and has method that modify it. Whereas the char array is on able to be modifie by the user.,4.0,4.0,4.0,0.7146432399749756,0.7146432399749756,0.6234760880470276,0.6234760284423828
668,668,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"By using an array of characters, you are limited to the size of the array of characters.  By declaring by type the end of the string is acknowledged by white space.",3.0,4.0,3.5,0.7095632553100586,0.7095632553100586,0.6560037136077881,0.6560036540031433
669,669,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"The data class type string are designed to handle character data, and has many functions built into the class library to deal with them. An array of characters however is subject to all the same rules of any other array with no real additional functionality. Another difference is that the string class deals with the null character implicitly, unlike an array of characters, which must handle the null character explicitly. ",5.0,5.0,5.0,0.6790847182273865,0.6790846586227417,0.6793702840805054,0.6793702244758606
670,670,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,string declared used in an array of characters contains each character in the array and a special string-termination character called the null character versus the type string.,5.0,5.0,5.0,0.7124789953231812,0.7124790549278259,0.7628560066223145,0.762856125831604
671,671,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,A char array reads a string as each individual character. A string literal array reads the entire string.,2.0,4.0,3.0,0.6744906902313232,0.6744906306266785,0.6131095290184021,0.6131094694137573
672,672,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,array of characters can only hold as many characters as the array size and strings are not that limited.,4.0,4.0,4.0,0.6041828393936157,0.6041828989982605,0.5037321448326111,0.5037321448326111
673,673,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"Stings can only be modified by functions of the String class, an array of characters can be modified by the user",3.0,4.0,3.5,0.6502097249031067,0.6502096652984619,0.6459853053092957,0.6459853053092957
674,674,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"if by type string, the array contains an additional terminating null character",3.0,5.0,4.0,0.704334557056427,0.704334557056427,0.7657767534255981,0.7657767534255981
675,675,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,The array of characters has a null character \0 at the end of the array to signify the array's end.  The string does not have this.,5.0,5.0,5.0,0.8124287128448486,0.8124286532402039,0.740610659122467,0.7406105399131775
676,676,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,strings with type string are just that. Strings. They are not part of an array list at all where as one declared by an array is actually an array of characters able to be pointed and detected.,2.0,4.0,3.0,0.6356136202812195,0.6356135010719299,0.6469679474830627,0.6469680070877075
677,677,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"the array of characters has a set length, while the type string has virtually unlimited length.",4.0,4.0,4.0,0.5692947506904602,0.569294810295105,0.6395895481109619,0.6395894289016724
678,678,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,Char array - Individual letters can be accessed directly with array subscript notation.  String array - array subscript will return the entire string.,1.0,3.0,2.0,0.6995546817779541,0.6995546817779541,0.6654791235923767,0.6654791831970215
679,679,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,array of characters need a termination character as well as size specification whether its explicit or implicit.,5.0,5.0,5.0,0.5988603830337524,0.5988603830337524,0.5959370136260986,0.5959370136260986
680,680,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,when using an array individual characters can be accessed and manipulated.,1.0,4.0,2.5,0.6391758918762207,0.6391758322715759,0.5503419637680054,0.5503419041633606
681,681,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,strings declared using an array of characters could result in data loss if character array not initialized large enough.,4.0,4.0,4.0,0.686052143573761,0.6860520839691162,0.6225342154502869,0.6225341558456421
682,682,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"an array is passed by reference therefore if an array of characters is changed, the memory is changed not just the variable",3.0,4.0,3.5,0.6572936773300171,0.6572936177253723,0.5686901211738586,0.5686901211738586
683,683,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"the type string has several built-in functions not available when using a char array, but the individual characters in an array or more directly accessible than the characters in a string type string.",3.0,4.0,3.5,0.6235731244087219,0.6235731244087219,0.6480537056922913,0.6480537056922913
684,684,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"declaring a string, it includes white spaces but declaring a array of character does not include white spaces",0.0,3.0,1.5,0.6196023225784302,0.6196022629737854,0.5666676759719849,0.5666676759719849
685,685,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"an array of characters has one element a string doesnt have. it is the termination element, or ""null""",5.0,5.0,5.0,0.7867798209190369,0.7867798209190369,0.7182791829109192,0.718279242515564
686,686,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,Strings declared using the type string can vary in length. Strings declared using an array of characters can not extend past the array length.,4.0,4.0,4.0,0.6292275786399841,0.6292275786399841,0.5695023536682129,0.5695022940635681
687,687,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"cant modify individual characters of a type string array, character type array can modify individual characters",1.0,4.0,2.5,0.5986699461936951,0.5986698865890503,0.5892980098724365,0.5892979502677917
688,688,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"the type string is a class and is safer, while the other is just an array of characters.",3.0,4.0,3.5,0.6400116682052612,0.6400116086006165,0.5405280590057373,0.5405279994010925
689,689,4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The strings declared using an array of characters have a null element added at the end of the array.,"array  it is the collection of similar data types ex:int a[10]  ten indicates the size of array. [ ] is index of array, we can give only integer values to array of a.  where as string mean collection of group of characters.  string declarations have a datatype usually causes storage to be allocated in memory that is capable of holding some predetermined number of symbols.    However  Arrays can be declared to contain values of any non reference data type. Multiple arrarys of the same type ",1.0,4.0,2.5,0.5953821539878845,0.5953821539878845,0.5798114538192749,0.5798114538192749
690,690,4.3,How are arrays passed to functions?,by reference.,by reference only,5.0,5.0,5.0,0.5548825860023499,0.5548825860023499,0.7069838047027588,0.7069838047027588
691,691,4.3,How are arrays passed to functions?,by reference.,a reference pointer to an element in the array.,4.0,5.0,4.5,0.6613709926605225,0.6613709926605225,0.7451770901679993,0.7451770901679993
692,692,4.3,How are arrays passed to functions?,by reference.,Arrays are passed to functions by reference.,5.0,5.0,5.0,0.6793334484100342,0.6793334484100342,0.7724472880363464,0.7724472284317017
693,693,4.3,How are arrays passed to functions?,by reference.,#NAME?,5.0,5.0,5.0,0.31819096207618713,0.31819096207618713,0.39182376861572266,0.39182373881340027
694,694,4.3,How are arrays passed to functions?,by reference.,Arrays are passed by reference.,5.0,5.0,5.0,0.6793334484100342,0.6793334484100342,0.7724472880363464,0.7724472284317017
695,695,4.3,How are arrays passed to functions?,by reference.,"you must pass the array and its size to the function. Ex. function(array, size);",4.0,4.0,4.0,0.5482195615768433,0.5482195615768433,0.6343786716461182,0.6343787312507629
696,696,4.3,How are arrays passed to functions?,by reference.,"Usually the same way you pass anything else... you do not have to specify the length of a char array, just pass it to the function by sending the name of the array.  Example: char str[20]; isPalindrome(str); // this sends the char array to the function isPalindrome.  Otherwise, would need to send the length of the array as well.",3.0,4.0,3.5,0.4469447433948517,0.4469447135925293,0.5237473845481873,0.5237473845481873
697,697,4.3,How are arrays passed to functions?,by reference.,you pass a pointer to the first item and also pass the size.,4.0,3.0,3.5,0.5840145349502563,0.5840145349502563,0.627514660358429,0.6275145411491394
698,698,4.3,How are arrays passed to functions?,by reference.,By reference.,5.0,5.0,5.0,0.796269953250885,0.7962698936462402,0.7915256023406982,0.7915255427360535
699,699,4.3,How are arrays passed to functions?,by reference.,"In two parts, the array itself, and it's size, so that the function it's being passed to can avoid out of bounds errors.",4.0,4.0,4.0,0.5331952571868896,0.5331952571868896,0.5062371492385864,0.5062370896339417
700,700,4.3,How are arrays passed to functions?,by reference.,Specify array name without brackets. Array size is normally passed as another argument so the function can process the specific number of elements in the array. Arrays are passed by reference. Individual array elements passed by value. Functions that take arrays as arguments.,5.0,5.0,5.0,0.4906125366687775,0.4906125068664551,0.5067700147628784,0.5067699551582336
701,701,4.3,How are arrays passed to functions?,by reference.,Arrays are passed by reference.,5.0,5.0,5.0,0.6793334484100342,0.6793334484100342,0.7724472880363464,0.7724472284317017
702,702,4.3,How are arrays passed to functions?,by reference.,the same way but with [] at the declaration and the actual function.,3.0,3.0,3.0,0.587109386920929,0.5871093273162842,0.6202247738838196,0.6202247738838196
703,703,4.3,How are arrays passed to functions?,by reference.,specify the array name without brackets.,3.0,3.0,3.0,0.5224517583847046,0.5224516987800598,0.6076192855834961,0.6076192259788513
704,704,4.3,How are arrays passed to functions?,by reference.,by reference,5.0,5.0,5.0,0.5548825860023499,0.5548825860023499,0.7069838047027588,0.7069838047027588
705,705,4.3,How are arrays passed to functions?,by reference.,"You pass the name of the array to the function. So for: int bin [10]; you pass it to an array like so: jingle(bin); but jingle must be declared correctly in order to receive an array, either with prototype void jingle (int []); or with the definition in its initialization: void jingle (int array[]);  It's also worth noting that arrays are passed to function by reference, so as to not copy large arrays over and over and burn memory.  This gives the function complete control over the array however.",5.0,5.0,5.0,0.4312309622764587,0.4312309920787811,0.5158207416534424,0.5158207416534424
706,706,4.3,How are arrays passed to functions?,by reference.,They are called by the function then the function must loop through the array to get the set of characters.,1.0,3.0,2.0,0.4675732553005218,0.4675732553005218,0.5046771764755249,0.5046771764755249
707,707,4.3,How are arrays passed to functions?,by reference.,"by reference by default, unless you specify const, at which the later will make the array unmodifiable.",5.0,5.0,5.0,0.5382201671600342,0.538220226764679,0.6042493581771851,0.6042494177818298
708,708,4.3,How are arrays passed to functions?,by reference.,"The function recieves both the array and the array size as parameters. function(arrayName, arraySize)",4.0,4.0,4.0,0.4956299066543579,0.4956298768520355,0.49180757999420166,0.4918075501918793
709,709,4.3,How are arrays passed to functions?,by reference.,specifying array name and passing as reference in an argument into the function,5.0,5.0,5.0,0.4278986155986786,0.42789867520332336,0.5224359631538391,0.5224360823631287
710,710,4.3,How are arrays passed to functions?,by reference.,1st you must specify the array name without brackets and then the array name and size are passed as two arguments in the function call.,4.0,4.0,4.0,0.4650942981243134,0.4650942981243134,0.49424871802330017,0.49424871802330017
711,711,4.3,How are arrays passed to functions?,by reference.,"arrays are passed by reference, passing the starting address of array. programmer specifies the array name without brackets and passes the array size as another argument so the function can process the specific number of elements in the array",5.0,5.0,5.0,0.4688308835029602,0.4688308835029602,0.5192713737487793,0.5192713737487793
712,712,4.3,How are arrays passed to functions?,by reference.,by reference only,5.0,5.0,5.0,0.5548825860023499,0.5548825860023499,0.7069838047027588,0.7069838047027588
713,713,4.3,How are arrays passed to functions?,by reference.,by reference,5.0,5.0,5.0,0.5548825860023499,0.5548825860023499,0.7069838047027588,0.7069838047027588
714,714,4.3,How are arrays passed to functions?,by reference.,by reference,5.0,5.0,5.0,0.5548825860023499,0.5548825860023499,0.7069838047027588,0.7069838047027588
715,715,4.3,How are arrays passed to functions?,by reference.,by refrence,5.0,5.0,5.0,0.4883860051631928,0.4883860051631928,0.4921937882900238,0.4921937882900238
716,716,4.3,How are arrays passed to functions?,by reference.,"function( int [], int length)",4.0,4.0,4.0,0.4868266880512238,0.4868267178535461,0.5329175591468811,0.5329174995422363
717,717,4.3,How are arrays passed to functions?,by reference.,by reference,5.0,5.0,5.0,0.5548825860023499,0.5548825860023499,0.7069838047027588,0.7069838047027588
718,718,4.3,How are arrays passed to functions?,by reference.,by reference,5.0,5.0,5.0,0.5548825860023499,0.5548825860023499,0.7069838047027588,0.7069838047027588
719,719,4.3,How are arrays passed to functions?,by reference.,"The function reads the variables, stores them. then returns the what ever the variable reads. The function then prints the content of the array. ",1.0,4.0,2.5,0.5079525113105774,0.5079525113105774,0.5165868997573853,0.5165868997573853
720,720,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",a static array will store the new values that were assigned to each of its elements. meaning if you call a function twice it will use the last values that were returned the first time.  if you don't declare it static then the new values will not be stored and will be reset to their original value,5.0,5.0,5.0,0.7547119855880737,0.7547121047973633,0.6603614091873169,0.6603614091873169
721,721,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",a static array can only be referenced not accessed. Also static arrays can be used without creating an object.,3.0,5.0,4.0,0.7478874325752258,0.7478874921798706,0.7093483209609985,0.7093483209609985
722,722,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",An array declared as static is not created and and initialized each time the function and it is also not destroyed when the function terminates.,5.0,5.0,5.0,0.8700920939445496,0.8700921535491943,0.7829854488372803,0.782985508441925
723,723,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","A program intializes static local arrays when their declarations are first encountered.  If a static array is not initialized explicityly by the programmer, earch element of that array is intialized to zero by the compiler when the array is created.  Non-static array members cannot be initialized at all in C++.",3.0,5.0,4.0,0.8021336793899536,0.8021336793899536,0.7632202506065369,0.7632201910018921
724,724,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",Arrays that are static remain the same size throughout the program execution.,3.0,5.0,4.0,0.7396147847175598,0.7396146655082703,0.7028247117996216,0.7028247117996216
725,725,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","a static array will only be initilized once, a non static array will be re-initilized once the program reaches the initilization line again.",5.0,5.0,5.0,0.6900952458381653,0.6900953054428101,0.6333723664283752,0.6333723664283752
726,726,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",An array declared as static is available from beginning of program to end. One w/o static declaration disappears if it is not accessed within the right scope.,4.0,5.0,4.5,0.8086576461791992,0.8086575269699097,0.7291127443313599,0.7291126847267151
727,727,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",a static array has pre-runtime size and that size cannot be changed. A dynamic array gets its size at runtime.,1.0,5.0,3.0,0.7798510789871216,0.7798510193824768,0.6774089932441711,0.6774089932441711
728,728,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","If an array is declared as static, it is not created each time the array is called.",5.0,5.0,5.0,0.7444685101509094,0.7444684505462646,0.6417608261108398,0.6417608261108398
729,729,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","An array that is not declared as static will re-initialize every time the function declaring it is called. A static array will initialize only once, at the declaration, and will store the values in it's elements throughout the duration of the program, even if the same function is called multiple times, a static array will only initialize once.",5.0,5.0,5.0,0.8371970653533936,0.8371970653533936,0.7859621644020081,0.7859621047973633
730,730,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","All elements are initialized to zero if not explicitly initialized, this does not happen for automatic local arrays  ",4.0,5.0,4.5,0.7297552227973938,0.7297552227973938,0.6989963054656982,0.6989963054656982
731,731,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","All elements are initialized to zero if not explicitly initialized for a static array, while a non-static array is not initialized to zero.",4.0,5.0,4.5,0.7275400757789612,0.727540135383606,0.6578239798545837,0.6578239798545837
732,732,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",static cannot be changed,1.0,5.0,3.0,0.3959238827228546,0.3959238529205322,0.329048752784729,0.3290487825870514
733,733,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","A static array has a set size that cannot change. The data may not need all of the space assigned, or could go beyond the size.",3.0,5.0,4.0,0.7334436774253845,0.7334437370300293,0.6545507907867432,0.6545507311820984
734,734,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","A static member prevents naming conflicts (not put into global namespace) while allowing for information hiding (private, public).",1.0,5.0,3.0,0.720702052116394,0.7207021117210388,0.6955606341362,0.6955605149269104
735,735,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",A static local array exists for the duration of the program and its elements are initialized to 0 if not explicitly initialized. So a static local array's elements will still be the same when called later unless specifically initialized to something else.  This doesn't happen for automatic arrays.,5.0,5.0,5.0,0.7945957779884338,0.7945958971977234,0.7333683371543884,0.7333683967590332
736,736,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","Static arrays are those with a declared size, that is known to the program, whereas non-static arrays leave the size undeclared and open so it can be assigned later. Usually used for input purposes. ",1.0,5.0,3.0,0.705180823802948,0.7051808834075928,0.7522614598274231,0.7522614002227783
737,737,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","static arrays keep the values after the end of a function, while non static reinitialize every time.",5.0,5.0,5.0,0.7703732252120972,0.7703732848167419,0.727425754070282,0.7274256944656372
738,738,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","Static arrays are created and initialized only once, and the values aren't destroyed  when the function terminates in the program. Automatic arrays reset everytime the function is called.",5.0,5.0,5.0,0.7856990694999695,0.7856990694999695,0.8103313446044922,0.8103313446044922
739,739,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","its not created and initialized each time program calls the function, and is not destroyed every time the function ends in the program.",5.0,5.0,5.0,0.7813066244125366,0.7813065648078918,0.7366644144058228,0.7366644144058228
740,740,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","When we declare it static the array is not destroyed after the function is over.  When an array is not declared as static, the array is created and initialized every time a function calls it.",5.0,5.0,5.0,0.7852030396461487,0.7852030992507935,0.7901041507720947,0.79010409116745
741,741,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",the static array exists for the duration of the program,4.0,5.0,4.5,0.5706806182861328,0.5706804990768433,0.5298078060150146,0.5298078060150146
742,742,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",an array declared as static can only be declared once,2.0,5.0,3.5,0.06386055797338486,0.06386056542396545,0.2530088424682617,0.2530088722705841
743,743,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","A static array exists in memory until the program terminates, whereas an automatic (or normal) array is removed when the function that created it terminates",5.0,5.0,5.0,0.7394046187400818,0.7394046783447266,0.7245393991470337,0.7245393991470337
744,744,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",not answered,0.0,0.0,0.0,0.3385434150695801,0.3385434150695801,0.4339312016963959,0.4339311718940735
745,745,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",Only constants can be used to declare the size of automatic and static arrays Exists for the duration of the program Is initialized when its declaration is first encountered All elements are initialized to zero if not explicitly initialized,5.0,5.0,5.0,0.7651951313018799,0.7651951313018799,0.7276802062988281,0.7276802659034729
746,746,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",A static array cannot be changed in the program.,1.0,5.0,3.0,0.6439903378486633,0.6439903378486633,0.5572546720504761,0.5572547316551208
747,747,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",static arrays are available throughout the program,5.0,5.0,5.0,0.6404852867126465,0.6404853463172913,0.5780430436134338,0.5780429840087891
748,748,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","a static array is allocated when the program starts and is freed when the program exits but has limited scope, while an array that is not declared static is allocated and freed when it comes into and out of scope.",5.0,5.0,5.0,0.7083818912506104,0.7083818912506104,0.6332212090492249,0.6332212686538696
749,749,4.4,"What is the difference between an array declared as static, and one that is not?","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","if they are declared fixed or static that means they can't change size once their storage has been allocated, however one that is not or dynamic arrarys can be resized.   ",1.0,5.0,3.0,0.6945993900299072,0.6945993900299072,0.7059590816497803,0.7059590816497803
750,750,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.","at least 2, depending on how many arrays are being used.",1.0,4.0,2.5,0.7193725109100342,0.7193725109100342,0.6973171234130859,0.6973171234130859
751,751,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",all of them.,2.0,5.0,3.5,0.5178098678588867,0.5178098082542419,0.6195429563522339,0.6195430159568787
752,752,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.","When passing a multi-dimensional array, all dimensions must be specified except for the first dimension.",5.0,5.0,5.0,0.7390713095664978,0.7390713095664978,0.7516778111457825,0.7516778111457825
753,753,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",It depends what parameters you are passing in a multidimensional.  A multideminsional can have more than two dimensions.,2.0,5.0,3.5,0.5489229559898376,0.5489229559898376,0.6278244256973267,0.6278243660926819
754,754,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",The first dimension is not required however the subsequent dimension(s) are needed for the compiler.,5.0,5.0,5.0,0.6627698540687561,0.6627698540687561,0.6716731190681458,0.6716731190681458
755,755,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",all but the first,5.0,5.0,5.0,0.4347381293773651,0.4347381591796875,0.4468669295310974,0.4468669593334198
756,756,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",All of the dimensions must be specified.,2.0,5.0,3.5,0.6262146234512329,0.6262145638465881,0.7317007780075073,0.7317008376121521
757,757,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",just the first one at least.,1.0,3.0,2.0,0.788875937461853,0.7888759970664978,0.7724964022636414,0.7724964618682861
758,758,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.","Two paramaters, the array and how many columns.  array(a[],[3])",4.0,4.0,4.0,0.6254870891571045,0.6254869699478149,0.6490879058837891,0.6490879058837891
759,759,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.","The size of the first dimension can be omitted, same as a regular array. However, for every dimension outside the first, the size of those dimensions must be specified when passed, for example, a multi-dimensional array of [2][4][6] with the name MultiArray would be passed as: ""MultiArray[][4][6], 2""",4.0,5.0,4.5,0.5941401124000549,0.5941401124000549,0.6313584446907043,0.6313584446907043
760,760,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",Size of subsequent dimensions are required. Compiler must know how many elements to skip to move to the second element in the first dimension,4.0,5.0,4.5,0.5053759217262268,0.5053759217262268,0.5267517566680908,0.5267517566680908
761,761,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",Every dimension after the first.,5.0,5.0,5.0,0.6877719163894653,0.6877718567848206,0.7644357681274414,0.7644357681274414
762,762,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",both,2.0,3.0,2.5,0.12987810373306274,0.12987810373306274,0.41312137246131897,0.41312140226364136
763,763,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.","the size of the first dimension does not need to be specified, but all other dimensions do.",5.0,5.0,5.0,0.6520034670829773,0.6520034670829773,0.6677617430686951,0.6677616834640503
764,764,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.","when passing (in main) a multidimensional array to a function, no dimensions need be specified",1.0,3.0,2.0,0.5916268825531006,0.5916268825531006,0.688668429851532,0.6886683702468872
765,765,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.","All dimensions except for the first one need to be specified when passing an array to a function, the compiler needs to know how many memory addresses to skip to make it back to the 2nd element in the first dimension.  The size of the first dimension does not need to be specified.",5.0,5.0,5.0,0.7289900183677673,0.7289901375770569,0.7058265209197998,0.705826461315155
766,766,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",as many as there are dimensions. Most commonly just rows and columns,2.0,5.0,3.5,0.4568674266338349,0.4568674862384796,0.5096980333328247,0.5096979737281799
767,767,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.","at least 2, but it should always equal the number of dimensions that the argument is expecting... like...  blah[][][][] will require 4 dimensional array input. blah[][][] will require a 3 dimensional array. blah[][] will require a 2 dimensional array.",1.0,5.0,3.0,0.5867109894752502,0.5867108106613159,0.5768883228302002,0.5768882632255554
768,768,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.","None, just pass the array name.",1.0,3.0,2.0,0.6131574511528015,0.6131574511528015,0.7663849592208862,0.7663849592208862
769,769,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",all subsequent dimensions after the first dimension.  first is not needed to be specified.,5.0,5.0,5.0,0.6082558631896973,0.6082558631896973,0.6506509184837341,0.6506509780883789
770,770,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.","all dimensions, excluding the first one.",5.0,5.0,5.0,0.8857585191726685,0.8857585787773132,0.8674923777580261,0.8674921989440918
771,771,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",all dimensions but the first,5.0,5.0,5.0,0.4347381293773651,0.4347381591796875,0.4468669295310974,0.4468669593334198
772,772,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",the first needs to be specified by size and the rest need only be stated( first like this [3] then [][][]),1.0,5.0,3.0,0.5773911476135254,0.5773910880088806,0.5973362922668457,0.5973362922668457
773,773,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",one less than the number of dimensions the array contains,4.0,5.0,4.5,0.4439858794212341,0.4439858794212341,0.5266187787055969,0.5266187191009521
774,774,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",not answered,0.0,0.0,0.0,0.3385434150695801,0.3385434150695801,0.4339312016963959,0.4339311718940735
775,775,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",one,1.0,3.0,2.0,0.3593411445617676,0.3593411445617676,0.4811229705810547,0.4811229705810547
776,776,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",All subsequent dimensions after the first one.,5.0,5.0,5.0,0.7705972790718079,0.7705973386764526,0.8089736700057983,0.8089735507965088
777,777,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",two or more,1.0,4.0,2.5,0.4235395193099976,0.42353954911232,0.43952232599258423,0.43952229619026184
778,778,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.",1 less than the total number of dimensions,4.0,5.0,4.5,0.4748177826404572,0.4748178124427795,0.5298603177070618,0.529860258102417
779,779,4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All the dimensions, except the first one.","Multi dimensional arrays are accessed using more than 1  index, one for each dimension at least. ",2.0,5.0,3.5,0.6714267730712891,0.6714269518852234,0.6533594727516174,0.653359591960907
780,780,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","Takes an element of an array and compares it with the next element, depending on the values of the two elements they will switch and then the program will compare the new switched element with the next one in the array.",1.0,5.0,3.0,0.7992057204246521,0.7992057800292969,0.7362254858016968,0.7362255454063416
781,781,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","Insertion sort divides the list into sorted and unsorted regions, then takes each item from the unsorted region and inserts it into its correct order in the sorted region.",5.0,5.0,5.0,0.8160072565078735,0.8160073161125183,0.7897858023643494,0.7897858023643494
782,782,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",The sorted array or list is built one entry at a time.,3.0,4.0,3.5,0.7501959800720215,0.7501960992813109,0.7439738512039185,0.743973970413208
783,783,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",It starts with the second element and checks it to see if it is less than the element(s) to the left of it and if it is it inserts it into its corrected position.,5.0,5.0,5.0,0.8027307391166687,0.8027307391166687,0.7766439914703369,0.7766440510749817
784,784,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",Compare two numbers at a time and swap until the entire list is sorted.,1.0,3.0,2.0,0.7498244047164917,0.7498243451118469,0.768968939781189,0.7689688801765442
785,785,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","Assume the first number is sorted, then move down the list and 'insert' the numbers you come across into the corresponding place on the sorted side of the list.",5.0,5.0,5.0,0.8076775670051575,0.8076775670051575,0.7514238953590393,0.7514238953590393
786,786,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",insertion sort is were after k iterations the first k items in the array are sorted it take the k+1 item and inserts it into the correct position in the already sorted k elements.,5.0,4.0,4.5,0.7999559044837952,0.7999557256698608,0.8081108927726746,0.8081109523773193
787,787,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",Looking at the 2nd element move forward and place the element in the correct spot.,4.0,5.0,4.5,0.7238190770149231,0.7238190770149231,0.7825360894203186,0.7825360298156738
788,788,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","Starting at the beginning of an array, take each element in order and place it in it's correct position relative to all previously sorted elements. ",5.0,5.0,5.0,0.8173189759254456,0.8173189759254456,0.8316282033920288,0.8316282033920288
789,789,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",To sort the elements in an array by removing an element from the input data and inserting it at the correct position.,5.0,5.0,5.0,0.8188742995262146,0.8188744187355042,0.8141357898712158,0.8141357898712158
790,790,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","Insertion sort removes an element from the data, and inserts it at the correct position in the already sorted list.",5.0,5.0,5.0,0.8319678306579591,0.8319678306579591,0.8417656421661377,0.8417655825614929
791,791,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",Take a number and choose a pivot point and insert the number in the correct position from the pivot point.,2.0,4.0,3.0,0.719264566898346,0.719264566898346,0.7493862509727478,0.749386191368103
792,792,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",have a marker and sort everything to the left of the value for every new value when moving to the right.,3.0,3.0,3.0,0.7410410046577454,0.7410408854484558,0.7517390251159668,0.7517390251159668
793,793,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",The main idea behind insertion sort is to take a random variable from the right and insert it in order to the left.,4.0,5.0,4.5,0.7614267468452454,0.7614267468452454,0.8016272187232971,0.8016271591186523
794,794,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",Insertion sort progresses through a list of elements and determines where the next element should be inserted into an already sorted array starting with sorting and using the first two elements.,5.0,4.0,4.5,0.8366435766220093,0.8366435170173645,0.8418664336204529,0.8418664932250977
795,795,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","it goes through the list only once, picking each integer and putting it in its desired position, then continuing. ",4.0,4.0,4.0,0.7800014019012451,0.7800013422966003,0.796151340007782,0.7961513996124268
796,796,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",Inserting array items in to their appropriate positions from smallest to largest at a pivot which starts on the second element of the array.,3.0,4.0,3.5,0.8211497664451599,0.8211496472358704,0.8069668412208557,0.8069666624069214
797,797,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",Insert the item into its proper position by shifting larger sorted array values to the right.,1.0,5.0,3.0,0.8435456156730652,0.8435457348823547,0.8260759711265564,0.8260759115219116
798,798,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",a comparison sort in which the sorted array is built one entry at a time,4.0,4.0,4.0,0.6164780855178833,0.6164780855178833,0.6711645722389221,0.6711645722389221
799,799,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","Insertion sort is an algorithm where the first element of the array is in the sorted list, all the other pick one by one and taken from the unsorted array, to the sorted array.",5.0,4.0,4.5,0.7989804148674011,0.7989804148674011,0.7916148900985718,0.7916149497032166
800,800,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","Every iteration of an insertion sort takes away an element from the input data, inserting it at the right position in the sorted list.",5.0,5.0,5.0,0.8572052121162415,0.8572050929069519,0.8361319899559021,0.8361321091651917
801,801,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",the insertion sort creates a new array and inserts each item in its place with respect to the new array.,4.0,4.0,4.0,0.7586199045181274,0.758620023727417,0.7356159090995789,0.7356159090995789
802,802,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","Insertion sort takes each entitity of an unsorted array in order, and sorts it into the correct position between the entities it has sorted.",5.0,5.0,5.0,0.8225680589675903,0.8225680589675903,0.7845264077186584,0.7845263481140137
803,803,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","it takes the second element and swaps it with the 1st if it is less and keeps it there if its larger, then it goes to the third element and inserts it in the right places with respect to the first 2 elements and so on... ",5.0,5.0,5.0,0.7348970174789429,0.7348968386650085,0.7634116411209106,0.7634116411209106
804,804,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","Starting with the first element in the array, each following element is put in place by determining if it is smaller or larger than the starting element.",3.0,5.0,4.0,0.79680335521698,0.79680335521698,0.7804178595542908,0.780417799949646
805,805,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","one by one, each item is taken and placed into the correct place in the sorted portion of the array until there are no more items",5.0,4.0,4.5,0.7470244765281677,0.747024416923523,0.7681121230125427,0.768112063407898
806,806,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",you take each element and insert it in the correct position with respect to all the elements before it,5.0,5.0,5.0,0.6603126525878906,0.6603125929832458,0.726854145526886,0.726854145526886
807,807,5.1,"In one sentence, what is the main idea implemented by insertion sort?","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","Insertion sort is a simple sorting algorithm, a comparison sort in which the sorted array (or list) is built one entry at a time.",4.0,4.0,4.0,0.7719027400016785,0.7719027996063232,0.7744279503822327,0.7744279503822327
808,808,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",Searches an array for the largest or the smallest element and is moved out to the front of the array then it will search for the next largest or the smallest element to move out to the front,5.0,5.0,5.0,0.6855769753456116,0.6855769157409668,0.6501087546348572,0.650108814239502
809,809,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","Selection sort searches the whole array for the largest item and puts it at the end of the array, then searches for the second largest item and puts it at the second to last spot and so on.",5.0,4.0,4.5,0.8010721206665039,0.8010720610618591,0.7108961939811707,0.7108963131904602
810,810,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",Finds the minimum value and swap it with the value in the first position.,5.0,5.0,5.0,0.7161383628845215,0.7161383032798767,0.7676181197166443,0.7676181793212891
811,811,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",It finds the minimum element in the array and swaps it with the first element then repeats this step swapping the minimum element with nth positions in the array.,5.0,5.0,5.0,0.8565775752067566,0.8565775752067566,0.8319373726844788,0.831937313079834
812,812,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","Find the lowest value and place it at the front, then find the next lowest and place it in front of the last value, etc.",4.0,5.0,4.5,0.7342950105667114,0.7342948913574219,0.6661975979804993,0.666197657585144
813,813,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","Cycle through the unsorted list, place the minimum in the next slot in the sorted list, and repeat.",5.0,4.0,4.5,0.7328012585639954,0.7328011989593506,0.7317725419998169,0.7317725419998169
814,814,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",find the minimum value in the list swap it with the first element in the list the find the second largest and swap it with the second element in the array continue like this until  the array is sorted.,5.0,5.0,5.0,0.7844572663307191,0.7844572663307191,0.7570754289627075,0.7570753693580627
815,815,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",Find the smallest and put it in the current position till you get to the end.,5.0,5.0,5.0,0.721329927444458,0.7213298678398132,0.68345046043396,0.6834504008293152
816,816,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","Find the lowest unsorted value in the array and place it at the current position (starting at the first element in the array) and advance the ""current"" position by one. ",5.0,5.0,5.0,0.8194862604141235,0.8194860219955444,0.7560510635375977,0.7560510039329529
817,817,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",To sort the elements by comparing two elements and swapping the smaller one to sort the elements in the array.,2.0,5.0,3.5,0.8483788371086121,0.8483787775039673,0.737831175327301,0.7378311157226562
818,818,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","Selection sort finds the minimum value in the list, swaps it with the first value in the list, and repeats throughout the list.",5.0,4.0,4.5,0.826802670955658,0.8268026113510132,0.7603052258491516,0.7603052258491516
819,819,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","Select the minimum number from the array and put it in the current position, then move on",5.0,5.0,5.0,0.7074260115623474,0.7074258923530579,0.7433969378471375,0.7433969378471375
820,820,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",Find the lowest value and place it in the front of the list and swap it with that value. Continue moving right.,5.0,5.0,5.0,0.7728105187416077,0.7728105783462524,0.7537716627120972,0.7537716627120972
821,821,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",The main idea behind selection sort is to take the least variable from the right and put it directly to the left.,5.0,4.0,4.5,0.6670290231704712,0.6670289635658264,0.7201011180877686,0.7201011180877686
822,822,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","Find the smallest value in the list and make it the first element, then find the smallest value of the leftover list and make it the first element of the leftover list and continue until the list is sorted.",5.0,5.0,5.0,0.7739091515541077,0.7739090323448181,0.7180550694465637,0.7180551290512085
823,823,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",It runs through and finds the lowest (or highest) value and puts it in its desired position.,5.0,4.0,4.5,0.7811855673789978,0.781185507774353,0.720361590385437,0.7203615307807922
824,824,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","Places the smallest item in the list at position 1, and then proceeds to each value until the last position of the ray is reached.",5.0,5.0,5.0,0.8034969568252563,0.8034968972206116,0.747580885887146,0.747580885887146
825,825,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",Search for the largest item in an array and swap it with the last unsorted item.,5.0,4.0,4.5,0.7601353526115417,0.760135293006897,0.7523364424705505,0.7523364424705505
826,826,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",finds the smallest element and places in 1st position. then the process is repeated on the rest of the array.,5.0,5.0,5.0,0.7875658869743347,0.7875658273696899,0.7890912294387817,0.789091169834137
827,827,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",Selection sort is an algorithm that selects the larges item the array and puts it in its place; then select the next largest until the array is sorted,5.0,4.0,4.5,0.8219484090805054,0.8219484686851501,0.7736791968345642,0.7736791372299194
828,828,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",Select the smallest number in the list and move it to the front of the list and then advance to the next number.,5.0,5.0,5.0,0.7829385995864868,0.7829384803771973,0.7579115033149719,0.7579115033149719
829,829,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",the selection sort chooses the largest or smallest value in an unsorted list and creates a new list using the selection depending on how it is sorted.,5.0,4.0,4.5,0.8114765882492065,0.8114765882492065,0.7400175929069519,0.7400176525115967
830,830,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","Selection sort finds the smallest number left unsorted in an array, and puts it at the end of what it has sorted",4.0,5.0,4.5,0.7989481091499329,0.7989480495452881,0.7613750696182251,0.7613749504089355
831,831,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","selects the minimum from the remaining elements of the array, and palces the miminum in the current position and moves to the next position",5.0,5.0,5.0,0.8098551630973816,0.8098551630973816,0.7654163241386414,0.7654163837432861
832,832,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","To put the biggest element at the end of the list and place the next highest element behind it, and so on.",3.0,4.0,3.5,0.7756898999214172,0.7756897807121277,0.7118622660636902,0.711862325668335
833,833,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","the sort finds the largest item and places it at the end, then then next largest is found and placed next to last, continue until there is only one number left, this is the beginning of the sorted array",5.0,4.0,4.5,0.7651190757751465,0.7651190161705017,0.6984735131263733,0.6984735727310181
834,834,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","you loop through the entire list, and for each iteration you find the smallest element and move it to the current position.",5.0,5.0,5.0,0.8091239929199219,0.8091238737106323,0.7311646938323975,0.7311646342277527
835,835,5.2,"In one sentence, what is the main idea implemented by selection sort?","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",Find the minimum value in the list swap it with the value in the first position; repeat the steps above for remainder of the list(starting in the second position.,5.0,5.0,5.0,0.80534827709198,0.80534827709198,0.7684251666069031,0.7684251666069031
836,836,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,"The run time for this sorting program is n^2.  Best case is the list is already sorted, worst case is the list is sorted but in reverse. ",4.0,3.0,3.5,0.7785544991493225,0.7785544395446777,0.7290070652961731,0.7290069460868835
837,837,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,"Insertion sort is O(n) and performs n-1 operations in the best-case scenario, which is when the list or array is already sorted.",5.0,4.0,4.5,0.8449069857597351,0.8449068665504456,0.8041867017745972,0.8041867017745972
838,838,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,"The number of operations for insertions sort, under best-case, is  n(n-1)/2. The best case for insertion sort is on a sorted list where it runs is O(n). ",3.0,3.0,3.0,0.7746843099594116,0.7746843099594116,0.778670608997345,0.7786705493927002
839,839,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,"Best case would be O(n) or n-1, because that's what it takes to scan the array and make one swap. The array would then be sorted and would take only 1 operation.",4.0,4.0,4.0,0.804233968257904,0.804233968257904,0.7728710770606995,0.7728710770606995
840,840,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,Best case-1 Worst Case-N,0.0,4.0,2.0,0.4129200577735901,0.4129200279712677,0.4891268312931061,0.4891268014907837
841,841,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,It will do (n) operations where (n) is the number of elements in the array. Best case is when all the elements are already sorted.,5.0,5.0,5.0,0.8441097140312195,0.8441097140312195,0.8132120370864868,0.813211977481842
842,842,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,O(n),3.0,4.0,3.5,0.4702012240886688,0.4702012538909912,0.6780928373336792,0.6780927777290344
843,843,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,Best case is all elements sorted. n-1.,5.0,3.0,4.0,0.7712220549583435,0.7712221145629883,0.7465720176696777,0.746571958065033
844,844,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,"The best case scenario for an insertion sort, where all the elements of the array have been already sorted, will cause the for loop to iterate ""x"" times (""x"" being the number of elements in the array) and the while loop to never have to iterate, resulting in the insertion sort to require ""x"" operations. ",5.0,5.0,5.0,0.7735719680786133,0.7735719680786133,0.736604630947113,0.7366045117378235
845,845,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,1 operation. the best case scenario s where it is already sorted and does one comparision.,3.0,3.0,3.0,0.6740337610244751,0.6740337610244751,0.7312313318252563,0.7312313914299011
846,846,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,"n operations, where n is the number of items.",3.0,5.0,4.0,0.6090594530105591,0.6090594530105591,0.6663164496421814,0.6663163900375366
847,847,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,n-1,3.0,4.0,3.5,0.4751177728176117,0.4751177728176117,0.5285018682479858,0.5285019278526306
848,848,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,"O(n), the list is already sorted.",5.0,4.0,4.5,0.8162786364555359,0.8162785172462463,0.8115216493606567,0.8115217089653015
849,849,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,Insertion sort will take n-1 operations if the array is in reverse order.,4.0,4.0,4.0,0.769454300403595,0.769454300403595,0.7246043682098389,0.7246043086051941
850,850,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,"In the best case scenario of an already sorted list, insertion sort will progress once through the list.  So the number of operations is directly proportional to the number of elements in the list.  Also noted as O(n) in big o notation. ",5.0,5.0,5.0,0.7664012908935547,0.7664013504981995,0.7581139802932739,0.7581140398979187
851,851,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,1 where there is a list of two ints and only one must be moved.,2.0,3.0,2.5,0.6638703346252441,0.6638703346252441,0.6530870199203491,0.6530869603157043
852,852,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,"Best case is N, while the worst case is N factorial.",2.0,4.0,3.0,0.6885369420051575,0.6885370016098022,0.6666588187217712,0.6666587591171265
853,853,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,n-1 The best case is when the array is already sorted.,5.0,4.0,4.5,0.7900524139404297,0.7900523543357849,0.8115765452384949,0.8115765452384949
854,854,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,worst case its = O(n) time best case its = O(n^2) time,2.0,4.0,3.0,0.6626790761947632,0.6626790165901184,0.7070469856262207,0.7070469260215759
855,855,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,O(n),3.0,4.0,3.5,0.4702012240886688,0.4702012538909912,0.6780928373336792,0.6780927777290344
856,856,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,N number of times.  Where N equals the number of elements in the list.  Best-case scenario is that the elements in the list are already sorted.,5.0,5.0,5.0,0.8129717111587524,0.8129717111587524,0.7876443862915039,0.7876443862915039
857,857,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,the best case scenario for insertion sort is a list that is already sorted. the number of operations would be the same as the number of elements,5.0,5.0,5.0,0.6718025207519531,0.6718025207519531,0.6579803824424744,0.6579803228378296
858,858,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,"insertion sort will make zero operations (and length - 1 comparisons) in the best case scenario, that is, when the array its given is already in order.",3.0,4.0,3.5,0.8217703700065613,0.8217702507972717,0.8123344779014587,0.812334418296814
859,859,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,theta(n) the best case senario is that everything is already sorted,5.0,4.0,4.5,0.5982921719551086,0.5982921719551086,0.6359116435050964,0.635911762714386
860,860,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,n operations  The best case scenario is when all the numbers are in increasing order.,5.0,5.0,5.0,0.706421434879303,0.706421434879303,0.7217250466346741,0.7217251062393188
861,861,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,"it could be considered that having only one item would be the easiest to sort, but this could also be a trivial result as nothing is moved  having two items allows the algorithm to sort the items into the correct order",2.0,3.0,2.5,0.5499877333641052,0.54998779296875,0.49214649200439453,0.49214646220207214
862,862,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,the best case is if it only has to look through the list once. The best case scenario is when it goes through the list and doesn't have to make any changes (the list is already sorted),5.0,3.0,4.0,0.7187759280204773,0.7187758684158325,0.6990377902984619,0.6990377902984619
863,863,5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N (the length of the array) operations achieved for a sorted array.,very simplistic it moves one element from the list by one and inserting them in their correct position into a new slot then starting over. best case is (0)1,2.0,3.0,2.5,0.719389796257019,0.719389796257019,0.6703070402145386,0.6703071594238281
864,864,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),"The base case for a recursive merge sort is one number.  One number by itself is a sorted list, regardless of what number it is.",5.0,5.0,5.0,0.7031342387199402,0.7031342387199402,0.7146099805831909,0.7146099805831909
865,865,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),The base case for a recursive implementation of merge sort is when the sequence being passed to merge sort has less than 2 elements.,5.0,5.0,5.0,0.6758265495300293,0.6758266687393188,0.6518872380256653,0.6518872976303101
866,866,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),The base case for a recursive implementation of merge sort is one.,5.0,5.0,5.0,0.5420874953269958,0.5420874953269958,0.5465152859687805,0.5465152859687805
867,867,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),The best case is the same as the worst case O(n log n) for a recursive merge sort.,1.0,3.0,2.0,0.6611759662628174,0.6611760258674622,0.6659232974052429,0.6659233570098877
868,868,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),there is one object in the split array to sort.,5.0,5.0,5.0,0.6867050528526306,0.6867050528526306,0.6946979761123657,0.6946979761123657
869,869,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),The base case is when the length of the current array is 1.,5.0,5.0,5.0,0.7628947496414185,0.7628946304321289,0.7849060893058777,0.7849060893058777
870,870,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),O(nlog(n)),1.0,4.0,2.5,0.6620391607284546,0.662039041519165,0.6339071393013,0.6339071989059448
871,871,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),Best case is one element.  One element is sorted.,5.0,5.0,5.0,0.7033568024635315,0.7033567428588867,0.6730616688728333,0.6730616092681885
872,872,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),If the array being sorted has 0 or 1 elements,5.0,4.0,4.5,0.7681294679641724,0.7681295275688171,0.8297839760780334,0.8297839760780334
873,873,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),"T(n) = 0, if n&lt;2.",4.0,4.0,4.0,0.5652903318405151,0.5652903914451599,0.6350577473640442,0.635057806968689
874,874,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),"A list size of 1, where it is already sorted.",5.0,5.0,5.0,0.7384639978408813,0.7384639978408813,0.7779914736747742,0.777991533279419
875,875,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),Single element in the array,5.0,5.0,5.0,0.556746780872345,0.5567468404769897,0.5742722153663635,0.5742722153663635
876,876,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),O(nlog(n)),1.0,3.0,2.0,0.6620391607284546,0.662039041519165,0.6339071393013,0.6339071989059448
877,877,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),n * log( n ),1.0,3.0,2.0,0.6519989371299744,0.6519988775253296,0.6978141069412231,0.6978139877319336
878,878,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),A list or array of only 1 element.,5.0,5.0,5.0,0.7001662254333496,0.7001662254333496,0.7516169548034668,0.7516170144081116
879,879,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),where you only must merge sort once,3.0,4.0,3.5,0.4453761875629425,0.4453762471675873,0.35283446311950684,0.35283446311950684
880,880,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),A single Element on the Array.,5.0,5.0,5.0,0.596710205078125,0.596710205078125,0.6495656967163086,0.6495657563209534
881,881,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),There is only one element in the subarray.,5.0,5.0,5.0,0.6400218605995178,0.6400219202041626,0.6458796262741089,0.6458795666694641
882,882,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),"if the array length is less than or equal to 1, then that array is returned to the other array and merged together",5.0,4.0,4.5,0.7279385924339294,0.7279387116432191,0.7504568696022034,0.7504569292068481
883,883,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),"if (right &gt; left)   {     mid = (right + left) / 2;     m_sort(numbers, temp, left, mid);     m_sort(numbers, temp, mid+1, right);      merge(numbers, temp, left, mid+1, right);   } ",2.0,2.0,2.0,0.6253407001495361,0.6253407597541809,0.6063022613525391,0.6063022613525391
884,884,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),The sequence of numbers has zero or one elements.,5.0,5.0,5.0,0.65963214635849,0.6596319675445557,0.7109411954879761,0.7109412550926208
885,885,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),one element in an array,5.0,5.0,5.0,0.5963265895843506,0.5963265299797058,0.6066442728042603,0.6066442131996155
886,886,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),array of length 1,5.0,5.0,5.0,0.4687541127204895,0.4687541127204895,0.7224915623664856,0.7224915623664856
887,887,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),the array has one element,5.0,5.0,5.0,0.5998896956443787,0.5998896956443787,0.6380488872528076,0.6380488872528076
888,888,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),"When there is only one element in the array, or when the starting element in the array is the same as the ending element.",4.0,5.0,4.5,0.7142643928527832,0.7142643928527832,0.6993732452392578,0.6993733048439026
889,889,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),"when each half or the original array has nothing else to sort, and puts the halfs back together",2.0,3.0,2.5,0.6024976968765259,0.6024976968765259,0.565364420413971,0.5653643012046814
890,890,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),the size of the list being sent is &lt;= 1,5.0,4.0,4.5,0.6595715284347534,0.6595714092254639,0.7102586030960083,0.7102586030960083
891,891,5.4,What is the base case for a recursive implementation of merge sort?,When the size of the array to be sorted is 1 (or 2),O(n log n),1.0,3.0,2.0,0.5925472974777222,0.5925472378730774,0.6688694357872009,0.6688694357872009
892,892,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,Its a location in memory that contains the memory address of another location in memory that contains information.,5.0,5.0,5.0,0.8395232558250427,0.8395233154296875,0.7654299736022949,0.7654300332069397
893,893,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,A pointer is a variable that contains a memory address as its value.,5.0,5.0,5.0,0.8680954575538635,0.8680954575538635,0.9017726182937622,0.9017725586891174
894,894,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,A pointer is a variable which stores the address of another variable.,5.0,5.0,5.0,0.9482198357582092,0.9482198357582092,0.9307687282562256,0.9307687282562256
895,895,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,Pointers are variables that contain as their values memory addresses of other variables.,5.0,5.0,5.0,0.8366719484329224,0.8366720080375671,0.8025146722793579,0.8025146722793579
896,896,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,A data type whose value refers to another value stored elsewhere in the computer memory using its address.,4.0,5.0,4.5,0.7683707475662231,0.7683708071708679,0.8340937495231628,0.8340938091278076
897,897,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,a pointer holds a memory location,5.0,4.0,4.5,0.5514931082725525,0.5514931678771973,0.5208642482757568,0.5208643078804016
898,898,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,a name that represents actual location or value of a data type. int *bPtr points to an integer value.,5.0,4.0,4.5,0.7178133130073547,0.7178133130073547,0.7069699764251709,0.7069700360298157
899,899,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,A variable that stores the address of another variable,5.0,5.0,5.0,0.8061144948005676,0.8061146140098572,0.8741956353187561,0.8741955757141113
900,900,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,a pointer is a programming language data type whose value refers directly to (or points to) another value stored elsewhere in the computer memory using its address,5.0,5.0,5.0,0.7100068926811218,0.7100069522857666,0.7359627485275269,0.7359627485275269
901,901,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,A data type whose value refers to another value stored somewhere else in the computer memory using its address.,5.0,5.0,5.0,0.7529146671295166,0.7529146671295166,0.8313449025154114,0.8313448429107666
902,902,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,"It is like a variable however instead of holding data, it holds a location in memory.",4.0,5.0,4.5,0.7089890241622925,0.7089890241622925,0.7147064208984375,0.7147063612937927
903,903,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,A pointer is a reference to a location in memory,5.0,5.0,5.0,0.6988219022750854,0.6988219022750854,0.6791505813598633,0.6791505217552185
904,904,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,A pointer is a reference to the memory location of an object.,4.0,5.0,4.5,0.7296343445777893,0.7296343445777893,0.7734919786453247,0.7734920382499695
905,905,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,A pointer is a variable that contains the memory address of a variable that has a value.,5.0,5.0,5.0,0.9153764843940736,0.9153764843940736,0.9210808277130127,0.9210808277130127
906,906,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,"It is a variable that contains not only a *value but has a memory address associated with it, and can be moved along a string or an array by jumping up one memory address.",2.0,5.0,3.5,0.8001937866210938,0.8001937270164491,0.8122038841247559,0.8122038245201111
907,907,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,Contains a variable's memory address as a value.,5.0,5.0,5.0,0.7834984660148621,0.7834984064102173,0.7477777600288391,0.7477777004241943
908,908,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,variable that points to the memory address of another variable and it is type specific.,5.0,5.0,5.0,0.8723164200782776,0.8723164200782776,0.8315397500991821,0.8315396904945374
909,909,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,An element that references a memory cell,5.0,5.0,5.0,0.6644089818000793,0.6644089818000793,0.7589512467384338,0.7589512467384338
910,910,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,Is a reference call to the place in memory where the object is stored.,4.0,4.0,4.0,0.7595883011817932,0.759588360786438,0.7154362201690674,0.7154362201690674
911,911,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,a variable that contains the address of another variable,5.0,5.0,5.0,0.7548174858093262,0.7548174262046814,0.8345950841903687,0.8345950245857239
912,912,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,"A pointer variable contains the number of a memory address as its value, which may be null or 0, or the address of some value stored in memory.",5.0,5.0,5.0,0.8439512848854065,0.8439512252807617,0.8075576424598694,0.8075576424598694
913,913,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,A pointer is a variable that contains a memory address of anther variable,5.0,5.0,5.0,0.836104154586792,0.8361042737960815,0.8706451654434204,0.87064528465271
914,914,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,A variable that contains the memory address of another variable that contains a specific value.,5.0,5.0,5.0,0.8465693593025208,0.8465694189071655,0.9381963610649109,0.9381964206695557
915,915,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,a variable with a memory address as the value,5.0,4.0,4.5,0.6512894034385681,0.6512893438339233,0.6614109873771667,0.6614110469818115
916,916,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,it is a type that points to something else. It is the memory address of something else,5.0,4.0,4.5,0.7825896143913269,0.7825896143913269,0.7496050596237183,0.7496050596237183
917,917,6.1,What is a pointer?,A variable that contains the address in memory of another variable.,A pointer is a way to get at another object. Essentially it is a way to grab an instance of an object and then either pass that instance a message or retreive some data from that object. A pointer is actually just an address of where an instance is held in memory.,4.0,5.0,4.5,0.7047758698463441,0.7047758698463441,0.7024547457695007,0.7024548053741455
918,918,6.2,What does the address (&) operator return?,The memory address of its operand.,This operator returns the memory address of its operand.,5.0,5.0,5.0,0.8385544419288635,0.8385545015335083,0.8364357352256775,0.8364357948303223
919,919,6.2,What does the address (&) operator return?,The memory address of its operand.,The address operator returns the memory address of its operand.,5.0,5.0,5.0,0.8485181331634521,0.8485181331634521,0.8956417441368103,0.8956418037414551
920,920,6.2,What does the address (&) operator return?,The memory address of its operand.,Returns memory address of its operand.,5.0,5.0,5.0,0.8309403061866759,0.8309402465820312,0.7959976196289062,0.7959975600242615
921,921,6.2,What does the address (&) operator return?,The memory address of its operand.,The address (&) operator returns the memory address of its operand.,5.0,5.0,5.0,0.8485181331634521,0.8485181331634521,0.8956417441368103,0.8956418037414551
922,922,6.2,What does the address (&) operator return?,The memory address of its operand.,Returns the memory address of its operand.,5.0,5.0,5.0,0.8309403061866759,0.8309402465820312,0.7959976196289062,0.7959975600242615
923,923,6.2,What does the address (&) operator return?,The memory address of its operand.,returns the place in memory of that element,5.0,3.0,4.0,0.5475189685821533,0.5475189685821533,0.5713573694229126,0.5713573098182678
924,924,6.2,What does the address (&) operator return?,The memory address of its operand.,The address of the where the data is stored: &b will return the address of b.,4.0,5.0,4.5,0.6128360629081726,0.6128360033035278,0.6752261519432068,0.6752261519432068
925,925,6.2,What does the address (&) operator return?,The memory address of its operand.,The & operator returns the address of a variable,5.0,5.0,5.0,0.6380292773246765,0.6380292177200317,0.5944650173187256,0.5944650769233704
926,926,6.2,What does the address (&) operator return?,The memory address of its operand.,"the ampersand (&) means ""pass by reference"". When the function is called, a pointer to the variable, instead of the variable itself, will be passed into the function.",3.0,3.0,3.0,0.6229599118232727,0.6229599118232727,0.6013777256011963,0.6013776659965515
927,927,6.2,What does the address (&) operator return?,The memory address of its operand.,& returns the memory address of its operand.,5.0,5.0,5.0,0.8316844701766968,0.8316845297813416,0.8307678699493408,0.8307678699493408
928,928,6.2,What does the address (&) operator return?,The memory address of its operand.,the address of the variable in memory,5.0,5.0,5.0,0.3330737054347992,0.333073765039444,0.5337238311767578,0.5337238311767578
929,929,6.2,What does the address (&) operator return?,The memory address of its operand.,Returns the address location in memory of the item.,5.0,4.0,4.5,0.7361581921577454,0.7361582517623901,0.6541755795478821,0.6541755795478821
930,930,6.2,What does the address (&) operator return?,The memory address of its operand.,The address operator returns the memory address of its operand.,5.0,5.0,5.0,0.8485181331634521,0.8485181331634521,0.8956417441368103,0.8956418037414551
931,931,6.2,What does the address (&) operator return?,The memory address of its operand.,The & operator returns the memory address of the variable it precedes.,5.0,5.0,5.0,0.7860282063484192,0.7860282063484192,0.6515344381332397,0.6515344381332397
932,932,6.2,What does the address (&) operator return?,The memory address of its operand.,"The memory address of operand, 0x000000 or something along those lines. ",4.0,5.0,4.5,0.7542793154716492,0.7542793750762941,0.7737929224967957,0.7737928628921509
933,933,6.2,What does the address (&) operator return?,The memory address of its operand.,The object's memory address.,4.0,5.0,4.5,0.7574707865715027,0.7574707865715027,0.764398455619812,0.7643985152244568
934,934,6.2,What does the address (&) operator return?,The memory address of its operand.,the reference to a variable,5.0,4.0,4.5,0.4056866466999054,0.40568670630455017,0.4132017195224762,0.41320177912712097
935,935,6.2,What does the address (&) operator return?,The memory address of its operand.,returns the memory address of its operand,5.0,5.0,5.0,0.5665733218193054,0.5665733814239502,0.7204399704933167,0.7204400300979614
936,936,6.2,What does the address (&) operator return?,The memory address of its operand.,memory address of its operand,5.0,5.0,5.0,0.4632278680801392,0.4632278978824616,0.7759761214256287,0.7759761214256287
937,937,6.2,What does the address (&) operator return?,The memory address of its operand.,returns the address number of the specified variable,5.0,4.0,4.5,0.4969380795955658,0.4969380497932434,0.4277993440628052,0.4277993142604828
938,938,6.2,What does the address (&) operator return?,The memory address of its operand.,"It returns the memory address of it's operand. That is, if applied to a normal variable, it gives the variable's memory address, just as a pointer variable might.",4.0,5.0,4.5,0.6612224578857422,0.6612224578857422,0.651644229888916,0.6516441702842712
939,939,6.2,What does the address (&) operator return?,The memory address of its operand.,The & is a unary operator that returns the memory address of its operand,5.0,5.0,5.0,0.7615181803703308,0.7615181803703308,0.7087332606315613,0.7087331414222717
940,940,6.2,What does the address (&) operator return?,The memory address of its operand.,the address of the variable it is attached to,5.0,3.0,4.0,0.3580298125743866,0.3580297827720642,0.48261716961860657,0.4826171398162842
941,941,6.2,What does the address (&) operator return?,The memory address of its operand.,the memory address of its operand,5.0,5.0,5.0,0.4632278680801392,0.4632278978824616,0.7759761214256287,0.7759761214256287
942,942,6.2,What does the address (&) operator return?,The memory address of its operand.,returns the address of what it is put in front of,5.0,4.0,4.5,0.37646251916885376,0.37646251916885376,0.38594964146614075,0.38594964146614075
943,943,6.2,What does the address (&) operator return?,The memory address of its operand.,returns a pointer,4.0,3.0,3.5,0.4913374185562134,0.4913374483585358,0.5136228799819946,0.5136228799819946
944,944,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,returns a synonym for the object to which its pointer operand points.,5.0,5.0,5.0,0.8308283686637878,0.8308283686637878,0.7662513256072998,0.7662514448165894
945,945,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,The star operator returns a synonym for the object to which its pointer operand points.,5.0,5.0,5.0,0.8468031287193298,0.8468031287193298,0.8115994334220886,0.8115995526313782
946,946,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,Returns synonym for the object its operand points to.,5.0,5.0,5.0,0.8032779097557068,0.8032779693603516,0.7786885499954224,0.7786886096000671
947,947,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,"It returns a synonym, alias or nickname of the name of the object that its operand points to in memory (dereferencing the pointer).",5.0,5.0,5.0,0.8920806646347046,0.8920807242393494,0.911641001701355,0.9116409420967102
948,948,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,Returns an alias/nickname for the object to which the pointer operand points.,5.0,5.0,5.0,0.7933509945869446,0.7933509945869446,0.7974265813827515,0.7974266409873962
949,949,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,the * operator returns the value in the memory address the element points to.,4.0,4.0,4.0,0.8039911985397339,0.8039911389350891,0.669617772102356,0.6696178913116455
950,950,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,The * returns the value,4.0,4.0,4.0,0.47807961702346796,0.47807961702346796,0.5330120921134949,0.5330121517181396
951,951,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,The * operator returns the dereferenced pointer variable (ie: it returns the value of whatever variable the pointer is pointing to),5.0,5.0,5.0,0.7592101693153381,0.7592102289199829,0.6992897987365723,0.6992897987365723
952,952,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,The dereferencing operator returns the dereferenced object.,4.0,5.0,4.5,0.7021260857582092,0.7021260857582092,0.7222718000411987,0.7222718000411987
953,953,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,* returns the synonym for the object its operand points to.,5.0,5.0,5.0,0.8005006313323975,0.8005005121231079,0.7608317136764526,0.7608317732810974
954,954,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,it returns the information in the address the pointer points to.,4.0,4.0,4.0,0.7900379300117493,0.7900378704071045,0.6570009589195251,0.6570009589195251
955,955,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,the star operator returns the value at the memory address the pointer is pointing at.,5.0,4.0,4.5,0.8137364387512207,0.8137364387512207,0.6875932812690735,0.687593400478363
956,956,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,The star operator returns the object at that memory location.,4.0,4.0,4.0,0.7358704209327698,0.7358704209327698,0.7143723368644714,0.714372456073761
957,957,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,The * operator returns the value of the object's memory address it precedes.,4.0,3.0,3.5,0.7776504755020142,0.7776504755020142,0.6940072178840637,0.6940072774887085
958,958,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,The value of the object that the operand points to,4.0,5.0,4.5,0.6542385816574097,0.6542386412620544,0.6893072724342346,0.6893072724342346
959,959,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,The value stored in the object being pointed to.,4.0,4.0,4.0,0.7883191704750061,0.7883191704750061,0.7195746302604675,0.7195747494697571
960,960,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,the value of the variable the pointer points to.,4.0,4.0,4.0,0.7667158246040344,0.7667158246040344,0.6236518621444702,0.623651921749115
961,961,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,returns synonym for the object its operand points to,5.0,5.0,5.0,0.5837900042533875,0.5837900042533875,0.6898835301399231,0.6898835897445679
962,962,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,synonym for the object its operand points to,5.0,5.0,5.0,0.6182313561439514,0.6182314157485962,0.6880497932434082,0.688049852848053
963,963,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,Returns synonym for the object its operand points to,5.0,5.0,5.0,0.6836522221565247,0.6836522221565247,0.711744487285614,0.711744487285614
964,964,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,"It dereferences a pointer, meaning it returns the value stored in the memory address a pointer refers to.",4.0,5.0,4.5,0.822952926158905,0.822952926158905,0.7847386002540588,0.7847387194633484
965,965,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,It is unary operator that returns the value of the variable located at the address,4.0,4.0,4.0,0.6615734696388245,0.6615734100341797,0.6296201944351196,0.6296201944351196
966,966,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,a reference to a = variable,1.0,3.0,2.0,0.4577809274196625,0.4577809274196625,0.5328335762023926,0.5328336358070374
967,967,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,a synonym for the object to which its pointer operand points,5.0,5.0,5.0,0.6215040683746338,0.6215040683746338,0.7141816020011902,0.714181661605835
968,968,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,it returns the actual data at the address pointed to,4.0,3.0,3.5,0.6154868006706238,0.6154868602752686,0.5068861246109009,0.5068861246109009
969,969,6.3,What does the star (*) operator return?,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,will return zero or many characters placed before the operator,1.0,3.0,2.0,0.4549334943294525,0.4549334645271301,0.47502362728118896,0.47502368688583374
970,970,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",The array itself can be signed to a pointer or each element of the array can be assigned to a pointer.,2.0,4.0,3.0,0.7964522838592529,0.7964522242546082,0.814172089099884,0.8141722083091736
971,971,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",An array can be addressed in pointer/offset notation by setting a pointer variable equal to the variable name of the array. Elements of the array can then be accessed by adding an offset value to the pointer variable.,5.0,4.0,4.5,0.8259540796279907,0.825954020023346,0.8320054411888123,0.8320053815841675
972,972,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",Element b[ n ] can be accessed by  *( bPtr + n ).,5.0,3.0,4.0,0.6827015876770021,0.6827015280723572,0.6300404667854309,0.6300404667854309
973,973,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",Using either the name of the array as a pointer or using a separate pointer that points to the array.,3.0,3.0,3.0,0.7773247361183167,0.7773246765136719,0.8087401986122131,0.8087403178215027
974,974,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",An element b[3] can be referenced by using *( bPtr + 3) instead.,5.0,3.0,4.0,0.7101016044616699,0.7101015448570251,0.7102483510971069,0.7102483510971069
975,975,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",you get the memory location of the first element and the you add an offset to it to get other elements.,5.0,5.0,5.0,0.7642822265625,0.7642822861671448,0.7178145051002502,0.7178145051002502
976,976,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",yes *(array +offset),5.0,3.0,4.0,0.4748896658420563,0.4748896956443786,0.5827735066413879,0.5827734470367432
977,977,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.","The name of an array is considered to be a pointer in C++, and can be passed as such in functions parameters. Declaring int a[10]; creates a pointer ""a"" which stores the address of a[0].",3.0,4.0,3.5,0.7555683255195618,0.7555683255195618,0.7125048637390137,0.7125048041343689
978,978,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",Element b[ n ] can be accessed by  *( bPtr + n ) is an example of how an array can be addressed as pointer/offset notation.,5.0,4.0,4.5,0.6839656829833984,0.6839656233787537,0.6493093371391296,0.6493093371391296
979,979,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",*(array + element),5.0,3.0,4.0,0.4340811967849731,0.4340811967849731,0.5990540385246277,0.5990540385246277
980,980,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",*f[3],2.0,3.0,2.5,0.4029237627983093,0.4029237926006317,0.46212685108184814,0.46212685108184814
981,981,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",you can have a pointer to the front of the array and add to the memory location (or offset from the initial value).,5.0,5.0,5.0,0.817482590675354,0.8174824714660645,0.7907117605209351,0.7907118201255798
982,982,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.","The pointer to the array will initially point to the first element of that array.  When the pointer is incremented, it will point to the next element, and so on.",2.0,5.0,3.5,0.8952229022979736,0.8952229022979736,0.8583131432533264,0.8583131432533264
983,983,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",With int x[10]; int *xPtr; xPtr = x; Address &x[1] is the same as xPtr + 1.,5.0,3.0,4.0,0.6437219381332397,0.6437219977378845,0.6430526971817017,0.6430526971817017
984,984,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",Takes the number of array elements and points to each at a time,1.0,3.0,2.0,0.580571711063385,0.580571711063385,0.6260817646980286,0.6260817050933838
985,985,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",The array can act as a pointer or be referenced by a pointer.  *(arrayPtr + 3) or *(array + 3),5.0,3.0,4.0,0.7543497085571289,0.7543496489524841,0.7475184798240662,0.7475185394287109
986,986,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",by using the *(pointer + element-index),5.0,3.0,4.0,0.7129311561584473,0.7129311561584473,0.759151041507721,0.7591511011123657
987,987,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",using the star operator.   array: b[n] can be accessed by *(bpointer +n),5.0,4.0,4.5,0.6963083148002625,0.6963082551956177,0.6253848671913147,0.6253848671913147
988,988,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",Element A[n] can be accessed by *(APtr + n),5.0,3.0,4.0,0.6326662302017212,0.6326661705970764,0.6157776117324829,0.6157776117324829
989,989,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.","by referencing a pointer and referring to other pointers relative to the first pointer(pointer+1, pointer +2, etc)",2.0,4.0,3.0,0.8240114450454712,0.8240113854408264,0.8203794956207275,0.8203795552253723
990,990,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.","First, some pointer variable must reference the first entity in the array. Any variable in the array can then be accessed by referring to that first entity's address plus some offset. i.e. ptrToArray = array;  nthEntity = *(ptrToArray + n);",5.0,5.0,5.0,0.7876746654510498,0.7876745462417603,0.722084641456604,0.7220845818519592
991,991,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",&[b3] is as bptr + 3. Array can be treated as pointer,4.0,3.0,3.5,0.6832056045532227,0.6832056045532227,0.5695462822914124,0.5695462226867676
992,992,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",a[i] = *(a+i),5.0,3.0,4.0,0.4431076049804688,0.443107545375824,0.5463064312934875,0.546306312084198
993,993,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",&b[3]  bPtr + 3,5.0,3.0,4.0,0.5002908110618591,0.5002906918525696,0.5110001564025879,0.5110001564025879
994,994,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",*(arrayName + index),5.0,3.0,4.0,0.5775934457778931,0.5775933861732483,0.6581658124923706,0.6581659317016602
995,995,6.4,How can an array be addressed in pointer/offset notation?,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",multi-dimensional array,0.0,2.0,1.0,0.2366824150085449,0.2366824001073837,0.42769286036491394,0.42769283056259155
996,996,6.5,What does the sizeof operator return?,The size in bytes of its operand.,the number of bytes of an array during program compilation.,4.0,5.0,4.5,0.7071704864501953,0.7071706056594849,0.6905338168144226,0.6905338168144226
997,997,6.5,What does the sizeof operator return?,The size in bytes of its operand.,The sizeof operator returns the size of the operand.,5.0,3.0,4.0,0.8462956547737122,0.8462955951690674,0.8621115684509277,0.8621116876602173
998,998,6.5,What does the sizeof operator return?,The size in bytes of its operand.,Returns size of operand in bytes.,5.0,5.0,5.0,0.8544228076934814,0.8544228672981262,0.8574268221855164,0.8574268817901611
999,999,6.5,What does the sizeof operator return?,The size in bytes of its operand.,It returns the size of an array in bytes.,4.0,5.0,4.5,0.8133113384246826,0.8133112788200378,0.7983964681625366,0.7983965277671814
1000,1000,6.5,What does the sizeof operator return?,The size in bytes of its operand.,Returns the size of the array in bytes during the program compilation.,4.0,5.0,4.5,0.7735450863838196,0.77354496717453,0.7300010919570923,0.7300012111663818
1001,1001,6.5,What does the sizeof operator return?,The size in bytes of its operand.,it returns the size of the argument passed in,5.0,3.0,4.0,0.4460073411464691,0.4460073113441467,0.5252089500427246,0.5252090096473694
1002,1002,6.5,What does the sizeof operator return?,The size in bytes of its operand.,The byte size of the date stored ina variable.,4.0,5.0,4.5,0.7997676134109497,0.7997676134109497,0.7772576808929443,0.7772577404975891
1003,1003,6.5,What does the sizeof operator return?,The size in bytes of its operand.,sizeof returns the size of the operand in bytes,5.0,5.0,5.0,0.6811079978942871,0.6811080574989319,0.7955952882766724,0.7955952286720276
1004,1004,6.5,What does the sizeof operator return?,The size in bytes of its operand.,"The amount of memory required for a specific parameter such as ints, doubles.",4.0,3.0,3.5,0.7400553226470947,0.74005526304245,0.7512055039405823,0.7512054443359375
1005,1005,6.5,What does the sizeof operator return?,The size in bytes of its operand.,sizeof returns the size of the operand in bytes.,5.0,5.0,5.0,0.8256859779357909,0.8256859183311462,0.8744379878044128,0.8744379281997681
1006,1006,6.5,What does the sizeof operator return?,The size in bytes of its operand.,the size of the information in bits.,1.0,4.0,2.5,0.6969987750053406,0.6969987750053406,0.7175442576408386,0.7175442576408386
1007,1007,6.5,What does the sizeof operator return?,The size in bytes of its operand.,the size of the string.,3.0,3.0,3.0,0.6521118879318237,0.6521118879318237,0.7220975160598755,0.7220975756645203
1008,1008,6.5,What does the sizeof operator return?,The size in bytes of its operand.,sizeof returns the size in bytes of the respective object.,4.0,5.0,4.5,0.7775350213050842,0.7775349020957947,0.7678042650222778,0.7678042650222778
1009,1009,6.5,What does the sizeof operator return?,The size in bytes of its operand.,The sizeof operator returns the total number of bytes of its operand.,5.0,5.0,5.0,0.8347526788711548,0.8347527384757996,0.8690515756607056,0.8690515756607056
1010,1010,6.5,What does the sizeof operator return?,The size in bytes of its operand.,"The size of an operand in bytes. Used with variable names, type names, and constant values",5.0,5.0,5.0,0.7756953239440918,0.775695264339447,0.8000541925430298,0.8000541925430298
1011,1011,6.5,What does the sizeof operator return?,The size in bytes of its operand.,the size in bytes needed to store the object in memory,4.0,5.0,4.5,0.626300573348999,0.626300573348999,0.7001698613166809,0.7001698017120361
1012,1012,6.5,What does the sizeof operator return?,The size in bytes of its operand.,the size of the list object.,4.0,2.0,3.0,0.6944844126701355,0.6944844126701355,0.6966255903244019,0.6966255903244019
1013,1013,6.5,What does the sizeof operator return?,The size in bytes of its operand.,the sizeof operator returns the size in bytes of an array parameter,3.0,5.0,4.0,0.6085045337677002,0.6085045337677002,0.6688414216041565,0.6688413023948669
1014,1014,6.5,What does the sizeof operator return?,The size in bytes of its operand.,the size of operand in bytes,5.0,5.0,5.0,0.6001185178756714,0.6001184582710266,0.8110249638557434,0.8110249638557434
1015,1015,6.5,What does the sizeof operator return?,The size in bytes of its operand.,returns the size in bytes of the specified data,4.0,5.0,4.5,0.6486402153968811,0.6486402750015259,0.6886820793151855,0.6886820793151855
1016,1016,6.5,What does the sizeof operator return?,The size in bytes of its operand.,"It returns the size of an operand in memory, which is checked at compiler-time.",5.0,3.0,4.0,0.705061137676239,0.7050611972808838,0.7459092736244202,0.7459092140197754
1017,1017,6.5,What does the sizeof operator return?,The size in bytes of its operand.,Return size of operand in bytes,5.0,5.0,5.0,0.6981549263000488,0.6981549263000488,0.7900815606117249,0.7900815010070801
1018,1018,6.5,What does the sizeof operator return?,The size in bytes of its operand.,the total number of bytes of an object.,4.0,5.0,4.5,0.807384192943573,0.8073840737342834,0.7042404413223267,0.7042403817176819
1019,1019,6.5,What does the sizeof operator return?,The size in bytes of its operand.,total number of bytes in the array,4.0,5.0,4.5,0.607494056224823,0.6074941158294678,0.6147114634513855,0.6147114634513855
1020,1020,6.5,What does the sizeof operator return?,The size in bytes of its operand.,it returns the size in bytes of a certain variable type,4.0,5.0,4.5,0.6339801549911499,0.6339801549911499,0.6776436567306519,0.6776437163352966
1021,1021,6.5,What does the sizeof operator return?,The size in bytes of its operand.,"it yields the size in bytes of the operand, which can be an expression or the parenthesized name of a type",3.0,5.0,4.0,0.7424166798591614,0.7424166202545166,0.7791262269020081,0.7791262269020081
1022,1022,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",They can be passed by value or by reference,2.0,3.0,2.5,0.3155457079410553,0.3155457675457001,0.3042641282081604,0.3042641282081604
1023,1023,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","Nonconstant pointer to nonconstant data, nonconstant pointer to constant data, constant pointer to nonconstant data, constant pointer to constant data.",5.0,5.0,5.0,0.8606801629066467,0.8606802225112915,0.9717046618461609,0.9717046022415161
1024,1024,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",#NAME?,5.0,5.0,5.0,0.31819096207618713,0.31819096207618713,0.39182376861572266,0.39182373881340027
1025,1025,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","Four different ways: Nonconstant pointer to nonconstant data, a nonconstant pointer to constant data, a constant pointer to nonconstant data and a constant pointer to constant data.",5.0,5.0,5.0,0.9369646906852722,0.9369648694992064,0.9770929217338562,0.9770929217338562
1026,1026,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",Pass-by-value or pass-by-reference.,2.0,3.0,2.5,0.4280830919742584,0.4280831217765808,0.5565117597579956,0.5565117597579956
1027,1027,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",you can pass a pointer to a pointer or pass a reference to pointer.,2.0,3.0,2.5,0.3388673663139343,0.3388673961162567,0.41341647505760193,0.41341647505760193
1028,1028,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",by address &bPtr or directly bPtr.,2.0,3.0,2.5,0.4141237735748291,0.4141237735748291,0.5913138389587402,0.591313898563385
1029,1029,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","Nonconstant pointer to nonconstant data, constant pointer to nonconstant data, nonconstant pointer to constant data, constant pointer to constant data. ",5.0,5.0,5.0,0.8612426519393921,0.8612426519393921,0.9720302224159241,0.9720301628112793
1030,1030,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",By argument and reference.,1.0,3.0,2.0,0.3707273900508881,0.3707273900508881,0.43812474608421326,0.43812474608421326
1031,1031,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","Nonconstant pointer to nonconstant data, nonconstant pointer to constant data, constant pointer to nonconstant data, and constant pointer to constant data.",5.0,5.0,5.0,0.8606801629066467,0.8606802225112915,0.9717046618461609,0.9717046022415161
1032,1032,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",pass by value and pass by reference with reference or pointer arguments.,2.0,3.0,2.5,0.41686564683914185,0.41686564683914185,0.5090113282203674,0.5090112686157227
1033,1033,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",you can pass them with the pointer (*) or the memory address (&),2.0,3.0,2.5,0.43632635474205017,0.43632641434669495,0.5608395934104919,0.5608395934104919
1034,1034,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",nonconst -&gt; nonconst const -&gt; nonconst nonconst -&gt; const const -&gt; const,5.0,5.0,5.0,0.6403098702430725,0.6403098702430725,0.7604630589485168,0.7604631185531616
1035,1035,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",Nonconstant pointer to nonconstant data Constant pointer to nonconstant data Nonconstant pointer to constant data Constant point to constant data,5.0,5.0,5.0,0.7655577063560486,0.7655578255653381,0.8410649299621582,0.8410649299621582
1036,1036,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","Non-constant pointer to non-constant data, non-constant pointer to constant data, constant pointer to constant data, constant pointer to non-constant data.",5.0,5.0,5.0,0.8481501340866089,0.8481502532958984,0.9635432362556458,0.9635432958602905
1037,1037,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",Pass by reference with reference arguments. function(int &)  Pass by reference with pointer arguments. function(int *),2.0,3.0,2.5,0.5296926498413086,0.5296925902366638,0.7142249941825867,0.7142249345779419
1038,1038,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",you can pass the reference or the dereference in a function,2.0,2.0,2.0,0.2266584485769272,0.2266584783792496,0.4199111759662628,0.4199112057685852
1039,1039,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",1. nonconstant pointer to nonconstant data. Its delcaration does no include  const qualifier. 2. nonconstant pointer to constant data. Provides the performance of pass-by-reference and the protection of pass-by-value 3. Constant pointer to nonconstant data.  4. Constant pointer to constant date.,5.0,5.0,5.0,0.7655611038208008,0.7655612826347351,0.8326044678688049,0.8326044082641602
1040,1040,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","constant pointer to constant data, constant pointer to nonconstant data, nonconstant pointer to constant data, nonconstant pointer to nonconstant data",5.0,5.0,5.0,0.8718777894973755,0.8718776702880859,0.9513697624206543,0.95136958360672
1041,1041,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",Nonconstant pointer to nonconstant data Nonconstant pointer to constant data Constant pointer to nonconstant data Constant pointer to constant data,5.0,5.0,5.0,0.7860602736473083,0.7860603332519531,0.838560938835144,0.8385608196258545
1042,1042,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","Pointers may be passed to functions by value, by reference with reference arguments, or by reference with pointer arguments.",2.0,3.0,2.5,0.5661835074424744,0.5661835670471191,0.6675633788108826,0.6675633192062378
1043,1043,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",There are four way to pass pointer to a function 1. non constant pointer to non constant data 2.non constant pointer to  constant data. 3. constant pointer to non constant data. 4. constant pointer to  constant data.,5.0,5.0,5.0,0.8617619276046753,0.8617620468139648,0.8988227248191833,0.8988226652145386
1044,1044,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",nonconstant pointer to nonconstant data nonconstant pointer to constant data constant pointer to nonconstant data constant pointer to constant data,5.0,5.0,5.0,0.7418326139450073,0.7418326735496521,0.8447044491767883,0.8447043895721436
1045,1045,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","pass by value, pass by reference with reference arguments, pass by reference with pointer arguments",2.0,3.0,2.5,0.4911546111106873,0.4911546409130096,0.6773069500923157,0.6773069500923157
1046,1046,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","you can pass it where either the pointer cant be moved, the data pointed to cant be changed, or both or neither",5.0,3.0,4.0,0.4888589084148407,0.4888589084148407,0.6323328614234924,0.632332980632782
1047,1047,6.6,What are the different ways to pass a pointer to a function?,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","there are only two ways to pass something, by value and by reference. Use of dot or pointer operators within the receiving function and use of '&' operator inside the passing function",2.0,3.0,2.5,0.5416975021362305,0.5416975617408752,0.5745552778244019,0.5745552778244019
1048,1048,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,A pointer that points to the memory address of the beginning part of a functions.  pretty much the pointer points to the function so it can be called to execute.,5.0,5.0,5.0,0.7527648210525513,0.7527647018432617,0.7132574915885925,0.713257372379303
1049,1049,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,A function pointer is a pointer that contains the address of the  function in memory.,5.0,5.0,5.0,0.7645945549011229,0.7645944952964783,0.7897363305091858,0.7897362112998962
1050,1050,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,"Function Pointers are pointers, i.e. variables, which point to the address of a function.",5.0,5.0,5.0,0.7158412337303162,0.7158412933349609,0.6434181928634644,0.6434181332588196
1051,1051,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,"A pointer to a function is the address where the code for the function resides. They can be passed to functions, returned from functions, stored in arrays and assigned to other pointers.",5.0,5.0,5.0,0.7557798624038696,0.7557798027992249,0.7056410312652588,0.7056410312652588
1052,1052,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,It contains the address of the function in memory.,5.0,5.0,5.0,0.7772701978683472,0.7772701978683472,0.7824172377586365,0.7824170589447021
1053,1053,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,when it is dereferenced a function pointer calls its function with zero or more arguments.,4.0,3.0,3.5,0.6624149680137634,0.6624149680137634,0.6010457277297974,0.6010456681251526
1054,1054,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,a pointer to a function,5.0,2.0,3.5,0.10280630737543106,0.10280630737543106,0.3334471583366394,0.333447128534317
1055,1055,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,"A pointer to a function itself, contains the address of the function and can be used to call that function",5.0,5.0,5.0,0.6815166473388672,0.6815165877342224,0.654879093170166,0.654879093170166
1056,1056,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,"Function Pointers are pointers, i.e. variables, which point to the address of a function.",5.0,5.0,5.0,0.7158412337303162,0.7158412933349609,0.6434181928634644,0.6434181332588196
1057,1057,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,A pointer to a function that contains the addresses of the function.,5.0,5.0,5.0,0.6699947118759155,0.6699946522712708,0.6937611699104309,0.6937611103057861
1058,1058,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,a pointer that contains the address of a function,5.0,5.0,5.0,0.40447866916656494,0.40447863936424255,0.5825653076171875,0.5825652480125427
1059,1059,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,a function pointer is a pointer to a function. It can be used in substitution for calling a function.,5.0,5.0,5.0,0.6474283933639526,0.6474284529685974,0.5820497870445251,0.5820497870445251
1060,1060,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,Points to the memory address of a function.  Kind of like breaking a branch off of a tree object and hitting other objects with it.,5.0,5.0,5.0,0.6877585649490356,0.6877585053443909,0.6649851202964783,0.6649850010871887
1061,1061,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,"They are pointers that contain the addresses to functions, they can be passed and returned from functions, as well as stored in arrays and assigned to other function pointers.",5.0,5.0,5.0,0.7099637389183044,0.7099636197090149,0.6563470363616943,0.6563469171524048
1062,1062,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,Pointer variables that point to function addresses.,5.0,5.0,5.0,0.7395030856132507,0.7395030856132507,0.7189948558807373,0.7189947962760925
1063,1063,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,Contains the address of the function in memory.,5.0,5.0,5.0,0.7774955034255981,0.7774956226348877,0.790286123752594,0.7902860045433044
1064,1064,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,"a pointer that points to a function itself, which allows passing a function as a parameter to another function.",5.0,3.0,4.0,0.6530314087867737,0.6530314087867737,0.6346089243888855,0.6346089243888855
1065,1065,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,pointers that contain the addresses of functions.,5.0,5.0,5.0,0.750885546207428,0.7508854866027832,0.724479615688324,0.7244795560836792
1066,1066,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,is a pointer that contains the address of a function,5.0,5.0,5.0,0.40447866916656494,0.40447863936424255,0.5825653076171875,0.5825652480125427
1067,1067,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,a pointer that contains the address of the function definition,4.0,5.0,4.5,0.5085533857345581,0.5085533261299133,0.6037051677703857,0.603705108165741
1068,1068,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,"A function pointer contains the memory address of a function. Using a function pointer, a function can be passed to or returned by another function. Function pointers can also be stored in arrays.",5.0,5.0,5.0,0.7091410160064697,0.7091411352157593,0.673488974571228,0.6734888553619385
1069,1069,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,Function pointer is a pointer to a function. function pointer contains address of functions,5.0,5.0,5.0,0.6540868878364563,0.6540868878364563,0.6779993176460266,0.6779993176460266
1070,1070,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,a pointer that contains the address of a function in memory.,5.0,5.0,5.0,0.7641394734382629,0.7641394138336182,0.7925564050674438,0.7925563454627991
1071,1071,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,it contains the address of the function in memory,5.0,5.0,5.0,0.5582491159439087,0.5582491159439087,0.6792409420013428,0.6792409420013428
1072,1072,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,it is a pointer that points to the address of a function.,5.0,5.0,5.0,0.6869322061538696,0.6869321465492249,0.6643147468566895,0.6643146872520447
1073,1073,6.7,What is a function pointer?,The address of the location in memory where the function code resides.,"When dereferenced, a function pointer invokes a function, passing it zero or more arguments just like a normal function. In programming languages like C, function pointers can be used to simplify code, such as replacing large switch statements.",4.0,4.0,4.0,0.6338220238685608,0.6338220238685608,0.5968045592308044,0.5968044996261597
1074,1074,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,"Consists of sequence of nodes, each containing a number of data fields and one or two links called pointers that point to the next or previous nodes. ",4.0,5.0,4.5,0.6922451257705688,0.6922451853752136,0.6394429206848145,0.6394429206848145
1075,1075,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,A linked list is a list in which each item in the list points to the next item in the list.,4.0,5.0,4.5,0.6313084959983826,0.6313085556030273,0.6292243599891663,0.6292243003845215
1076,1076,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,"A linked list is a chain of structs or records called nodes and you have the ability to add, delete, or retrieve items. ",4.0,5.0,4.5,0.7095697522163391,0.7095698714256287,0.7124501466751099,0.7124502062797546
1077,1077,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,"A list of elements, or nodes, that are linked to one another such that each element points to the next element.",4.0,5.0,4.5,0.6833034753799438,0.6833034753799438,0.6775720119476318,0.6775720119476318
1078,1078,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,"A sequence of nodes, each containing data fields (specified by programmer) and pointer(s) which can point to the next or previous nodes.",4.0,5.0,4.5,0.6930328607559204,0.69303297996521,0.7023449540138245,0.7023449540138245
1079,1079,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,a list of nodes where each node contains a data member and also a pointer to the next node.,4.0,5.0,4.5,0.6442725658416748,0.6442726850509644,0.5879557132720947,0.58795565366745
1080,1080,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,A list of items linked together.  Each item is linked to its successor.,4.0,5.0,4.5,0.6712045073509216,0.6712045073509216,0.7497330904006958,0.749733030796051
1081,1081,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,A linked list is a chain of nodes that each store a single piece of data and pointer variables that point to other nodes in the list.,4.0,5.0,4.5,0.6630001068115234,0.6630001664161682,0.6826357841491699,0.6826357245445251
1082,1082,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,"one of the fundamental data structures, and can be used to implement other data structures. It consists of a sequence of nodes, each containing arbitrary data fields and one or two references (""links"") pointing to the next and/or previous nodes. ",4.0,5.0,4.5,0.6687519550323486,0.6687520146369934,0.6708306670188904,0.6708307266235352
1083,1083,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,"A data structure in a sequence of nodes, each containing arbitrary data fields and one or two references (""links"") pointing to the next and/or previous nodes.",4.0,5.0,4.5,0.6907158493995667,0.6907159090042114,0.67954421043396,0.6795440912246704
1084,1084,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,Information in memory linked to the next piece of information and can only be linked forwards and not backwards.,2.0,5.0,3.5,0.5534868240356445,0.5534868836402893,0.6702159643173218,0.6702159643173218
1085,1085,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,"A linked list is a data structure that is not necessarily in the same contiguous memory space (such as arrays). It holds the data type and points to the next data item in the list, or in a doubly linked list also to the previous item.",5.0,5.0,5.0,0.7140786051750183,0.7140786647796631,0.7180714011192322,0.7180714011192322
1086,1086,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,A linked list is a data structure containing one or more data elements with a pointer to the next node.,4.0,5.0,4.5,0.7541695833206177,0.7541696429252625,0.7626637816429138,0.7626637816429138
1087,1087,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,"A series of ""Nodes"" structures with a value and a pointer that point to a similar ""Node"". Not quite an array, but still can carry a list of values. ",4.0,5.0,4.5,0.6971703767776489,0.6971704363822937,0.6292891502380371,0.6292891502380371
1088,1088,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,A data type that contains a pointer to at least the next  element in a list.,4.0,5.0,4.5,0.7075269222259521,0.7075269222259521,0.7267623543739319,0.7267623543739319
1089,1089,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,Each component contains a Node - a data item and a pointer to the next item in the list,4.0,5.0,4.5,0.6092669367790222,0.6092669367790222,0.616082489490509,0.616082489490509
1090,1090,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,"A linked list is a chain of structs or records called nodes.  Each node has at least two members, one of which points to the next item or node in the list.",4.0,5.0,4.5,0.6503790616989136,0.6503790616989136,0.6525101661682129,0.6525102257728577
1091,1091,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,"An array based list that uses an implicit ordering scheme, often using pointers.",1.0,4.0,2.5,0.7484210729598999,0.7484211325645447,0.7714646458625793,0.7714647650718689
1092,1092,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,a series of structures containing data items and a pointer that links the structure to the next structure.,4.0,5.0,4.5,0.6621295213699341,0.6621295213699341,0.6971575021743774,0.6971575021743774
1093,1093,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,"A linked list is a collection of Objects each containing at least one data member, and a pointer to the next object in the list (and the previous object in the case of a doubly linked list)",4.0,5.0,4.5,0.6572016477584839,0.6572016477584839,0.7108938694000244,0.7108938097953796
1094,1094,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,A link list is a data structure which is built from structures and pointers. It forms a chain of nodes with pointers representing the links of the chain and holding the entire thing together,4.0,4.0,4.0,0.6886111497879028,0.6886112689971924,0.659754753112793,0.6597548127174377
1095,1095,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,its a list of pointers that are linked 2 each other. every pointer points to the next pointer which has the next element,4.0,5.0,4.5,0.584502637386322,0.5845025777816772,0.5704740881919861,0.5704740881919861
1096,1096,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,linear collection of self-referential nodes connected by pointers.,4.0,4.0,4.0,0.6897206902503967,0.6897206902503967,0.6827964186668396,0.68279629945755
1097,1097,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,the items of a data structure are linked to each other using pointers,4.0,5.0,4.5,0.6118061542510986,0.6118061542510986,0.6927892565727234,0.6927892565727234
1098,1098,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,A list of objects where each object contains a link to the next item in the list,4.0,5.0,4.5,0.60634446144104,0.60634446144104,0.5820095539093018,0.5820095539093018
1099,1099,7.1,What is a linked list?,A collection of elements that can be allocated dynamically.,"A linked list is one of the fundamental data structures, and can be used to implement other data structures. It consists of a sequence of nodes, each containing arbitrary data fields and one or two references (""links"") pointing to the next and/or previous nodes.  ",4.0,5.0,4.5,0.6841682195663452,0.6841682195663452,0.6784372329711914,0.6784371733665466
1100,1100,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,Elements can be inserted into a link list at any point and does not need to be resized unlike an array needs to be.,5.0,5.0,5.0,0.58995521068573,0.5899550914764404,0.6152352094650269,0.6152352690696716
1101,1101,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,"Unlike arrays, linked lists can insert and delete without shifting data and change in size easily.",5.0,5.0,5.0,0.5818119049072266,0.5818120241165161,0.6634171605110168,0.6634171605110168
1102,1102,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,"Array size is fixed,but Linked is not fixed.",5.0,5.0,5.0,0.6569502353668213,0.6569502353668213,0.6967447996139526,0.6967447400093079
1103,1103,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,You can insert into and delete items from a pointer-based linked list without shifting data.,5.0,4.0,4.5,0.5553967356681824,0.5553966760635376,0.5652506351470947,0.5652506351470947
1104,1104,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,Arrays must be of a defined size... elements can be added to a linked list w/o defining any size.,5.0,5.0,5.0,0.620984673500061,0.6209847331047058,0.6670798659324646,0.6670799255371094
1105,1105,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,"The principal benefit of a linked list over a conventional array is that the order of the linked items may be different from the order that the data items are stored in memory or on disk, allowing the list of items to be traversed in a different order. A linked list is a self-referential datatype because it contains a pointer or link to another datum of the same type. Linked lists permit insertion and removal of nodes at any point in the list in constant time",3.0,5.0,4.0,0.5764504075050354,0.5764504075050354,0.5335550308227539,0.5335550904273987
1106,1106,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,You can expand when you need it.  You do not have to predetermine the size.,5.0,5.0,5.0,0.5360561013221741,0.5360561013221741,0.6574009656906128,0.657400906085968
1107,1107,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,Linked lists are able to grow and shrink in size as needed,5.0,5.0,5.0,0.502479612827301,0.5024796724319458,0.5543003082275391,0.5543002486228943
1108,1108,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,Linked list is able to grow in size as needed. Does not require the shifting of items during insertions and deletions,5.0,5.0,5.0,0.5560771226882935,0.5560771226882935,0.5527940392494202,0.5527940392494202
1109,1109,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,"A linked list is not fixed in size, and does not require the shifting of items during insertions and deletions.",5.0,5.0,5.0,0.6006956696510315,0.6006956100463867,0.6437034010887146,0.6437034606933594
1110,1110,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,There is no limit as to how many you create where an array can only hold a given amount of information.,3.0,3.0,3.0,0.5453215837478638,0.5453215837478638,0.6268864274024963,0.6268863677978516
1111,1111,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,Linked lists have constant time insertion and deletion,4.0,3.0,3.5,0.598521888256073,0.5985218286514282,0.5675530433654785,0.5675531029701233
1112,1112,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,"Linked lists can be grown dynamically, items don't require shifting, and they have a greater awesome factor than that of arrays.",5.0,5.0,5.0,0.5727304220199585,0.5727304220199585,0.5525222420692444,0.5525223016738892
1113,1113,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,Linked lists have an indefinite size. They can be added to and taken away from very easily with little difficulty in the shifting of data.,5.0,5.0,5.0,0.6489466428756714,0.6489465236663818,0.6164326667785645,0.6164326667785645
1114,1114,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,"Nearly infinite size, limited only by system memory and also the ability to expand the size dynamically.",5.0,5.0,5.0,0.5794801115989685,0.5794801115989685,0.6728894710540771,0.6728894114494324
1115,1115,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,"They grow as needed, while arrays are of fixed size.",5.0,5.0,5.0,0.6227712035179138,0.6227712035179138,0.672980546951294,0.6729806065559387
1116,1116,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,Does not have a fixed size. Linked list is able to grow as needed. The time to access an array bases list takes a contant amount of time where as an linked-base like depends on 'i',5.0,5.0,5.0,0.6027933359146118,0.6027933359146118,0.5926557183265686,0.5926558375358582
1117,1117,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,Linked lists can grow and shrink as you need them to.  Arrays have a fixed size.,5.0,5.0,5.0,0.6905741095542908,0.6905741095542908,0.6728280186653137,0.6728280782699585
1118,1118,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,more memory can be allocated on the fly for more items,4.0,5.0,4.5,0.4523714482784271,0.4523713886737824,0.4670200049877167,0.4670199751853943
1119,1119,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,"A linked list may be increased in size as needed, while an array's size is set when it is created",5.0,5.0,5.0,0.61651211977005,0.61651211977005,0.5848369598388672,0.5848369598388672
1120,1120,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,"Array has a fixed size, but linked list is able to grow in size as needed",5.0,5.0,5.0,0.5920369625091553,0.5920369625091553,0.660843014717102,0.660843014717102
1121,1121,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,its resizeable,5.0,5.0,5.0,0.4972750246524811,0.4972750544548034,0.4854230284690857,0.48542290925979614
1122,1122,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,Linked lists do not have a set size and can grow or shrink as needed.,5.0,5.0,5.0,0.6320716142654419,0.6320714950561523,0.6524854898452759,0.6524855494499207
1123,1123,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,linked lists are abe to grow as needed to a new size,5.0,5.0,5.0,0.4281100034713745,0.4281099736690521,0.5019136071205139,0.5019135475158691
1124,1124,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,"The size is not fixed, easier sorting because of no shifting, easier to insert items into the list",5.0,5.0,5.0,0.5493414998054504,0.5493414998054504,0.666799008846283,0.6667990684509277
1125,1125,7.2,What is the main advantage of linked lists over arrays?,The linked lists can be of variable length.,The size of array is restricted to declaration. Insertion/Deletion of values in middle of array is not possible.,5.0,5.0,5.0,0.6307024955749512,0.6307024359703064,0.7001007199287415,0.7001007199287415
1126,1126,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",Array can retrieve memory from any place in the list while in a link list you have to traverse through each individual node.,5.0,5.0,5.0,0.6550318598747253,0.6550318598747253,0.7279820442199707,0.7279821038246155
1127,1127,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","Arrays require less memory than linked lists and allow direct access to a specified item. Also, insertion and deletion in arrays does not require a list traversal.",4.0,5.0,4.5,0.7902213335037231,0.7902213931083679,0.818695604801178,0.818695604801178
1128,1128,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","Access to a particular element is very fast, because its location in memory can be determined mathematically and accessed directly.",5.0,5.0,5.0,0.7320641279220581,0.7320641279220581,0.7926141619682312,0.792614221572876
1129,1129,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",Arrays are good for random access and good for sequential access which are both in constant time. Where linked lists are linear for random access. Arrays are faster in this case.,5.0,5.0,5.0,0.6683388948440552,0.6683388948440552,0.7131155729293823,0.7131156325340271
1130,1130,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","An array is capable of accessing any part of that array based on the index. The link list must be traversed from the beginning or the end, that is, data can only be accessed if it is adjacent to the previous or next nodes.",5.0,5.0,5.0,0.7972074747085571,0.7972075343132019,0.8333378434181213,0.8333379626274109
1131,1131,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","On the other hand, arrays allow random access, while linked lists allow only sequential access to elements. Singly-linked lists, in fact, can only be traversed in one direction.",5.0,5.0,5.0,0.7465631365776062,0.746563196182251,0.8250112533569336,0.8250114321708679
1132,1132,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",You have to keep up with the head of the list.,1.0,3.0,2.0,0.5124040842056274,0.5124040842056274,0.6461014747619629,0.6461014747619629
1133,1133,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",Arrays are easier to implement and require less memory,3.0,4.0,3.5,0.6073054671287537,0.6073054671287537,0.5724065899848938,0.5724065899848938
1134,1134,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",Linked list has an increase complexity of the implementation. The linked list has an array that keeps growing which leads to a increase in memory.,2.0,3.0,2.5,0.6977149248123169,0.6977149248123169,0.6883513927459717,0.6883513927459717
1135,1135,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",You don't have to iterate through the entire list to access elements.,5.0,4.0,4.5,0.7172495126724243,0.7172494530677795,0.7119469046592712,0.7119470238685608
1136,1136,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",you can go forwards and backwards and point to any piece of data at any given time where linked lists have to point to the next piece of data.,2.0,4.0,3.0,0.5988553762435913,0.5988554358482361,0.53797447681427,0.53797447681427
1137,1137,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",Take up less memory and are contiguously stored,4.0,4.0,4.0,0.5180196762084961,0.5180196762084961,0.5899308323860168,0.5899308919906616
1138,1138,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","Arrays, being fixed, are less error prone.",1.0,3.0,2.0,0.7222054600715637,0.7222053408622742,0.7914250493049622,0.7914251089096069
1139,1139,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","Arrays have a set list of values. Meaning you can pick a spot in the array such as a[7] picks the 8th spot in the array. With linked lists you have to keep track with pointers if you want to take specific nodes out, otherwise you must traverse the entire list. ",5.0,5.0,5.0,0.7567058801651001,0.7567058205604553,0.7670583128929138,0.7670583128929138
1140,1140,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","direct access to elements, and speed, linked lists have increased search times to access elements even if the list is sorted. ( like getting the last element without a pointer directly to the end of the list. )",5.0,4.0,4.5,0.7413094639778137,0.7413095235824585,0.7920149564743042,0.7920149564743042
1141,1141,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",Array items are accessed directly with equal access time,5.0,5.0,5.0,0.6879623532295227,0.6879623532295227,0.6473953127861023,0.6473953723907471
1142,1142,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",Array-bases implementations require less memory than a pointer-bases one.,3.0,4.0,3.5,0.6907413601875305,0.6907414793968201,0.6904760003089905,0.6904759407043457
1143,1143,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",You can access specific elements quickly in an array.  In a linked list you must traverse the list to get access the same element.,5.0,5.0,5.0,0.7622619867324829,0.7622619271278381,0.7358645796775818,0.7358646988868713
1144,1144,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",link lists only allow sequential access where arrays allow random access,5.0,4.0,4.5,0.4533376395702362,0.4533376395702362,0.5318415760993958,0.5318416357040405
1145,1145,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","Any entitiy in an array may accessed immediately, whereas a linked list must be traversed one item at a time because each object only points adjacent objects",5.0,5.0,5.0,0.7626122236251831,0.7626122832298279,0.7682569026947021,0.7682568430900574
1146,1146,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",Array based implementation requires less memory than lined lists based implementation,3.0,4.0,3.5,0.6186867356300354,0.6186867356300354,0.609857976436615,0.6098580360412598
1147,1147,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",Array-based implementations require less memory than a pointer-based ones,3.0,4.0,3.5,0.5636264085769653,0.5636263489723206,0.6083909273147583,0.6083909869194031
1148,1148,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","You can go up and down an array , but you can only go one direction while traversing a linked list.",1.0,5.0,3.0,0.7268664240837097,0.7268664240837097,0.785834014415741,0.785834014415741
1149,1149,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","arrays allow for the random access of any item cotained a any time, linked lists must be gone through toget to the desired item",5.0,5.0,5.0,0.625727653503418,0.625727653503418,0.6593292355537415,0.6593292951583862
1150,1150,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","In arrays you have direct access to each element, but in linked lists you have to traverse the list up to the element that you need.",5.0,5.0,5.0,0.7162942886352539,0.7162941694259644,0.7615798711776733,0.7615797519683838
1151,1151,7.3,What is the main advantage of arrays over linked lists?,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","Array size is fixed. But Linked is not fixed, data is also accessed quicker in array list, also memory requirement is less and no pointers required. Arrays have random access and less overheads compared to Linked list have sequential access only with too much overheads and no cache memory support. On the other hand, arrays allow random access, while linked lists allow only sequential access to elements. Singly-linked lists, in fact, can only be traversed in one direction.",5.0,5.0,5.0,0.7184043526649475,0.7184044718742371,0.7609506845474243,0.7609506249427795
1152,1152,7.4,How are linked lists passed as arguments to a function?,By reference.,They are passed by reference because you want the function to change the pointer,4.0,5.0,4.5,0.5139369964599609,0.5139369964599609,0.5236026644706726,0.5236027240753174
1153,1153,7.4,How are linked lists passed as arguments to a function?,By reference.,Linked lists are passed as arguments to a function by passing the head pointer of the list by reference.,5.0,5.0,5.0,0.6066887974739075,0.6066887974739075,0.5641107559204102,0.5641107559204102
1154,1154,7.4,How are linked lists passed as arguments to a function?,By reference.,- A function with access to a linked list's head pointer has access to the entire list.        - Pass the head ponter to a function as a reference argument.,5.0,5.0,5.0,0.556261420249939,0.556261420249939,0.5153464078903198,0.5153464078903198
1155,1155,7.4,How are linked lists passed as arguments to a function?,By reference.,By using a node.,2.0,3.0,2.5,0.6968166828155518,0.6968166828155518,0.7608137726783752,0.7608137726783752
1156,1156,7.4,How are linked lists passed as arguments to a function?,By reference.,Pass-by-reference,5.0,5.0,5.0,0.5203778147697449,0.5203777551651001,0.5319007635116577,0.5319007039070129
1157,1157,7.4,How are linked lists passed as arguments to a function?,By reference.,you send a pointer to an object of the LinkedList class,2.0,3.0,2.5,0.4229114651679993,0.4229114651679993,0.44249048829078674,0.44249045848846436
1158,1158,7.4,How are linked lists passed as arguments to a function?,By reference.,Passed as a pointer to the head.,5.0,3.0,4.0,0.5813530683517456,0.5813531279563904,0.557677149772644,0.5576772689819336
1159,1159,7.4,How are linked lists passed as arguments to a function?,By reference.,Passing the head pointer of a linked list to a function gives that function access to all nodes of that linked list,5.0,4.0,4.5,0.441611647605896,0.4416115880012512,0.4244687259197235,0.4244686961174011
1160,1160,7.4,How are linked lists passed as arguments to a function?,By reference.,You have to pass the head pointer to a function since it has access to the entire list.,5.0,3.0,4.0,0.5271685719490051,0.5271685719490051,0.5861558318138123,0.5861557722091675
1161,1161,7.4,How are linked lists passed as arguments to a function?,By reference.,You pass the head pointer to a function as a reference argument.,5.0,5.0,5.0,0.5882213115692139,0.5882213115692139,0.6411669850349426,0.6411669850349426
1162,1162,7.4,How are linked lists passed as arguments to a function?,By reference.,not answered,0.0,0.0,0.0,0.3385434150695801,0.3385434150695801,0.4339312016963959,0.4339311718940735
1163,1163,7.4,How are linked lists passed as arguments to a function?,By reference.,passes a pointer to a linked list object,2.0,3.0,2.5,0.3934081196784973,0.3934080898761749,0.4290579855442047,0.4290580451488495
1164,1164,7.4,How are linked lists passed as arguments to a function?,By reference.,"The linked list object contains the head, through which the other elements are accessible.",4.0,3.0,3.5,0.5871061086654663,0.5871061086654663,0.6156118512153625,0.6156119108200073
1165,1165,7.4,How are linked lists passed as arguments to a function?,By reference.,By the head of the list. It takes the head address and traverses from there on in.,5.0,3.0,4.0,0.6368266940116882,0.6368266344070435,0.6838955879211426,0.6838956475257874
1166,1166,7.4,How are linked lists passed as arguments to a function?,By reference.,as a pointer node.,3.0,3.0,3.0,0.5439177751541138,0.5439178347587585,0.5704335570335388,0.5704335570335388
1167,1167,7.4,How are linked lists passed as arguments to a function?,By reference.,A method with access to a linked list's head pointer as access to the entire list,5.0,3.0,4.0,0.4977313578128815,0.4977314174175263,0.3989090919494629,0.3989090323448181
1168,1168,7.4,How are linked lists passed as arguments to a function?,By reference.,A function with access to a linked list's head pointer has access to the entire list. Pass the head pointer to a function as a reference argument,5.0,5.0,5.0,0.5047594308853149,0.5047594308853149,0.4406353533267975,0.4406353533267975
1169,1169,7.4,How are linked lists passed as arguments to a function?,By reference.,the head pointer is passed to a function as a reference argument.,5.0,5.0,5.0,0.5636271238327026,0.5636271834373474,0.5931556224822998,0.593155562877655
1170,1170,7.4,How are linked lists passed as arguments to a function?,By reference.,the pointer to the first element is passed to a function,5.0,3.0,4.0,0.4157762229442597,0.4157762229442597,0.4548073410987854,0.4548073410987854
1171,1171,7.4,How are linked lists passed as arguments to a function?,By reference.,"linked lists are passed by reference, specificly the Head pointer",5.0,5.0,5.0,0.6100457310676575,0.6100456714630127,0.652224600315094,0.6522245407104492
1172,1172,7.4,How are linked lists passed as arguments to a function?,By reference.,Pass the head pointer to a function as a reference argument,5.0,5.0,5.0,0.5030795931816101,0.5030795931816101,0.4780854880809784,0.4780855178833008
1173,1173,7.4,How are linked lists passed as arguments to a function?,By reference.,by refrenece,5.0,5.0,5.0,0.3442931473255157,0.3442932069301605,0.39572688937187195,0.3957269489765167
1174,1174,7.4,How are linked lists passed as arguments to a function?,By reference.,By passing the head pointer and going through the list as needed inside the function.,5.0,3.0,4.0,0.5683772563934326,0.5683773159980774,0.6282028555870056,0.6282029151916504
1175,1175,7.4,How are linked lists passed as arguments to a function?,By reference.,linked lists are passed by using pointers,3.0,3.0,3.0,0.39437976479530334,0.39437973499298096,0.5308277010917664,0.5308277010917664
1176,1176,7.4,How are linked lists passed as arguments to a function?,By reference.,the head object is passed to the function,4.0,3.0,3.5,0.35406348109245295,0.3540634512901306,0.3698509633541107,0.3698510229587555
1177,1177,7.4,How are linked lists passed as arguments to a function?,By reference.,"Linked lists permit insertion and removal of nodes at any point in the list in constant time,[1] but do not allow random access. ",0.0,3.0,1.5,0.5473261475563049,0.5473261475563049,0.564296543598175,0.5642964839935303
1178,1178,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,They are passed by reference because you want the function to change the pointer,0.0,1.0,0.5,0.5139369964599609,0.5139369964599609,0.5236026644706726,0.5236027240753174
1179,1179,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"In a circular linked list, every node has a successor which means that the last node's successor is the head or first node.",5.0,5.0,5.0,0.6341010332107544,0.6341009736061096,0.6067708134651184,0.6067707538604736
1180,1180,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,A circular linked list is a linked list that links items in a continuous circle. This allows the full list to be traversed by starting at any item in the list; a fixed head or tail is not required.,5.0,4.0,4.5,0.6440244913101196,0.6440244913101196,0.6685875654220581,0.6685875654220581
1181,1181,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"In a circular linked list, the last node points to the first node.",5.0,5.0,5.0,0.6483876705169678,0.6483875513076782,0.7277510166168213,0.7277510762214661
1182,1182,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"On a circular linked list, the end element points to the head, thus making the circle. A basic link list has nothing pointing to the head, and the last element points to null.",5.0,5.0,5.0,0.7157439589500427,0.715743899345398,0.7530443072319031,0.7530441880226135
1183,1183,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,the circular linked list's last node points to the begining of the list while a standard linked list points to NULL,5.0,5.0,5.0,0.6597647666931152,0.6597647666931152,0.5746222734451294,0.5746222138404846
1184,1184,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,The last item in the list points to the head,5.0,5.0,5.0,0.7128215432167053,0.7128215432167053,0.8205864429473877,0.8205864429473877
1185,1185,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"In a circular linked list, the last node points back to the first node, there is no NULL",5.0,5.0,5.0,0.6252719759941101,0.6252719759941101,0.6661228537559509,0.6661228537559509
1186,1186,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"Circular linked lists are most useful for describing naturally circular structures, and have the advantage of regular structure and being able to traverse the list starting at any point.",2.0,3.0,2.5,0.6308690905570984,0.6308691501617432,0.6171734929084778,0.6171735525131226
1187,1187,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,A circular linked list has the last node point back to the head of the linked list.,5.0,5.0,5.0,0.798111081123352,0.7981111407279968,0.7950397729873657,0.7950398325920105
1188,1188,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,Basic linked list points to a NULL at the end and circular points to the head at the end.,5.0,5.0,5.0,0.6804016828536987,0.6804016828536987,0.6910681128501892,0.691068172454834
1189,1189,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,in a circular linked list the the last item points to the first item.,5.0,5.0,5.0,0.7178127765655518,0.7178127765655518,0.7864381670951843,0.7864381670951843
1190,1190,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"The circular linked list's tail points to the head, whereas the basic linked list's tail points to a NULL.",5.0,5.0,5.0,0.6380720138549805,0.63807213306427,0.6426467895507812,0.6426467895507812
1191,1191,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,a basic linked list has an end with a null value where a circular linked list has a pointer from the end to the beginning,5.0,5.0,5.0,0.4643661081790924,0.4643661379814148,0.5804507732391357,0.580450713634491
1192,1192,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"how to determine the end of the list, in basic linked lists the last element links to a null pointer, while circular linked lists link to the head element at the end.",5.0,5.0,5.0,0.6498729586601257,0.649872899055481,0.6930292248725891,0.6930293440818787
1193,1193,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"No Node in a circular linked list contains NULL, the last Node points pack to a Node within the list.",5.0,5.0,5.0,0.6536968946456909,0.6536968350410461,0.6205524206161499,0.6205524802207947
1194,1194,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"The difference between a circular linked list and a basic linked list is that a circular linked list, the last node references the first node. Every node in a circular linked list has a successor and no node in a circular linked list contains NULL.",5.0,5.0,5.0,0.6320648193359375,0.6320648789405823,0.6624758243560791,0.6624757647514343
1195,1195,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,No node in a circular linked list contains NULL.,3.0,4.0,3.5,0.5708195567131042,0.5708194971084595,0.6236076951026917,0.6236076951026917
1196,1196,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,in a circular linked list the last element points to the head of the list,5.0,5.0,5.0,0.717880368232727,0.7178803086280823,0.7763335108757019,0.7763334512710571
1197,1197,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"In a regular linked list the last object points to NULL. In a circular linked list, the last object points back to the beginning of the list",5.0,5.0,5.0,0.610157310962677,0.6101572513580322,0.6478570699691772,0.6478570103645325
1198,1198,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"In circular linked list each node has successor, no node contains NULL, while in basic linked list last node contain NULL.",3.0,3.0,3.0,0.5835798978805542,0.5835798978805542,0.5823201537132263,0.5823201537132263
1199,1199,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"in a circular linked lists, the last element points to the first",5.0,5.0,5.0,0.6004939675331116,0.6004939675331116,0.6674081683158875,0.6674081683158875
1200,1200,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"A circular linked list does not have a last element. Instead, it's last item points to the head of the list.",5.0,5.0,5.0,0.7507122755050659,0.7507122755050659,0.7833805680274963,0.7833805680274963
1201,1201,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"in a circular linked list, the last node contains a pointer that goes back to the first node; in a basic linked list, the last node contains a null pointer ",5.0,5.0,5.0,0.5815787315368652,0.5815787315368652,0.6149683594703674,0.6149683594703674
1202,1202,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"in a circular linked list, the last object is linked back to the first object.",5.0,5.0,5.0,0.6442645192146301,0.6442644596099854,0.692323625087738,0.6923236846923828
1203,1203,7.5,What is the difference between a circular linked list and a basic linked list?,The last element in a circular linked list points to the head of the list.,"In the case of a non circular link list, if you are at the last node of the list and u want to move to first u need to go to one, step back till u reach to first. But in circular link list from last to first you need to make only one move.  In a single link list u can move only in one direction but in double link list u can move in any direction back or forward or forward.  ",2.0,5.0,3.5,0.5242909789085388,0.5242909789085388,0.5841887593269348,0.5841887593269348
1204,1204,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",they can traverse in both directions,3.0,4.0,3.5,0.4090495407581329,0.4090495705604553,0.489349365234375,0.489349365234375
1205,1205,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",In a doubly linked list you can delete a node without having to traverse the list.,5.0,4.0,4.5,0.6910402178764343,0.6910400986671448,0.6696458458900452,0.6696457862854004
1206,1206,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",A doubly-linked list allows you to delete a node without traversing the list to establish a trailing pointer.,5.0,4.0,4.5,0.7275704741477966,0.7275704741477966,0.6890155076980591,0.6890154480934143
1207,1207,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",A doubly linked list allows you to traverse the list in either direction. Each node points to its successor as well as to its predecessor.,3.0,4.0,3.5,0.7560256719589233,0.7560256123542786,0.7056137919425964,0.7056137919425964
1208,1208,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","Doubly-linked lists can traverse backwards, though they still cannot access data at any point in the list, it can be shorter to traverse backwards.",3.0,4.0,3.5,0.7628408074378967,0.7628407478332521,0.6589838266372681,0.6589838266372681
1209,1209,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",you can traverse the list from front to back and back to front,3.0,4.0,3.5,0.3745060861110687,0.3745060861110687,0.43157321214675903,0.43157318234443665
1210,1210,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",You can traverse the list in reverse.,3.0,4.0,3.5,0.6212770342826843,0.6212770342826843,0.5826796889305115,0.5826796293258667
1211,1211,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",Doubly linked lists can be traversed in both directions,3.0,4.0,3.5,0.4929132163524628,0.4929132163524628,0.5063529014587402,0.5063528418540955
1212,1212,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","Double-linked lists require more space per node, and their elementary operations are more expensive; but they are often easier to manipulate because they allow sequential access to the list in both directions.",4.0,3.0,3.5,0.7889493107795715,0.7889493703842163,0.7203801870346069,0.7203800678253174
1213,1213,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",You can traverse forwards and backwards through nodes.,3.0,4.0,3.5,0.6522933840751648,0.65229332447052,0.5734416246414185,0.5734416246414185
1214,1214,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",You can point both forwards and backwards,3.0,4.0,3.5,0.4803058207035065,0.4803058207035065,0.4139019846916199,0.4139019548892975
1215,1215,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",You can go backwards in the linked list and access previous data easier without having to keep track of the previous item,4.0,4.0,4.0,0.6520400643348694,0.6520400047302246,0.5534312725067139,0.5534313321113586
1216,1216,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",Doubly linked lists allow backward movement through the nodes.,3.0,4.0,3.5,0.7076894640922546,0.7076894640922546,0.602506697177887,0.602506697177887
1217,1217,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","they have double pointers, so each node can point forwards or backwards. Making it a little easer to get to where you need. ",3.0,4.0,3.5,0.6917091608047485,0.6917091608047485,0.6492408514022827,0.6492409110069275
1218,1218,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",ability to backtrack through a list.,3.0,3.0,3.0,0.5966291427612305,0.5966291427612305,0.5840533971786499,0.5840533971786499
1219,1219,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",You can move forwards and backwards in the double-linked list. Basic only moves forwards.,3.0,4.0,3.5,0.6830857992172241,0.6830857992172241,0.5862446427345276,0.5862445831298828
1220,1220,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",The advantage is that each node points to bothe its predecessor and its successor. There are no special cases for insertion and deletion.,4.0,5.0,4.5,0.7466709613800049,0.7466709613800049,0.7204934358596802,0.7204934358596802
1221,1221,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",each node points to both its predecessor and its successor.,4.0,3.0,3.5,0.6982326507568359,0.6982327699661255,0.5962345004081726,0.5962344408035278
1222,1222,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",a doubly linked list has pointers in both directions. this allows for access from back to front as well as front to back,3.0,5.0,4.0,0.6081666946411133,0.6081666946411133,0.5925448536872864,0.5925449132919312
1223,1223,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","A doubly linked list can be traversed either direction, while a normal linked list can only be traversed from start to finish",3.0,4.0,3.5,0.6551075577735901,0.6551075577735901,0.6911048889160156,0.6911048293113708
1224,1224,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","Double Linked list are often easier to manipulate, because they allow sequential access to the list in both direction",4.0,4.0,4.0,0.6942034959793091,0.6942035555839539,0.6524674892425537,0.6524674296379089
1225,1225,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","given a node in the list, one can navigate easily in either direction",4.0,4.0,4.0,0.6055492162704468,0.605549156665802,0.5911279320716858,0.5911279320716858
1226,1226,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",You can traverse the list both forward and backwards.,3.0,4.0,3.5,0.5844804644584656,0.5844804644584656,0.5532454252243042,0.5532453060150146
1227,1227,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",a doubly linked list allows you to back up from a node rather than having to go through the entire list again,4.0,4.0,4.0,0.5420751571655273,0.5420752167701721,0.5374868512153625,0.5374867916107178
1228,1228,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",Gives faster times for some operations such as insertion and deletion,5.0,5.0,5.0,0.6024866104125977,0.6024866700172424,0.6544020771980286,0.6544020771980286
1229,1229,7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","The primary disadvantage of doubly linked lists are that (1) each node requires an extra pointer, requiring more space, and (2) the insertion or deletion of a node takes a bit longer (more pointer operations).",0.0,4.0,2.0,0.7626966238021851,0.7626966834068298,0.7377563118934631,0.7377563118934631
1230,1230,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,they take up twice as much memory for each node,5.0,5.0,5.0,0.5967258214950562,0.5967258214950562,0.59722900390625,0.5972290635108948
1231,1231,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,"In a doubly linked list, there are more pointers to set and the mechanics of inserting and deleting are more difficult. Also, the special cases at the beginning or end of the list are more complicated.",4.0,3.0,3.5,0.5866773128509521,0.5866774320602417,0.6517223119735718,0.6517221927642822
1232,1232,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,"There are more pointers to set, the mechanics of inserting into and deleting from a doubly linked list are a bit more involved than for a singly linked list.",4.0,4.0,4.0,0.6293578743934631,0.6293579936027527,0.6943191289901733,0.6943190693855286
1233,1233,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,Insertion and deletion with a doubly linked list are more involved than with a singly linked list leaving more room for error and complex algorithms.,3.0,3.0,3.0,0.622991681098938,0.622991681098938,0.666193425655365,0.6661933064460754
1234,1234,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,"Need more memory to store ""previous"" pointers.",5.0,5.0,5.0,0.7068249583244324,0.7068248987197876,0.7063902616500854,0.7063902020454407
1235,1235,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,a node in a doubly linked list takes up more memory than a node in a singly linked list.,5.0,5.0,5.0,0.6204605102539062,0.6204605102539062,0.5654974579811096,0.5654973983764648
1236,1236,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,You have to keep up with where you are and you have to consider the predecessor and successor connections when inserting/deleting.,3.0,3.0,3.0,0.6290189027786255,0.6290189623832703,0.6906561851501465,0.6906561851501465
1237,1237,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,"Each node requires an extra node, requires more memory, and is more difficult to insert and remove individual nodes",5.0,5.0,5.0,0.6973820328712463,0.6973819732666016,0.6419699192047119,0.6419698596000671
1238,1238,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,"Double-linked lists require more space per node, and their elementary operations are more expensive",5.0,5.0,5.0,0.626287043094635,0.6262869834899902,0.6628093123435974,0.6628091931343079
1239,1239,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,More difficult to delete and create nodes.,3.0,3.0,3.0,0.7370448708534241,0.7370449304580688,0.7089114785194397,0.7089115381240845
1240,1240,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,They use more memory and you have to make 2 pointers and update 2 pointers each time you change the list.,5.0,5.0,5.0,0.6651844382286072,0.6651844382286072,0.700390636920929,0.7003907561302185
1241,1241,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,nodes take up more memory,5.0,5.0,5.0,0.4622195661067962,0.4622195661067962,0.5248517990112305,0.5248517990112305
1242,1242,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,"Each node requires an extra pointer (space requirements increased), Insertion or deletion of a node takes a longer (more pointer operations).",5.0,5.0,5.0,0.7154614329338074,0.7154613733291626,0.7340388894081116,0.7340388894081116
1243,1243,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,its a little more confusing. The special cases at the end and beginning become more difficult to do.,3.0,3.0,3.0,0.6543396711349487,0.6543397307395935,0.5930621027946472,0.5930620431900024
1244,1244,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,increased actions to add and remove elements to the linked list.,3.0,3.0,3.0,0.7385614514350891,0.7385614514350891,0.693298876285553,0.6932988166809082
1245,1245,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,"Inserting and deleting in a double-linked list is more involved, and has special cases at the beginning and end.",3.0,3.0,3.0,0.6095114946365356,0.6095114946365356,0.6783568263053894,0.6783567667007446
1246,1246,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,The main disadvanate is that if hard to remove all items in the list.,1.0,3.0,2.0,0.6882133483886719,0.6882133483886719,0.6347396373748779,0.6347395777702332
1247,1247,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,"each node requires an extra pointer, taking up more storage.  insertions and deletions require more pointer operations.",5.0,5.0,5.0,0.7601915001869202,0.7601915001869202,0.7406583428382874,0.7406582832336426
1248,1248,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,"in a doubly linked list there are twice as many pointers for each element , therefore more memory is used",5.0,5.0,5.0,0.6003302335739136,0.6003302335739136,0.6833652257919312,0.6833651065826416
1249,1249,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,The process of adding and removing Nodes in a Doubly linked list is more complex than in a basic linked list,3.0,4.0,3.5,0.5106512904167175,0.5106513500213623,0.5785923600196838,0.5785924196243286
1250,1250,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,"Double linked lists require more space per node, and their elementary operation are more expensive",5.0,5.0,5.0,0.6321969628334045,0.6321969628334045,0.6789722442626953,0.6789723634719849
1251,1251,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,"1- each node requires an extra pointer, requiring more space 2- the insertion or deletion of a node takes a bit longer, more pointer operations",5.0,5.0,5.0,0.6788967251777649,0.6788968443870544,0.676681637763977,0.676681637763977
1252,1252,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,It takes up twice the storage needed.,5.0,5.0,5.0,0.7446332573890686,0.7446331977844238,0.6949492692947388,0.694949209690094
1253,1253,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,"using more pointers to enable the backward movement takes up more memory, having more pointers make it slightly more work to add or remove a node from the list",5.0,5.0,5.0,0.7005457878112793,0.7005457878112793,0.6765748262405396,0.67657470703125
1254,1254,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,"increased memory requirements, slightly more complicated when modifying elements in the list",5.0,5.0,5.0,0.6660932302474976,0.6660932898521423,0.638299822807312,0.638299822807312
1255,1255,7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,Extra space required to store the back pointers.,not answered,0.0,0.0,0.0,0.3385434150695801,0.3385434150695801,0.4339312016963959,0.4339311718940735
1256,1256,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",A data structure for storing items which are to be accessed in last-in first-out order that can be implemented in three ways.,5.0,5.0,5.0,0.7743446826934814,0.7743446230888367,0.823358952999115,0.823358952999115
1257,1257,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",A stack is an abstract data type that is based on the principle that the last element inserted into the stack will be the first element removed from the stack.,5.0,5.0,5.0,0.8008660078048706,0.8008661270141602,0.8052526712417603,0.8052525520324707
1258,1258,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",Stores a set of elements in a particular order.,0.0,4.0,2.0,0.6314799189567566,0.6314799785614014,0.6493123173713684,0.6493122577667236
1259,1259,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","An ADT whose most recently inserted item is the first item removed or retrieved. This property is called last in, first out (LIFO). Items enter and leave a stack at its top.",5.0,5.0,5.0,0.7921281456947327,0.7921281456947327,0.787462055683136,0.7874619960784912
1260,1260,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",A list in which only the top (or last item added) can be modified.,4.0,5.0,4.5,0.7358993887901306,0.7358994483947754,0.7989623546600342,0.7989623546600342
1261,1261,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a stack is a data structure that uses push to insert an item and pop to remove ad item. The stack use a last in first out structure for inserting and removing items.,5.0,5.0,5.0,0.7689346671104431,0.7689346671104431,0.777588963508606,0.777588963508606
1262,1262,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",A data structure that stores data using LIFO.,5.0,5.0,5.0,0.627007782459259,0.6270079612731934,0.6155501008033752,0.6155501008033752
1263,1263,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","A stack is similar to an array, but does not allow for random access. Stacks only allow a user to retrieve the last item put into the stack. Last in, fist out.",5.0,5.0,5.0,0.7729048132896423,0.7729048132896423,0.7705612778663635,0.7705612182617188
1264,1264,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",Stores a set of elements in a particular order. Stack principle: LAST  IN  FIRST  OUT. It means: the last element inserted is the first one to be removed.,5.0,5.0,5.0,0.7784152626991272,0.778415322303772,0.8116516470909119,0.8116515278816223
1265,1265,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",A stack is an ADT that stores a set of elements in a particular order.,1.0,4.0,2.5,0.6695056557655334,0.6695057153701782,0.675324559211731,0.675324559211731
1266,1266,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","a data type that stores a set of elements in a certain order, last in, first out.",5.0,5.0,5.0,0.7990232110023499,0.7990232110023499,0.7885733246803284,0.7885733246803284
1267,1267,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a data structure that moves elements in last in first out,5.0,5.0,5.0,0.6490397453308105,0.6490397453308105,0.6787676215171814,0.6787675619125366
1268,1268,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",Stores a set of elements in a last in first out order.,5.0,5.0,5.0,0.6597387194633484,0.6597386002540588,0.7425056099891663,0.7425056099891663
1269,1269,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",A list that can be added to or removed from only from the top.,5.0,5.0,5.0,0.6669728755950928,0.6669729948043823,0.702332615852356,0.7023325562477112
1270,1270,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","a stack is an Abstract data type which operates on a last in first out basis for storing a list of objects, and does not support ( at least in the pure stack) peeking at a element without removing the rest of the stack first.",5.0,5.0,5.0,0.7534928321838379,0.7534927725791931,0.8199446201324463,0.8199445605278015
1271,1271,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",Stores a set of elements in a particular order based on the principle of Last In First Out (LIFO).,5.0,5.0,5.0,0.7583046555519104,0.7583047747612,0.7782559990882874,0.7782560586929321
1272,1272,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","an object list that stores elements in a particular order, the first object inserted is at the bottom with the last object at the top so the first object in is the last object out.",5.0,5.0,5.0,0.7893931269645691,0.7893933057785034,0.8018026947975159,0.8018028140068054
1273,1273,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",An ADT that stores a set of elements in a particular order. The stack principles are LIFO. The last item inserted in the list is the first out.,5.0,5.0,5.0,0.7822127938270569,0.7822129130363464,0.7908815741539001,0.7908815741539001
1274,1274,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",An abstract data type that stores a set of elements in a particular order.,1.0,4.0,2.5,0.7101016044616699,0.7101017236709595,0.6906684041023254,0.6906684637069702
1275,1275,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a collection of data to be executed in the order of last in first out,5.0,5.0,5.0,0.6496812701225281,0.6496813297271729,0.6848412156105042,0.6848412156105042
1276,1276,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","A stack is a data structure that allows data members to be added or removed one at a time, and in order. They are a ""Last in First Out"" structure.",5.0,5.0,5.0,0.7931004166603088,0.7931005358695984,0.780531108379364,0.7805310487747192
1277,1277,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",Stores a set of element in a particular order,0.0,4.0,2.0,0.5564545392990112,0.5564544796943665,0.6162532567977905,0.6162531971931458
1278,1278,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",is a list of element where the first one to be removed is the last one inserted,5.0,5.0,5.0,0.7215648293495178,0.7215649485588074,0.7332484722137451,0.7332484126091003
1279,1279,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",A data structure that puts elements in a list and only allows the user  access to the last element.,4.0,5.0,4.5,0.7469781637191772,0.7469783425331116,0.7386608719825745,0.7386608719825745
1280,1280,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a finite ordered list with zero or more elements,0.0,4.0,2.0,0.5581875443458557,0.5581876635551453,0.6023811101913452,0.6023811101913452
1281,1281,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","A storage container that holds objects in a certain order, which has a LIFO priority",5.0,5.0,5.0,0.6724827289581299,0.6724826693534851,0.7095304131507874,0.7095304727554321
1282,1282,8.1,What is a stack?,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","Stacks are a type of container adaptors, specifically designed to operate in a LIFO context (last-in first-out), where elements are inserted and extracted only from the end of the container.",5.0,5.0,5.0,0.7900522947311401,0.7900524139404297,0.8088477849960327,0.8088476657867432
1283,1283,8.2,What are the two main functions defined by a stack?,push and pop,Push and pop are two main functions defined in a stack,5.0,5.0,5.0,0.804286777973175,0.804286777973175,0.8518117666244507,0.8518117666244507
1284,1284,8.2,What are the two main functions defined by a stack?,push and pop,Push which inserts an element on the top of the stack and pop which removes the last inserted element from the stack.,5.0,5.0,5.0,0.4590130746364594,0.4590131044387818,0.5493424534797668,0.5493425130844116
1285,1285,8.2,What are the two main functions defined by a stack?,push and pop,Push and pop.,5.0,5.0,5.0,0.5239550471305847,0.5239550471305847,0.714713454246521,0.7147135138511658
1286,1286,8.2,What are the two main functions defined by a stack?,push and pop,Pop function and Push function,5.0,5.0,5.0,0.6559574604034424,0.6559574604034424,0.5782700777053833,0.5782700181007385
1287,1287,8.2,What are the two main functions defined by a stack?,push and pop,push and pop.,5.0,5.0,5.0,0.586686372756958,0.586686372756958,0.7720787525177002,0.7720787525177002
1288,1288,8.2,What are the two main functions defined by a stack?,push and pop,push (insert an item) pop (remove an item),5.0,5.0,5.0,0.4896757304668426,0.4896757900714874,0.5525516271591187,0.5525516271591187
1289,1289,8.2,What are the two main functions defined by a stack?,push and pop,Adding a new item and removing the item,5.0,5.0,5.0,0.30226635932922363,0.30226635932922363,0.4446985721588135,0.4446985721588135
1290,1290,8.2,What are the two main functions defined by a stack?,push and pop,Push (insert) and pop (retrieve).,5.0,5.0,5.0,0.4834920465946198,0.4834919571876526,0.5021987557411194,0.5021987557411194
1291,1291,8.2,What are the two main functions defined by a stack?,push and pop,push and pop.,5.0,5.0,5.0,0.586686372756958,0.586686372756958,0.7720787525177002,0.7720787525177002
1292,1292,8.2,What are the two main functions defined by a stack?,push and pop,Push and Pop.,5.0,5.0,5.0,0.5124121904373169,0.5124121308326721,0.7108473777770996,0.7108474373817444
1293,1293,8.2,What are the two main functions defined by a stack?,push and pop,pop and push,5.0,5.0,5.0,0.8534134030342102,0.8534132838249207,0.8194524049758911,0.8194525241851807
1294,1294,8.2,What are the two main functions defined by a stack?,push and pop,push (add an element) pop (remove an element),5.0,5.0,5.0,0.43447789549827576,0.4344779253005981,0.5478900671005249,0.5478901863098145
1295,1295,8.2,What are the two main functions defined by a stack?,push and pop,Push and pop.,5.0,5.0,5.0,0.5239550471305847,0.5239550471305847,0.714713454246521,0.7147135138511658
1296,1296,8.2,What are the two main functions defined by a stack?,push and pop,pop and push,5.0,5.0,5.0,0.8534134030342102,0.8534132838249207,0.8194524049758911,0.8194525241851807
1297,1297,8.2,What are the two main functions defined by a stack?,push and pop,push ( to add to a item the Stack) Pop  ( to pull the last item added from an array. ),5.0,5.0,5.0,0.462529182434082,0.4625291228294373,0.4987102448940277,0.4987103044986725
1298,1298,8.2,What are the two main functions defined by a stack?,push and pop,pop and push,5.0,5.0,5.0,0.8534134030342102,0.8534132838249207,0.8194524049758911,0.8194525241851807
1299,1299,8.2,What are the two main functions defined by a stack?,push and pop,"push and pop, push puts an object into the list, and pop takes the last object off.",5.0,5.0,5.0,0.5054566860198975,0.5054566264152527,0.5800397992134094,0.580039918422699
1300,1300,8.2,What are the two main functions defined by a stack?,push and pop,Push and Pop are the two main functions of a stack,5.0,5.0,5.0,0.8424305319786072,0.8424305319786072,0.8607896566390991,0.8607895970344543
1301,1301,8.2,What are the two main functions defined by a stack?,push and pop,Push and Pop,5.0,5.0,5.0,0.8424305319786072,0.8424305319786072,0.8607896566390991,0.8607895970344543
1302,1302,8.2,What are the two main functions defined by a stack?,push and pop,"push, which adds an element to the stack... and pop which takes an element off the stack",5.0,5.0,5.0,0.43925514817237854,0.4392551779747009,0.5081791877746582,0.508179247379303
1303,1303,8.2,What are the two main functions defined by a stack?,push and pop,"Push and Pop, which add and remove data from the stack, respectively.",5.0,5.0,5.0,0.4732820391654968,0.4732820093631744,0.5276248455047607,0.527624785900116
1304,1304,8.2,What are the two main functions defined by a stack?,push and pop,push and pop,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1305,1305,8.2,What are the two main functions defined by a stack?,push and pop,pop - to remove item push - to insert an element,5.0,5.0,5.0,0.483051210641861,0.4830511510372162,0.62623131275177,0.6262313723564148
1306,1306,8.2,What are the two main functions defined by a stack?,push and pop,Pop and push,5.0,5.0,5.0,0.7520776391029358,0.7520775198936462,0.7491478323936462,0.7491478323936462
1307,1307,8.2,What are the two main functions defined by a stack?,push and pop,pop and push,5.0,5.0,5.0,0.8534134030342102,0.8534132838249207,0.8194524049758911,0.8194525241851807
1308,1308,8.2,What are the two main functions defined by a stack?,push and pop,push - adds an item to the top of the stack pop - removes the top item from the stack,5.0,5.0,5.0,0.4291353821754456,0.4291354417800903,0.5713656544685364,0.5713656544685364
1309,1309,8.2,What are the two main functions defined by a stack?,push and pop,push and pop. Push adds a given node to the top of the stack leaving previous nodes below. Pop removes and returns the current top node of the stack,5.0,5.0,5.0,0.4992582499980927,0.499258279800415,0.4602290093898773,0.4602290391921997
1310,1310,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",An array has a fixed size.  You can add and delete elements to the end of the array and you use a pointer to keep track of the last element added.  Each time you add or delete an element you update the pointer and check if it is equal to the max size of the array.,5.0,5.0,5.0,0.8183146119117737,0.8183146715164185,0.7835017442703247,0.7835017442703247
1311,1311,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",By implementing an array of a pre-defined size with the bottom stack element stored at element 0 and the last element stored in the array is the top. You increment top when an element is pushed and you decrement it when an item is popped.,5.0,5.0,5.0,0.750426709651947,0.7504268288612366,0.7406370639801025,0.740636944770813
1312,1312,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","If you use a dynamically allocated array, you must provide a destructor and copy constructor.",2.0,4.0,3.0,0.6924817562103271,0.6924817562103271,0.685574471950531,0.6855744123458862
1313,1313,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","Create a int value that stores the ""head"" of the stack. Increment the top when one element is pushed and decrement after it is popped.",5.0,5.0,5.0,0.7435893416404724,0.7435894012451172,0.7722342610359192,0.772234320640564
1314,1314,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",Use a pointer that always points to the end of the array list for push/pop modifications.,5.0,4.0,4.5,0.8339306116104126,0.8339306712150574,0.8019571304321289,0.8019570708274841
1315,1315,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",if you used an array to implement a stack when you add an element just add it to the end of an array and remove items from end of array also.,5.0,4.0,4.5,0.7773724794387817,0.7773725986480713,0.7275323271751404,0.7275323867797852
1316,1316,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",You predetermine the size of the stack as you would an array.  This type can not grow.,1.0,4.0,2.5,0.6659892797470093,0.6659893393516539,0.6278859376907349,0.6278859376907349
1317,1317,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","Declare a variable that points the last item in the array, which increases (++) when items are pushed onto the stack, and decreases (--) when an item is popped off the top.",5.0,5.0,5.0,0.780063271522522,0.780063271522522,0.749120831489563,0.7491207718849182
1318,1318,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","Allocate an array of some size. The bottom stack element is stored at some element. Last index in the array is the top. Increment top when one element is pushed, decrement after pop. ",5.0,4.0,4.5,0.7823431491851807,0.7823431491851807,0.7682051062583923,0.7682049870491028
1319,1319,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","You allocate an pre-defined array, the bottom element is stored at element 0, and the last index is the head.",5.0,3.0,4.0,0.7456045746803284,0.7456045150756836,0.7414747476577759,0.7414746284484863
1320,1320,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","Make an array, make the bottom at spot 0, make the last spot in the array the top, and increment top when you ad",5.0,4.0,4.5,0.7344607710838318,0.7344608306884766,0.7586331367492676,0.7586330771446228
1321,1321,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",treat the beginning of the array as the beginning of the stack,4.0,4.0,4.0,0.4606274664402008,0.4606274962425232,0.4706338047981262,0.47063377499580383
1322,1322,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",Use an index value called top to keep track of the last element in the array.,5.0,4.0,4.5,0.7391172051429749,0.7391172647476196,0.7492746710777283,0.7492746710777283
1323,1323,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",create an array and implement pointers that point to the next list item down and stack them up.,1.0,3.0,2.0,0.7314279675483704,0.7314280271530151,0.7218905091285706,0.721890389919281
1324,1324,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","for efficiency it is easiest to implement the left to right method, with the right most item being the one that is retrieved when a pop is performed, and a push places an object on the furthest element.",3.0,4.0,3.5,0.8129147291183472,0.8129146695137024,0.8142654299736023,0.8142654299736023
1325,1325,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","Create an array based on a pre-defined size N There can't be more elements than N.  Bottom stack element stored at element 0 last index in the array is the top  Increment top when one element is pushed, decrement after pop",5.0,4.0,4.5,0.7381348013877869,0.7381348609924316,0.7038641571998596,0.7038641571998596
1326,1326,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","with the element added to the array, so that the last element added is at the end, and when the element is popped it takes the last element off the array",4.0,4.0,4.0,0.7545451521873474,0.7545451521873474,0.6885109543800354,0.6885108351707458
1327,1327,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",Allocate an array of some pre-defined size. Bottom stack element stored at element 0. The last index in the array is the top. Increment top when one element is pushed.,5.0,4.0,4.5,0.7523875236511229,0.7523874640464783,0.7493990659713745,0.7493988871574402
1328,1328,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","Create an array, size N.  N++ when one element is pushed.  N-- when one element is popped.",4.0,4.0,4.0,0.6827895045280457,0.6827895641326904,0.6929093599319458,0.692909300327301
1329,1329,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",define an array and keep track of a pointer to the last element as items are added,5.0,3.0,4.0,0.6902971267700195,0.6902971267700195,0.6798422336578369,0.6798422336578369
1330,1330,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","By allocating an array of predetermined size, and an integer to track the top element of the stack. The bottom member of the stack will go in element 0 of the array, and for each element pushed the ""top"" tracking integer is incremented.",5.0,4.0,4.5,0.7252835631370544,0.7252835631370544,0.752373456954956,0.752373456954956
1331,1331,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","Allocate an array of some size, bottom stack element stored at element 0",4.0,4.0,4.0,0.6657537817955017,0.6657537817955017,0.7142468094825745,0.7142468094825745
1332,1332,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",you store the stack in the array but you have to keep in mind the first element,3.0,3.0,3.0,0.6447892189025879,0.6447891592979431,0.6142266988754272,0.614226758480072
1333,1333,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",You keep track of the last item entered into the array and do not  allow the user access to the other parts of the array.,5.0,3.0,4.0,0.7145032286643982,0.7145032286643982,0.7561953067779541,0.7561952471733093
1334,1334,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","using arrays, you are pushing one int at a time into the stack until you get to the end of your array",4.0,4.0,4.0,0.7265425324440002,0.7265426516532898,0.7082537412643433,0.7082536816596985
1335,1335,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","by having a max number of elements, allocating an array with that number of elements, storing the elements starting at 0, and keeping track of how many elements are currently in the list",5.0,3.0,4.0,0.6837499737739563,0.6837499737739563,0.7093261480331421,0.7093260884284973
1336,1336,8.3,How can you implement a stack with an array?,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","Stack usually holds a bunch of items with the same type, therefore u can use an array, to hold the content of the stack and an integer top that holds the index of the element at the top of the stack. u Choose an array size. Then the sequence of operations used. u have to decide what data types are needed for this stack data structure. ",2.0,4.0,3.0,0.7588480114936829,0.7588481307029724,0.7319723963737488,0.7319723963737488
1337,1337,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",You can add an element to the end of the linked list and update a pointer called top each time you modify the list.,2.0,4.0,3.0,0.8288508653640747,0.8288508057594299,0.7792562246322632,0.779256284236908
1338,1338,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",You implement a list in which the head pointer points to the element most recently pushed onto the list and the pop function changes the head pointer to point to the next to last element in the list and removes the element head pointer previously pointed to.,5.0,5.0,5.0,0.8041642308235168,0.8041641712188721,0.713716983795166,0.7137170433998108
1339,1339,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",This is the implementation of the stack using single linked list.   The operations performed on a stack are    1)push(): This is the function which is for insertion(pushing)of an element into stack                      It is similar to the insertion of an element at the end of a single linked list                   see  the function insert_end() in the program for operations of single linked list    2)pop(): This is the function which is for deletion(popping up) of an element from the stack             It is similar to the deletion of an element at the end of a single linked list       see  the function delete_end() in the program for operations of single linked list    3)stack_display():This is the function which is for displaying the elements of a stack,3.0,5.0,4.0,0.611418604850769,0.6114186644554138,0.6194303035736084,0.6194302439689636
1340,1340,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",Using nodes to keep track of the head of the stack. Then using Push( ) and Pop ( ) to create the stack as needed.,4.0,4.0,4.0,0.8020815849304199,0.8020815849304199,0.7710544466972351,0.7710544466972351
1341,1341,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","Use the head as the top of the stack, only modify the head when you push/pop... push would add a new item to the head, pop would remove the item from the head.",5.0,4.0,4.5,0.8196768760681152,0.81967693567276,0.8087940812110901,0.8087941408157349
1342,1342,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",you implement a stack with a list by changing the pointer to the first element of the list to the new item and move the pointer from the top of the stack to the next item when removing an item.,5.0,4.0,4.5,0.7999386191368103,0.7999385595321655,0.7085768580436707,0.7085767984390259
1343,1343,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",You dynamicly create space as the stack grows.  The stack can be as long as you need.,1.0,4.0,2.5,0.6279620528221129,0.6279621124267578,0.6230728626251221,0.6230728626251221
1344,1344,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","Declare a pointer that points to the head of the linked list, only add and remove nodes from the beginning of the list.",5.0,5.0,5.0,0.8574891090393066,0.8574891090393066,0.8666331768035889,0.8666333556175232
1345,1345,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",Creating a linked list. Add an element to the top of the stack when pushing and deleting an element when popping.,4.0,4.0,4.0,0.8363150954246521,0.8363150954246521,0.8251844644546509,0.8251845240592957
1346,1346,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","A singly-linked list is already a lot like a stack, it just depends on the way you address moving the head.",4.0,3.0,3.5,0.6662939190864563,0.6662937998771667,0.6740620732307434,0.6740620732307434
1347,1347,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","make a list, make the bottom the head, add on the end and make the end top",3.0,4.0,3.5,0.7288026809692383,0.7288026809692383,0.7154048681259155,0.7154049277305603
1348,1348,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",use the add function with a list as the beginning of the stack and remove for pop,5.0,4.0,4.5,0.6590173244476318,0.6590172648429871,0.7404971718788147,0.7404972910881042
1349,1349,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",Use head as the top and push and pop nodes from the head.,5.0,4.0,4.5,0.8348734378814697,0.834873378276825,0.7567345499992371,0.7567346692085266
1350,1350,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",create a node based list that points to the next list item down.,0.0,3.0,1.5,0.7900175452232361,0.7900174856185913,0.7014004588127136,0.7014005184173584
1351,1351,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","have the head of the list be the last item added, and a push just adds a new head.",5.0,4.0,4.5,0.8343080878257751,0.8343080878257751,0.7627877593040466,0.7627878189086914
1352,1352,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","Create a new list.  Pop elements in the stack as needed.  Push the stack to remove items, unless the stack is empty.  The top item is at the head of the list. The last item is at the end.",5.0,4.0,4.5,0.8111459612846375,0.8111460208892822,0.812472939491272,0.812472939491272
1353,1353,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",adding the element to the end of the list so that it links to the element before it. when popping the element it takes the last element in the list and sets the previous one as the end of the list.,3.0,4.0,3.5,0.7969810366630554,0.7969810366630554,0.7395944595336914,0.7395945191383362
1354,1354,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","You can implement a stack using arrays or and linked list. By the use of pointers, that point element(node) to the next element in the stack. By the use of pointers, the stack becomes a linked list.",1.0,4.0,2.5,0.7400277853012085,0.7400277853012085,0.6952280402183533,0.6952279806137085
1355,1355,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",Elements are only inserted and removed from the head of the list.  There is no header node or current pointer.,5.0,4.0,4.5,0.8326641917228699,0.8326642513275146,0.7534494400024414,0.7534494996070862
1356,1356,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",use a linked list and keep track of a pointer that points to the first item,4.0,4.0,4.0,0.7006793618202211,0.7006794214248657,0.7143426537513733,0.7143427133560181
1357,1357,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","A singly linked list can already be easily used for LIFO data storage. Members of a stack can simply be pushed and popped from a list, the first item in will be the last out.",5.0,4.0,4.5,0.7949965596199036,0.7949966192245483,0.7439287900924683,0.7439289093017578
1358,1358,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",using pointer,0.0,3.0,1.5,0.4774160385131836,0.4774159789085388,0.46033918857574463,0.460339218378067
1359,1359,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",the top is the first pointer.,3.0,3.0,3.0,0.6880829930305481,0.6880831122398376,0.5875862240791321,0.5875861644744873
1360,1360,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","Keep a pointer pointing to the last element entered at the front of  the array and move the pointer ""back"" when you delete an element.",2.0,3.0,2.5,0.7700986266136169,0.7700985670089722,0.8047031760215759,0.8047031760215759
1361,1361,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","using linked list, you are pushing the node that contains each int to the stack until you get to the end of your linked list",1.0,4.0,2.5,0.7318288087844849,0.7318288087844849,0.737698495388031,0.7376985549926758
1362,1362,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","have a linked list, and for each push, add an item onto beginning of the list, and for each pop remove the first element in the list.",5.0,5.0,5.0,0.8624221682548523,0.8624222278594971,0.8663321137428284,0.8663321733474731
1363,1363,8.4,How can you implement a stack with a list?,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","Using a linked list is one way to implement a stack so that it can handle essentially any number of elements. It is usually convenient to put a data structure in its own module, thus, you'll want to create files stack.h and a stack.c",0.0,4.0,2.0,0.7295157313346863,0.7295156121253967,0.673255443572998,0.6732553839683533
1364,1364,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",They are converted to post fix expressions.  It still follow the order of precedence for the operators.,5.0,5.0,5.0,0.7804285287857056,0.7804285883903503,0.7416716814041138,0.7416717410087585
1365,1365,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",They are first converted to postfix expressions and then evaluated.,5.0,5.0,5.0,0.6517272591590881,0.6517272591590881,0.7604994177818298,0.7604994177818298
1366,1366,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.","Computers cannot evaulate infix expressions, it must first convert infix to postfix expression then it can evaluate.",5.0,5.0,5.0,0.7721781134605408,0.7721781730651855,0.7380973100662231,0.7380972504615784
1367,1367,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",By using parentheses to have order in the expression.,2.0,3.0,2.5,0.7050401568412781,0.7050400972366333,0.6755422353744507,0.6755422353744507
1368,1368,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",In postfix notation.,3.0,5.0,4.0,0.6604018211364746,0.6604017615318298,0.7395840287208557,0.7395840287208557
1369,1369,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",computers usually convert infix expressions to post fix expression and evaluate them using a stack.,5.0,5.0,5.0,0.7833329439163208,0.7833329439163208,0.728823721408844,0.7288235425949097
1370,1370,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",they are converted to postfix,5.0,5.0,5.0,0.481101006269455,0.4811009764671326,0.632856011390686,0.632856011390686
1371,1371,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",Infix expressions are interpreted as postfix expressions by implementing stacks.,5.0,5.0,5.0,0.6880487203598022,0.688048779964447,0.7615407705307007,0.7615407109260559
1372,1372,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",They are first converted into an equivalent postfix expression so it can be read by the computer.,5.0,5.0,5.0,0.6839005947113037,0.6839005947113037,0.7740116715431213,0.7740116715431213
1373,1373,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.","The computer translates the infix expression to a postfix expression, then solves.",5.0,5.0,5.0,0.7207538485527039,0.7207538485527039,0.7746495604515076,0.7746496200561523
1374,1374,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",in postfix format,3.0,5.0,4.0,0.4434223473072052,0.4434223473072052,0.6374099254608154,0.6374099850654602
1375,1375,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",they use parenthisis and a stack to determine which evaluations need to be made first,3.0,3.0,3.0,0.5763465166091919,0.5763465166091919,0.49159538745880127,0.4915953576564789
1376,1376,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",By throwing variables into a postfix expression and operands onto a parentheses regulated stack until end parentheses and enough variables to operate on are encountered.,4.0,5.0,4.5,0.6888208389282227,0.6888208985328674,0.6431062817573547,0.6431064009666443
1377,1377,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",by being passed to the function by a leading term,0.0,3.0,1.5,0.4834306240081787,0.4834306836128235,0.5330299735069275,0.5330300331115723
1378,1378,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.","i have an hard time explaining this so i'll show how infix is evaluated instead. Start with an infix expression, like,  (((5+2)*5)+(400/(2+3))), and  push items until you get a "")"" and once that happens, perform the operations until you reach an ""(""... with that complete, you will now have  ((7*5)+(400/(2+3))) as now the expression that will be evaluated... perform last step again... (35+(400/(2+3))) is now the stack.... repeat agian... (35+(400/5)) is now the stack after that.... repeat... (35+80) is now the stack, repeat again... 115 is now the stack, and is returned.",1.0,4.0,2.5,0.6124951839447021,0.6124952435493469,0.6377605199813843,0.637760579586029
1379,1379,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",The infix expression is converted to postfix form,5.0,5.0,5.0,0.6000100374221802,0.6000100374221802,0.6929108500480652,0.69291090965271
1380,1380,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",by converting them to postfix expressions and putting the operations in a stack,5.0,5.0,5.0,0.5556549429893494,0.5556549429893494,0.6882767677307129,0.6882767081260681
1381,1381,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",The computer converts the infix expression to postfix form. Then evaluates the postfix expression.,5.0,5.0,5.0,0.8805462121963501,0.8805461525917053,0.8489115834236145,0.8489116430282593
1382,1382,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",infix expressions are converted to postfix expressions before they can be evaluated by a computer.  Operands stay in the same order.  Operators always follow the operands.,5.0,5.0,5.0,0.7639914751052856,0.7639915347099304,0.7263654470443726,0.7263653874397278
1383,1383,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",infix expressions are pointers evaluated by reference to the memory location,0.0,3.0,1.5,0.5257200598716736,0.5257200598716736,0.4752635657787323,0.4752635955810547
1384,1384,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",computers convert infix expressions to postfix form before evaluation,5.0,5.0,5.0,0.5345788598060608,0.5345788598060608,0.6798020005226135,0.6798020005226135
1385,1385,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",convert infix expressions to postfix expression and evaluate the postfix expression,5.0,5.0,5.0,0.6066898107528687,0.6066898107528687,0.6816616058349609,0.6816615462303162
1386,1386,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.","When an operand is entered, the computer Pushes it onto a stack When an operator is entered, the computer Applies it to the top two operands of the stack Pops the operands from the stack Pushes the result of the operation onto the stack",4.0,4.0,4.0,0.6523185968399048,0.6523185968399048,0.5890613198280334,0.5890613198280334
1387,1387,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",Computers convert an infix expression into a postfix expression. They then push the numbers onto a stack and pop them out as they are needed.,5.0,5.0,5.0,0.7192926406860352,0.7192927002906799,0.7587023973464966,0.7587023973464966
1388,1388,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.","infix expressions are converted to postfix, (i.e. 3+2 is changed to 32+)",5.0,5.0,5.0,0.707416296005249,0.7074162364006042,0.7487457990646362,0.7487457990646362
1389,1389,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.","they are transformed into post-fix expressions, then evaluated with a stack.",5.0,5.0,5.0,0.7587936520576477,0.7587936520576477,0.8235657811164856,0.8235657811164856
1390,1390,8.6,How are infix expressions evaluated by computers?,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.","Writing arithmetic expressions is called infix notation.  This is because a binary operator (like '+') is written in between its two operands (as in ""a + b"").  There are two alternative forms of notation used in certain situations.  One is prefix notation, in which an operator is written before its operands.  In prefix notation, the sum of a and b is written ""+ a b"".  This is the notation used to write function calls in mathematics and computer science.  It is also used in the Lisp and Scheme programming languages.  In postfix notation, an operator is written after its operands.  The sum of a and b is written ""a b +"".  (You may have seen this as ""reverse Polish notation"".)  Postfix notation forms the conceptual basis for the way that arithmetic expressions are evaluated by a computer.  One important characteristic of both postfix and prefix notations is that they are unambiguous; no parentheses are needed to indicate the order of operations. ",5.0,5.0,5.0,0.7152888178825378,0.7152889966964722,0.6864981055259705,0.6864980459213257
1391,1391,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",isEmptry()//determines if the stack is full or not pop()//to remove the top element if it is not the on you are looking for search()//you compare each element of the stack to the data you are looking for.,2.0,4.0,3.0,0.7239127159118652,0.7239126563072205,0.6800534129142761,0.6800533533096313
1392,1392,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",You would have to keep using peek or getTop to see what the top element is then popping the top element until peek or getTop provides the element you are looking for.,2.0,4.0,3.0,0.7581803202629089,0.7581803202629089,0.600163996219635,0.600163996219635
1393,1393,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",Push adds a given node to the top of the stack leaving previous nodes below. Pop removes and returns the current top node of the stack.,2.0,4.0,3.0,0.7534134984016418,0.7534134984016418,0.6938685774803162,0.6938685178756714
1394,1394,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","Using linked lists and stacks, you would need a temp stack to retain the values. Then you would use the Pop( ) function to pop off each element and then compare it. If its not the element your looking for, Push ( ) it to the temp stack. Repeat until the element is found. When you find it,  Pop ( ) off the temp stack back onto the regular stack to have a complete stack again.",5.0,5.0,5.0,0.7805283665657043,0.7805285453796387,0.6882520318031311,0.6882519125938416
1395,1395,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","Pop each item off the top until you find what you are looking for. If the stack ends up empty and you never found the item, then it does not exist in the stack. It may also be necessary to save the popped values in case you want to recreate the stack.",5.0,5.0,5.0,0.7677239775657654,0.7677239775657654,0.7886514663696289,0.7886514067649841
1396,1396,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","if the stack is implemented using an array you could simply search the array for the item. If the stack is implemented using a linked list you would have to pop the values off of the stack until either the value is found or the stack is empty, you would then have to have the items put back into the list.",4.0,5.0,4.5,0.7329462170600891,0.7329462170600891,0.7497442960739136,0.7497442960739136
1397,1397,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","You need to pop each item on the stack and compare the item.  Once the item is found, no more items need to be removed.",3.0,4.0,3.5,0.7506304979324341,0.7506304979324341,0.7631626725196838,0.7631626129150391
1398,1398,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","Pop an element from one stack, check to see if it is the desired element, if not push it onto another stack. When finished, pop the items from the second stack and push them back onto the first stack (this will ensure the order of the elements is maintained).",5.0,5.0,5.0,0.7276664972305298,0.7276664972305298,0.7533504962921143,0.753350555896759
1399,1399,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",Basically pop the stack until you find the given element.,3.0,4.0,3.5,0.6484472155570984,0.6484472155570984,0.65366131067276,0.6536612510681152
1400,1400,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","Iterate through the stack, checking the number against the current element.",0.0,3.0,1.5,0.6500808596611023,0.6500808000564575,0.6679233908653259,0.6679233312606812
1401,1401,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",pop and push,2.0,4.0,3.0,0.8534134030342102,0.8534132838249207,0.8194524049758911,0.8194525241851807
1402,1402,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",pop all elements off stack until you find that element and then push the popped elements back on the stack,5.0,5.0,5.0,0.6590354442596436,0.6590354442596436,0.7406120896339417,0.7406120896339417
1403,1403,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","Keep popping nodes and storing them in an alternate stack until the given element is found, then pop the given element and push the previously popped nodes back onto the stack.",5.0,5.0,5.0,0.7994089722633362,0.7994089722633362,0.8168669939041138,0.8168670535087585
1404,1404,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",either traverse the entire list and pop the given part or create a pointer system that automatically points to it.,2.0,4.0,3.0,0.7336592674255371,0.7336592674255371,0.7482414841651917,0.7482414841651917
1405,1405,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","Depends on the type of stack, on a true stack you will haft to pop all of the elements of the stack until you find the element you want, and then after that you will need to push all the elements that where removed back in to the stack in the order that they where removed.  With a Java style stack, where there is a peek function, it will return the element you wanted instead of requiring you to perform all the excessive actions that are required from a true stack.",5.0,5.0,5.0,0.8062218427658081,0.8062217831611633,0.7639850378036499,0.7639850378036499
1406,1406,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",if top item != given element pop the stack. Repeat until item is found or stack is empty,3.0,4.0,3.5,0.7151315808296204,0.7151315212249756,0.7007777094841003,0.7007777094841003
1407,1407,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",could traverse through the list/array to find the element.,1.0,3.0,2.0,0.567712664604187,0.567712664604187,0.612288236618042,0.6122882962226868
1408,1408,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",you need the pop opertation to go throught the stack and find the element.,3.0,4.0,3.5,0.605678379535675,0.605678379535675,0.6496989130973816,0.6496988534927368
1409,1409,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","createStack, push, isEmpty, pop, and a boolean return value.",2.0,4.0,3.0,0.581340491771698,0.581340491771698,0.6982190012931824,0.6982190608978271
1410,1410,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",you would have to traverse the stack popping each element to search it,3.0,4.0,3.5,0.5313515067100525,0.5313515663146973,0.5440434813499451,0.5440434813499451
1411,1411,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",Pop each element off the stack (and into another stack for storage) until the desired element is found.,4.0,4.0,4.0,0.797113299369812,0.7971133589744568,0.7651214599609375,0.7651214599609375
1412,1412,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",pop operation,1.0,4.0,2.5,0.4153761863708496,0.4153762459754944,0.4969480335712433,0.4969480633735657
1413,1413,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",to pop elements then push them back,4.0,5.0,4.5,0.6003597974777222,0.6003597974777222,0.7040007710456848,0.70400071144104
1414,1414,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",A function to keep track of the elements popped and a function to put  the popped elements backinto the function.,4.0,5.0,4.5,0.811410129070282,0.811410129070282,0.7494761347770691,0.7494760751724243
1415,1415,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",you would pop each element and compare it to what you are looking for and then push it back on the stack so that it is not lost,4.0,5.0,4.5,0.6850007176399231,0.6850006580352783,0.632209837436676,0.6322098970413208
1416,1416,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",you would need to perform a search through the list of elements (i dont really understand what this question is asking....its not very clear?),0.0,3.0,1.5,0.6649736166000366,0.6649734973907471,0.6303211450576782,0.6303210854530334
1417,1417,8.7,What operations would you need to perform to find a given element on a stack?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",StackPush() StackPop() StackIsEmpty(),2.0,4.0,3.0,0.517283022403717,0.517283022403717,0.5813679695129395,0.5813679099082947
1418,1418,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",A data structure in c++ which is a collection of data that is kept in order.  First in first out.,5.0,5.0,5.0,0.7714043259620667,0.7714042663574219,0.7673624753952026,0.7673624157905579
1419,1419,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a queue is a list of objects in a particular order that is read one at a time starting at the first followed by the second and so on.,4.0,4.0,4.0,0.7526531815528871,0.7526531815528871,0.7037523984909058,0.703752338886261
1420,1420,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",A queue is an abstract data structure in which operations are performed at both ends giving the queue first in first out behavior.,5.0,5.0,5.0,0.7665201425552368,0.766520082950592,0.7463952898979187,0.7463953495025635
1421,1421,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","A queue stores a set of elements in a particular order.  Its principle of operation is FIFO(first in first out), which means the first element inserted is the first one to be removed.",5.0,5.0,5.0,0.8231431245803833,0.8231430649757385,0.81120365858078,0.8112037181854248
1422,1422,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",An ADT whose first inserted item is the first item removed. This uses the FIFO idea where items enter a queue at its back and leave at its front.,5.0,5.0,5.0,0.8406875133514404,0.8406874537467957,0.7642333507537842,0.764233410358429
1423,1423,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","Last in, last out architecture. It works the same way a line at the bank would work, the person that's been waiting the longest gets served first.",5.0,5.0,5.0,0.7417954802513123,0.7417953014373779,0.7449617981910706,0.7449617981910706
1424,1424,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a queue is a data structure that stores elements in a First in First out order.,5.0,5.0,5.0,0.7690353989601135,0.7690353989601135,0.7424567937850952,0.7424567937850952
1425,1425,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",A waiting list of items that operation in a FIFO (first in first out) order.,5.0,5.0,5.0,0.7537967562675476,0.7537966370582581,0.7975148558616638,0.7975148558616638
1426,1426,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","A queue is similar to an array, except that the data can only be accessed sequentially rather than at random. Unlike a stack, a queue follows FIFO. First in, First out.",5.0,5.0,5.0,0.7926027774810791,0.7926027178764343,0.7285810708999634,0.7285810112953186
1427,1427,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",is a particular kind of collection in which the entities in the collection are kept in order and the principal (or only) operations on the collection are the addition of entities to the rear terminal position and removal of entities from the front terminal position. First in First Out (FIFO Method).,5.0,5.0,5.0,0.7668677568435669,0.7668676972389221,0.7904327511787415,0.7904327511787415
1428,1428,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",Like a linked list but first in first out,4.0,5.0,4.5,0.5394344925880432,0.5394344329833984,0.47981932759284973,0.4798193573951721
1429,1429,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",A queue is a FIFO data structure.,5.0,5.0,5.0,0.6494026184082031,0.6494026184082031,0.5763600468635559,0.5763601064682007
1430,1430,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",A queue is a first in first out data structure.,5.0,5.0,5.0,0.7095760703086853,0.7095760703086853,0.684465229511261,0.6844651699066162
1431,1431,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","Its like a stack, but uses the linked list to stack a little differently. It's FIFO so the first thing enqueued is the first thing dequeued",5.0,5.0,5.0,0.7520758509635925,0.7520758509635925,0.6706619262695312,0.6706619262695312
1432,1432,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","A first in, first out Abstract Data type that can be used to store values.",5.0,5.0,5.0,0.7652431726455688,0.7652431726455688,0.7763043642044067,0.7763044238090515
1433,1433,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","Stores a set of elements in a particular order with a First In, First Out principle",5.0,5.0,5.0,0.7508002519607544,0.7508001923561096,0.7328447103500366,0.7328447699546814
1434,1434,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",object that stores elements in order that follows first in first out.  the first element added is the first one to come off.,5.0,5.0,5.0,0.7939934134483337,0.7939933538436891,0.7838906049728394,0.7838904857635498
1435,1435,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","A quese is an list that stores a set of elements in a particular order. It has Stack principle, but in this case, its ""First In, First Out"". The first element inserted is the first element to be removed.",5.0,5.0,5.0,0.8748868107795715,0.874886691570282,0.797152042388916,0.797152042388916
1436,1436,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","a finite ordered list with zero or more elements, based upon First In First Out",5.0,5.0,5.0,0.7531391978263855,0.753139317035675,0.7165176272392273,0.7165176272392273
1437,1437,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a data structure that performs operations in the order of first in first out FIFO,5.0,5.0,5.0,0.7153747677803041,0.7153747081756592,0.640292763710022,0.6402928829193115
1438,1438,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","A Queue is a ""first in first out"" data structure, such that the first element added is also the first removed.",5.0,5.0,5.0,0.8218957781791687,0.8218956589698792,0.8137053847312927,0.8137053847312927
1439,1439,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","Queue is a buffer, which store element in a particular order",2.0,5.0,3.5,0.641071081161499,0.6410711407661438,0.7026501297950745,0.7026500701904297
1440,1440,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","stores a set of elements where the first element in, is the first element to be removed",5.0,5.0,5.0,0.7391585111618042,0.7391585111618042,0.7702791690826416,0.7702791690826416
1441,1441,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",A data structure that removes nodes from the head and adds nodes at the tail.,5.0,5.0,5.0,0.7540768980979919,0.7540768980979919,0.7022185921669006,0.7022185921669006
1442,1442,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a queue is a list of things that follows the first in first out behavior,5.0,5.0,5.0,0.5890346765518188,0.5890345573425293,0.6410871148109436,0.6410871148109436
1443,1443,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","a queue is a storage container that holds its objects in a first in, first out priority",5.0,5.0,5.0,0.6168047189712524,0.6168046593666077,0.7179051637649536,0.7179051637649536
1444,1444,9.1,What is a queue?,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","The queue is another data structure. A physical analogy for a queue is a line at a bank. When you go to the bank, customers go to the rear (end) of the line and customers come off of the line (i.e., are serviced) from the front of the line.",5.0,5.0,5.0,0.7833960056304932,0.7833958864212036,0.7634186148643494,0.7634186744689941
1445,1445,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue which adds data to the queue and dequeue which deletes data from the queue,5.0,5.0,5.0,0.7643212080001831,0.7643211483955383,0.7622564435005188,0.7622564435005188
1446,1446,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"enqueue , which inserts a specified element at the head of the specified queue, and dequeue , which removes the specified element from the queue.",5.0,5.0,5.0,0.6294686198234558,0.629468560218811,0.7126509547233582,0.7126509547233582
1447,1447,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,The two main functions are enqueue which inserts an item at the back of the queue and dequeue which removes an item from the front of the queue.,5.0,5.0,5.0,0.6130210161209106,0.6130210161209106,0.7165536284446716,0.7165536284446716
1448,1448,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,The two main functions are enqueue and dequeue.,5.0,5.0,5.0,0.7378078103065491,0.7378076910972595,0.8661608695983887,0.8661609888076782
1449,1449,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,Enqueue and Dequeue,5.0,5.0,5.0,0.8699830770492554,0.8699830770492554,0.9079495668411255,0.9079497456550598
1450,1450,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,Enqueue and Dequeue,5.0,5.0,5.0,0.8699830770492554,0.8699830770492554,0.9079495668411255,0.9079497456550598
1451,1451,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue - insert into queue dequeue - remove element,5.0,5.0,5.0,0.6925279498100281,0.6925278902053833,0.807362973690033,0.8073628544807434
1452,1452,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"Remove the item added first, add items to the back.",5.0,5.0,5.0,0.4158855974674225,0.4158856272697449,0.44749873876571655,0.44749876856803894
1453,1453,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,The two main functions of a queue are enqueue and dequeue.,5.0,5.0,5.0,0.7378078103065491,0.7378076910972595,0.8661608695983887,0.8661609888076782
1454,1454,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue.,5.0,5.0,5.0,0.818583071231842,0.8185829520225525,0.9424366354942322,0.9424365758895874
1455,1455,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1456,1456,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,Enqueue and Dequeue,5.0,5.0,5.0,0.8699830770492554,0.8699830770492554,0.9079495668411255,0.9079497456550598
1457,1457,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1458,1458,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1459,1459,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"enque ( Data ),  Deque ( )",5.0,5.0,5.0,0.5447463393211365,0.5447463393211365,0.6303333640098572,0.6303334832191467
1460,1460,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1461,1461,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1462,1462,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"The two functions are, Enqueue and Dequeue",5.0,5.0,5.0,0.7857686877250671,0.7857687473297119,0.8533028960227966,0.8533029556274414
1463,1463,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"enqueue, dequeue",5.0,5.0,5.0,0.8317807912826538,0.831780731678009,0.9235120415687561,0.9235121607780457
1464,1464,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"enqueue, that adds an item to the queue dequeue, that takes the first item out of the queue",5.0,5.0,5.0,0.6925544738769531,0.6925544738769531,0.7486793994903564,0.7486793398857117
1465,1465,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"Enqueue and dequeue, which add and remove elements from the queue",5.0,5.0,5.0,0.7166543006896973,0.7166543006896973,0.8390336036682129,0.8390335440635681
1466,1466,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,Enqueue and Dequeue,5.0,5.0,5.0,0.8699830770492554,0.8699830770492554,0.9079495668411255,0.9079497456550598
1467,1467,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,dequeue and enqueue,5.0,5.0,5.0,0.85456782579422,0.85456782579422,0.963962733745575,0.963962733745575
1468,1468,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1469,1469,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1470,1470,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue dequeue,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1471,1471,9.2,What are the two main functions defined by a queue?,enqueue and dequeue,rear and front,2.0,3.0,2.5,0.13798682391643524,0.13798683881759646,0.24199402332305908,0.2419940084218979
1472,1472,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",Make use of a front pointer and a tail pointer.  When the tail pointer reaches the end of an array it gets reset to the front of the array.  If the two pointers are equal then the queue is either full or just has one element.,5.0,4.0,4.5,0.778644859790802,0.7786447405815125,0.817927896976471,0.8179278373718262
1473,1473,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",you create an array with the max size of your queue and adjust the items to make them follow FIFO procedure.,2.0,4.0,3.0,0.666126549243927,0.6661264300346375,0.6456469297409058,0.645646870136261
1474,1474,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",By implementing an array and only adding items to the end of the array and only removing items from the beginning of the array.,2.0,4.0,3.0,0.6451987028121948,0.6451987028121948,0.681464433670044,0.681464433670044
1475,1475,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","For applications in which a fixed-sized queue does not present a problem, you can use an array to represent a queue. ",1.0,4.0,2.5,0.6094591617584229,0.6094591617584229,0.6440780162811279,0.6440780758857727
1476,1476,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",Keep track of the front and the back of the array as you increase and decrease the elements inside the array.,4.0,4.0,4.0,0.6478332877159119,0.6478334069252014,0.7535874247550964,0.7535873651504517
1477,1477,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","Declare the size of an array, and have special conditional statements (pointers) to make sure you re-use ALL of the array. Say, you have an array of 20 elements, you load up 18, then dequeue 3, when you enqueue 4 more elements, you want to loop back to index 0 and continue from there... this process saves resources.",5.0,4.0,4.5,0.7200064659118652,0.7200064063072205,0.7562739849090576,0.7562739253044128
1478,1478,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",you could use the first element of the list as the remove point and insert at the end f you do this you would have to shift the elements down each time you remove an item unless you make the array circular.,3.0,5.0,4.0,0.744277834892273,0.744277834892273,0.6900344491004944,0.6900344491004944
1479,1479,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",Utilizing indexes for the front and the back.  Front is 0 and as you add items the back index is incremented.,4.0,4.0,4.0,0.7104938626289368,0.7104939222335815,0.7665234804153442,0.7665234804153442
1480,1480,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","Declare two variables, “front” and “rear”, to be used to denote which elements in the array can be accessed. Increment “rear” whenever data is enqueued to the end and increment “front” whenever data is dequeued.",5.0,4.0,4.5,0.7147588729858398,0.7147588133811951,0.7718120217323303,0.7718119621276855
1481,1481,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",It is an array of fixed size. A queue of maximum N elements.,1.0,4.0,2.5,0.5912128686904907,0.5912128686904907,0.6653167605400085,0.665316641330719
1482,1482,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","make an array of a size, and add on to the front and delete from the back, keep track of the two so that you know when it is full and where to add or subtract from",4.0,4.0,4.0,0.6582388281822205,0.6582388281822205,0.7155170440673828,0.7155170440673828
1483,1483,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",By using the beginning of the array as the removal point of the queue (or beginning of the queue) and the ith element as the end of the queue.,3.0,4.0,3.5,0.7453300356864929,0.7453300356864929,0.7460281848907471,0.7460281848907471
1484,1484,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","add in data from the first element to the last, take out data from the first element to the last.",2.0,4.0,3.0,0.6986533999443054,0.6986532807350159,0.6721504330635071,0.6721504330635071
1485,1485,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",you can take the array and put it in a queue stack or you can just traverse the list and keep track of top and bottom,3.0,4.0,3.5,0.5105933547019958,0.5105933547019958,0.6337710022926331,0.6337710618972778
1486,1486,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","create a fixed array size, with with 2 integers to point to the beginning and the end of the que, and special cases to know when the que is empty or full.",4.0,4.0,4.0,0.7143589854240417,0.7143589854240417,0.7205333709716797,0.7205333113670349
1487,1487,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",Keep track of the front and rear indexes. Either: 1)Dequeue items by shifting the array left 2)Use wrapped configuration,4.0,4.0,4.0,0.7085934281349182,0.708593487739563,0.7575357556343079,0.7575356960296631
1488,1488,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","add items into a fixed size array, pull the items out by calling on them with the starting index, increase starting index so when it calls again its now the next index element in the array.",3.0,4.0,3.5,0.7275224328041077,0.7275224328041077,0.7292294502258301,0.7292294502258301
1489,1489,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","To use and array to implement a Queue, element or item 0, should be the top element in the array. Every time an element is inserted, all the items in the array are pushed back one space. The top element is always removed first.",2.0,4.0,3.0,0.7563992738723755,0.7563992738723755,0.7560219168663025,0.7560218572616577
1490,1490,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",fixed size array with max N elements.  Need to keep track of front and rear of array.,4.0,4.0,4.0,0.6985123753547668,0.6985122561454773,0.7729400396347046,0.7729400396347046
1491,1491,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","by keeping track of a front item and a rear item, or with a circular array that uses the modulo function",5.0,5.0,5.0,0.6980985999107361,0.6980985403060913,0.7525254487991333,0.7525255084037781
1492,1492,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","Using an array for a queue, the size of the array allocated limits the size of the queue. An array based queue class must keep track of both the front and back of the queue, which may need to wrap around the array.",5.0,5.0,5.0,0.7638759016990662,0.7638758420944214,0.8102328777313232,0.810232937335968
1493,1493,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","A pointer based implementation of a queue could use a linear linked list with two external pointers, one to the front and one to the back",0.0,4.0,2.0,0.6600574254989624,0.6600573062896729,0.6717938780784607,0.6717938780784607
1494,1494,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",remove the element then shift the elements one space back,2.0,4.0,3.0,0.5770978331565857,0.5770977735519409,0.6145561933517456,0.6145561933517456
1495,1495,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",By having the head pointer point to the first or least current data entered and having the tail point to the most current data entered. A method must be created so that the tail pointer doesn't leave the array.,5.0,5.0,5.0,0.689350426197052,0.6893503665924072,0.7416309714317322,0.7416309714317322
1496,1496,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",an array is a type of queue with a fixed length,0.0,3.0,1.5,0.4611181020736694,0.4611180722713471,0.411939412355423,0.41193944215774536
1497,1497,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","your storage class has an array, and you keep track of the index of the first and last item in the array, and wrap around when end of the array is full",5.0,5.0,5.0,0.6782586574554443,0.6782586574554443,0.7708427906036377,0.7708427906036377
1498,1498,9.3,How can you implement a queue with an array?,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",Boolean isFullQ(queue) ::= rear == MAX_QUEUE_SIZE-1,5.0,5.0,5.0,0.5360255241394043,0.5360255837440491,0.5947065949440002,0.5947065353393555
1499,1499,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",A list can have unlimited elements in it.  You can push a node onto the end of the list and pop the one in the front.,5.0,5.0,5.0,0.6256757378578186,0.6256757378578186,0.6604578495025635,0.6604577898979187
1500,1500,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",theoretically you could do it two ways one of which uses more processing power and memory no larger than the queue is ever at when full and the other which uses almost infinite memory. The more practical method would be two place the items in an array and remove the item in position one of the array after which you can shift the array and add another element if required. The other option which can use infinite memory when used for long term queues such as job scheduling that goes nonstop for extended periods. that is to implement an array and add the items read item one raise your counter value to two ecetera and continue adding more elements to the array. the downside to this method is after you use element one it is still in memory. or im crazy who knows,0.0,4.0,2.0,0.6617324352264404,0.6617323160171509,0.6215852499008179,0.6215853095054626
1501,1501,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","By implementing a list in which a tail pointer points to the item most recently inserted onto the back of the list and a head pointer which points to the item least recently inserted onto the list. Also, items can only be removed from the front of the list and can only be added to the back of the list.",5.0,5.0,5.0,0.7374963164329529,0.7374964356422424,0.7269497513771057,0.7269496321678162
1502,1502,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",You can use list to represent the items in a queue.,0.0,3.0,1.5,0.4512676596641541,0.4512676596641541,0.5152543783187866,0.5152544379234314
1503,1503,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",Have a pointer to the last element in the list and then use enqueue to insert items there. Link the first and last elements together to dequeue the list.,3.0,4.0,3.5,0.7714831829071045,0.7714831829071045,0.7426062822341919,0.7426062822341919
1504,1504,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",Enqueue to the end of the linked list... dequeue items from the beginning (head) of the list.,5.0,5.0,5.0,0.7806771993637085,0.7806771397590637,0.7919780015945435,0.7919779419898987
1505,1505,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",you use the first element in the list as the remove point for the queue and insert items at the end of the list.,5.0,5.0,5.0,0.6440607905387878,0.6440608501434326,0.6125293970108032,0.6125292778015137
1506,1506,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","Utilizing a front pointer and a back pointer.  The front poiner and back pointer points to the first item into the queue.  As you add items, the front remains the same but the back poiner 'next' points to the new item and the new item is assigned to become the 'new' back pointer.",5.0,4.0,4.5,0.7297248244285583,0.7297248840332031,0.7384049892425537,0.7384049892425537
1507,1507,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",Implement a linked list that only allows nodes to be added to the tail and can only be retrieved from the head.,5.0,4.0,4.5,0.5822812914848328,0.582281231880188,0.6391682624816895,0.6391682624816895
1508,1508,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",Check if list is empty and add elements to the list.,1.0,4.0,2.5,0.5197486281394958,0.5197486281394958,0.5179157257080078,0.5179156064987183
1509,1509,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","make a linked list and add on to the front and delete from the back, keep track of both to do so.",5.0,4.0,4.5,0.6821090579032898,0.682108998298645,0.690879225730896,0.690879225730896
1510,1510,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",by making the head of the list the beginning of the queue and the last listed item the insertion point of the queue,5.0,4.0,4.5,0.5581689476966858,0.558168888092041,0.5819953083992004,0.5819953083992004
1511,1511,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",throw in data at the head and take it out at the tail,4.0,5.0,4.5,0.4335538148880005,0.4335538744926453,0.5303115844726562,0.5303115844726562
1512,1512,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","You create a list of nodes that had a head and a top pointer, and the functions are basically the same substituting pop and push with enqueue and dequeue",2.0,4.0,3.0,0.6671062111854553,0.6671062707901001,0.7352443933486938,0.7352444529533386
1513,1513,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","fairly easy... singly linked list with a pointer to the head and tail of hte list.  deque first item in que, create temp pointer to next element, delete head, and then make head the temporary pointer.  enque new item, use pointer to end of list, add a new item to the next item of the tail, and make the tail the next item of the current tail.",5.0,4.0,4.5,0.7613568902015686,0.7613568902015686,0.8163185119628906,0.8163184523582458
1514,1514,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","Use a linked list with 2 pointers, one to the front and one to the back. As long as back != front, the queue is not empty.",5.0,4.0,4.5,0.7223215699195862,0.7223215699195862,0.7237098217010498,0.7237098217010498
1515,1515,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","create a node with the input data, continue to add to the list.  when dequeueing - get the first elements data and set the next element in the list as the new first element",4.0,4.0,4.0,0.7001112699508667,0.7001112699508667,0.7099136114120483,0.7099135518074036
1516,1516,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","A linked list with Stack principles. The Queue's top element is the element that is always being removed first. Must use nodes to contain each element, with a pointer to the top element, which also could  be called the head pointer.",2.0,4.0,3.0,0.6744391322135925,0.6744390726089478,0.7186411023139954,0.7186412215232849
1517,1517,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",linked list checking for front and rear.  Keep enqueueing elements until front equal to rear -1.,3.0,4.0,3.5,0.7631290555000305,0.763128936290741,0.7636597156524658,0.7636595964431763
1518,1518,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","a queue can be implemented in a list by keeping track of two pointers, a head and a tail",5.0,4.0,4.5,0.588222324848175,0.588222324848175,0.6574743390083313,0.6574742794036865
1519,1519,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","each element of a queue can be allocated in the nodes of an linked list. New elements should be added to the head of the list, with each dequeued element coming off the tail.",5.0,5.0,5.0,0.7281423807144165,0.7281423211097717,0.7636590003967285,0.7636590003967285
1520,1520,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","Implement the operation dequeue() as the list operation remove(1) and the operation getFront(queueFront) as the list operation retrieve(1, queueFront)",3.0,5.0,4.0,0.7186470031738281,0.7186470031738281,0.7801364660263062,0.7801364064216614
1521,1521,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",remove the first element and reference the second element as the new head of the list.,3.0,4.0,3.5,0.6333138346672058,0.6333138346672058,0.6455180644989014,0.6455180644989014
1522,1522,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",By creating and adding nodes at the end of the list and removing the nodes from the beginning of the list.,5.0,5.0,5.0,0.6643818616867065,0.6643818020820618,0.6636702418327332,0.6636701822280884
1523,1523,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",you would have your list and add a back pointer so that your program knows where the end is,4.0,4.0,4.0,0.4435892105102539,0.4435892105102539,0.47900083661079407,0.47900086641311646
1524,1524,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","your queue storage class has a list, and for enqueue, you add the item to the end of the list, and for dequeue you return the first item in the list",4.0,5.0,4.5,0.7347491979598999,0.7347491383552551,0.8050748109817505,0.8050747513771057
1525,1525,9.4,How can you implement a queue with a list?,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",temp-&gt;next= NULL;       if (front)  { (rear) -&gt; next= temp;}       else front = temp;       rear = temp;   },3.0,4.0,3.5,0.6943231821060181,0.6943231225013733,0.7293217182159424,0.7293217778205872
1526,1526,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,Push.,5.0,5.0,5.0,0.5423992276191711,0.5423992276191711,0.5872302651405334,0.5872302651405334
1527,1527,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,"push, which inserts something at the top of the stack.",5.0,5.0,5.0,0.3782834708690643,0.3782834708690643,0.5256986618041992,0.5256986021995544
1528,1528,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,The stack operation corresponding to enqueue in queues is the push operation.,5.0,5.0,5.0,0.4655258357524872,0.4655257761478424,0.5002705454826355,0.5002706050872803
1529,1529,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,"Push in a stack operation corresponds to the enqueue operation in queues.  These operations insert a new item into one end(the top and back, respectively) of the ADT.",5.0,5.0,5.0,0.3671447038650513,0.3671447336673737,0.42098814249038696,0.4209880232810974
1530,1530,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,The stack operation is almost the opposite of the enqueue operation.,0.0,5.0,2.5,0.302206814289093,0.302206814289093,0.3391178548336029,0.3391178548336029
1531,1531,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push = enqueue pop = dequeue,5.0,4.0,4.5,0.4063302576541901,0.4063302576541901,0.5242502689361572,0.5242502689361572
1532,1532,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1533,1533,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,Not sure what this question means.  You can use the stack 'push' operation and the enqueue operation to detect palindromes.,5.0,5.0,5.0,0.3469798564910889,0.34697988629341125,0.38143008947372437,0.38143008947372437
1534,1534,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,"Enqueue is the queue equivalent of push, and dequeue is the queue equivalent to pop.",5.0,5.0,5.0,0.3048803508281708,0.3048803806304932,0.4678095281124115,0.4678095281124115
1535,1535,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,Push operation.,5.0,5.0,5.0,0.5423992276191711,0.5423992276191711,0.5872302651405334,0.5872302651405334
1536,1536,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1537,1537,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1538,1538,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1539,1539,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1540,1540,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,"that would be the push operation, if it put the item at the end of the list.",5.0,5.0,5.0,0.37789031863212585,0.37789031863212585,0.5206476449966431,0.5206477046012878
1541,1541,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1542,1542,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1543,1543,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,the Push method in the stack operations.,5.0,5.0,5.0,0.449091762304306,0.4490917026996613,0.5342252850532532,0.5342252850532532
1544,1544,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1545,1545,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,enqueue corresponds with push dequeue corresponds with pop,5.0,4.0,4.5,0.4118533134460449,0.4118532836437225,0.45503419637680054,0.45503413677215576
1546,1546,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,"Push corresponds with enqueue, both very similarly place new elements into their stack or queue",5.0,5.0,5.0,0.3670347929000855,0.3670347929000855,0.5049178600311279,0.5049178600311279
1547,1547,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,FIFO: First in First out,0.0,3.0,1.5,0.2065449655056,0.2065449655056,0.331083208322525,0.331083208322525
1548,1548,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1549,1549,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,Push,5.0,5.0,5.0,0.8507925271987915,0.8507925271987915,0.8195775747299194,0.8195775747299194
1550,1550,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1551,1551,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1552,1552,9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1553,1553,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",A hierarchy of nodes that are sorted in a particular order.  Each node has a ancestor (except for the root) and children (except for the leaves).,3.0,5.0,4.0,0.8634766936302185,0.8634765744209291,0.8571274280548096,0.8571274280548096
1554,1554,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",A tree is a finite set of one or more nodes with a specially designated node called the root and the remaining nodes are partitioned into disjoint sets where each of these sets is a tree.,5.0,5.0,5.0,0.8724668025970459,0.8724668025970459,0.888907253742218,0.8889073133468628
1555,1555,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",A tree is a finite set of one or more nodes such that: there is a specially designated node called the root.,4.0,5.0,4.5,0.8291705846786499,0.8291704058647156,0.854221761226654,0.8542217016220093
1556,1556,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","A connected, undirected graph without cycles.",4.0,5.0,4.5,0.7117211222648621,0.7117211222648621,0.7386601567268372,0.7386600971221924
1557,1557,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","A data structure that contains a root, internal nodes and external nodes. Each node references another node by means of pointers (pass-by-reference). The root is the ""base"" of the tree, it has no parents. A ""leaf"" is a node at the end of the tree which points to NULL.",5.0,5.0,5.0,0.8574402928352356,0.8574402928352356,0.8464705944061279,0.8464704751968384
1558,1558,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",a tree is a series of nodes where each node has links to other nodes.,1.0,5.0,3.0,0.7701172232627869,0.7701172828674316,0.775718629360199,0.775718629360199
1559,1559,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","an infinite set of nodes that have a root and descendants, and each addition is a leaf.",2.0,5.0,3.5,0.8114409446716309,0.8114408254623413,0.8431260585784912,0.8431260585784912
1560,1560,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","A set of one or more nodes that are hierarchically organized, with one special “root” node.",3.0,5.0,4.0,0.8443176150321959,0.8443175554275513,0.887479841709137,0.887479841709137
1561,1561,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",A tree is a finite set of one or more nodes such that there is a specially designated node called the root.,2.0,5.0,3.5,0.8406755924224854,0.8406755328178406,0.8401790857315063,0.8401791453361511
1562,1562,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",one or more nodes in a hierarchy starting with the root and branching off like a tree to subtrees,5.0,5.0,5.0,0.7009590268135071,0.7009588479995728,0.7546641230583191,0.7546641826629639
1563,1563,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",A tree is a data structure where nodes are linked to each other in a hierarchical manner.,2.0,5.0,3.5,0.7659227252006531,0.7659227252006531,0.758054792881012,0.7580548524856567
1564,1564,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",a grouping of data in a parent to child structure,2.0,4.0,3.0,0.5423036217689514,0.5423035621643066,0.621943473815918,0.6219435334205627
1565,1565,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",It is a list of numbers in a list made by comparing values of nodes already in the tree and adding to the appropriate spot. Its a list made up of nodes with left and right pointers.,1.0,5.0,3.0,0.7874674797058105,0.7874674201011658,0.7911955118179321,0.7911953926086426
1566,1566,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","A tree is a branched data structure with nodes, and leaves... a special node called root has no parent node, but however like all other nodes can and does have 2 nodes that it links to, namely one on the right, and one on the left.",4.0,5.0,4.5,0.9025844931602478,0.902584433555603,0.890692412853241,0.890692412853241
1567,1567,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","It organizes data in a nonlinear, hierarchical form, where items can have more than one successor.  Partitioned into a root node and subsets are general subtrees of the root. ",5.0,5.0,5.0,0.8446395993232727,0.8446395397186279,0.8588059544563293,0.8588060140609741
1568,1568,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","A tree is a finite set of one or more nodes such that there is a specially designated node called the root. The remaining nodes are partitioned into n&gt;=0 disjoint sets T the n plus 1, where each element set is a tree.",5.0,5.0,5.0,0.8705600500106812,0.8705600500106812,0.8798927664756775,0.879892885684967
1569,1569,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",A finite set of nodes that starts with the root and terminates with leaves.,3.0,5.0,4.0,0.7699311375617981,0.7699310779571533,0.7817145586013794,0.7817146182060242
1570,1570,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","a set of data arranged with pointers. each element can have many pointers, but no two pointers point to the same element",1.0,4.0,2.5,0.7393442988395691,0.7393442988395691,0.7520856261253357,0.7520856261253357
1571,1571,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","A Tree is a data structure with one or more data nodes, each of which contains some data. Each node itself can have a number of attached child nodes, creating the branched structure Trees are named for.",4.0,5.0,4.5,0.8606233000755309,0.8606233596801758,0.852214515209198,0.8522145748138428
1572,1572,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","a finite collection of nodes, where it starts with an element called the root, which has children, and its children have children until you get to the leaves which are the last elements and have to children",4.0,5.0,4.5,0.8096193671226501,0.8096193671226501,0.794151246547699,0.7941513061523438
1573,1573,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","A nonlinear, two-dimensional data structure.",0.0,4.0,2.0,0.6294958591461182,0.6294957995414734,0.6890905499458313,0.6890906095504761
1574,1574,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",a finite set of one or more nodes such that there is a root node and all other nodes are split into trees of lesser value than the root,3.0,5.0,4.0,0.7057639360427856,0.7057639956474304,0.7904439568519592,0.7904439568519592
1575,1575,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","A finite number of nodes such that there is one root node, each node has a certain number of children nodes, and each child is also a tree",5.0,5.0,5.0,0.8183234930038452,0.8183233737945557,0.8332083821296692,0.833208441734314
1576,1576,10.1,What is a tree?,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",A type of data structure in which each element is attached to one or more elements directly beneath it.,3.0,5.0,4.0,0.7168757915496826,0.7168756127357483,0.7123517990112305,0.7123517990112305
1577,1577,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,"Each level of a generation in the tree, some people do not count the root as a generation",4.0,4.0,4.0,0.629471480846405,0.629471480846405,0.6017135977745056,0.6017136573791504
1578,1578,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,"The height of a tree is in terms of the levels of its nodes such that, if  the tree is empty its height is 0 otherwise its height is equal to the maximum level of its nodes.",4.0,5.0,4.5,0.6668705940246582,0.6668705940246582,0.6635525226593018,0.6635525822639465
1579,1579,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,The height of a tree is the number of nodes on the longest path from the root to a leaf.,5.0,5.0,5.0,0.8980413675308228,0.8980414271354675,0.8868822455406189,0.8868823051452637
1580,1580,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,The number of nodes on the longest path from the root of the tree to a leaf.,5.0,5.0,5.0,0.8980413675308228,0.8980414271354675,0.8868822455406189,0.8868823051452637
1581,1581,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,Height = the number of times you must progress down the levels of a tree to reach a leaf of the greatest distance from the root.,5.0,5.0,5.0,0.7384810447692871,0.7384810447692871,0.7504082322120667,0.7504081726074219
1582,1582,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,the height of a tree is the length from the root to the furthest leaf,5.0,5.0,5.0,0.667912483215332,0.667912483215332,0.7683461308479309,0.7683461308479309
1583,1583,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,The height is the number of generations (levels) from the root.,4.0,5.0,4.5,0.6803877949714661,0.6803877353668213,0.7518420815467834,0.7518421411514282
1584,1584,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,The height of a tree is the number of levels between the root and the leaf farthest away from it.,5.0,5.0,5.0,0.8259590268135071,0.8259589672088623,0.8240606188774109,0.8240606784820557
1585,1585,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,is the depth of its furthest leaf,4.0,5.0,4.5,0.6334726214408875,0.6334725618362427,0.6918549537658691,0.6918549537658691
1586,1586,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,the number of nodes from root to leaf,3.0,4.0,3.5,0.5707711577415466,0.5707712769508362,0.6418443918228149,0.6418443322181702
1587,1587,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,the distance from the deepest leaf to the root,5.0,5.0,5.0,0.6513493061065674,0.6513492465019226,0.7597634792327881,0.7597634196281433
1588,1588,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,the number of generations or levels of a tree,4.0,5.0,4.5,0.5394424200057983,0.5394424200057983,0.4764142632484436,0.4764142334461212
1589,1589,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,"The intensity of the children. Say you begin with one node, Thats one height. Then you add two children to that node and then two children to each of those nodes and two children to each of THOSE nodes. Youre current height would be 4.",2.0,4.0,3.0,0.6326243877410889,0.6326243877410889,0.5734782218933105,0.5734782814979553
1590,1590,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,"the number of levels of a tree, like a tree can have at minimum a depth of 3 and at most a height of 8 for 8 nodes.",3.0,4.0,3.5,0.6046972274780273,0.6046971678733826,0.6616569757461548,0.6616570949554443
1591,1591,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,The number of nodes on the longest path from the root to the leaf.,5.0,5.0,5.0,0.8980413675308228,0.8980414271354675,0.8868822455406189,0.8868823051452637
1592,1592,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,The height of a tree is the number of nodes on the longes path from the root to a leaf.,5.0,5.0,5.0,0.8822036385536194,0.8822036385536194,0.798385739326477,0.798385739326477
1593,1593,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,is equal to the number of levels.  levels between the root node and the terminal nodes.,4.0,5.0,4.5,0.6472336649894714,0.6472337245941162,0.7359404563903809,0.7359403371810913
1594,1594,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,the number of generations or levels the tree has,4.0,5.0,4.5,0.5394424200057983,0.5394424200057983,0.4764142632484436,0.4764142334461212
1595,1595,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,"The height of a tree is the depth of its subtrees, that is, how many layers deep it is.",4.0,5.0,4.5,0.7176980972290039,0.7176982164382935,0.7015008330345154,0.7015008330345154
1596,1596,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,is the number of generations in the tree,4.0,5.0,4.5,0.4109882712364197,0.4109883010387421,0.4694945514202118,0.46949461102485657
1597,1597,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,The number of nodes on the longest path from the root to a leaf.,5.0,5.0,5.0,0.8980413675308228,0.8980414271354675,0.8868822455406189,0.8868823051452637
1598,1598,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,the number of distinct levels of separation,3.0,5.0,4.0,0.4849705398082733,0.4849705398082733,0.5174868106842041,0.5174868106842041
1599,1599,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,the height of a tree is how many levels of nodes that it has,4.0,5.0,4.5,0.4566832482814789,0.4566833078861237,0.5657123327255249,0.5657123923301697
1600,1600,10.2,What is the height of a tree?,The length of the longest path from the root to any of its leaves.,The connections between elements are called branches. Trees are often called inverted trees because they are normally drawn with the root at the top.,0.0,3.0,1.5,0.7229380607604979,0.7229380607604979,0.6712646484375,0.6712647080421448
1601,1601,10.3,What is a leaf?,A node that has no children.,A leaf is a child of a parent node that has no children nodes of its own.,5.0,5.0,5.0,0.8672488331794739,0.8672487139701843,0.8734948039054871,0.8734947443008423
1602,1602,10.3,What is a leaf?,A node that has no children.,A leaf is a node with no children.,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1603,1603,10.3,What is a leaf?,A node that has no children.,A node with no children.,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1604,1604,10.3,What is a leaf?,A node that has no children.,A tree node with no children.,5.0,5.0,5.0,0.9353869557380676,0.9353870749473572,0.937011182308197,0.9370111227035522
1605,1605,10.3,What is a leaf?,A node that has no children.,And end point of the tree... a node that does not have any children.,5.0,5.0,5.0,0.7927688360214233,0.7927688956260681,0.7991089224815369,0.7991089820861816
1606,1606,10.3,What is a leaf?,A node that has no children.,a node with no children.,5.0,5.0,5.0,0.8420471549034119,0.8420470952987671,0.9024118185043335,0.9024118781089783
1607,1607,10.3,What is a leaf?,A node that has no children.,A new item to the tree--a child,2.0,4.0,3.0,0.6451137065887451,0.6451137065887451,0.6490914821624756,0.6490914225578308
1608,1608,10.3,What is a leaf?,A node that has no children.,"A leaf is a node with children, it is a terminating node.",0.0,4.0,2.0,0.8536882996559143,0.8536882996559143,0.873345136642456,0.8733453154563904
1609,1609,10.3,What is a leaf?,A node that has no children.,The node with degree 0.,3.0,5.0,4.0,0.7507074475288391,0.7507074475288391,0.755106508731842,0.7551066279411316
1610,1610,10.3,What is a leaf?,A node that has no children.,the node with degree 0,3.0,5.0,4.0,0.6455442309379578,0.6455442309379578,0.6480910181999207,0.6480909585952759
1611,1611,10.3,What is a leaf?,A node that has no children.,a leaf is a node with no children,5.0,5.0,5.0,0.6734670996665955,0.6734670400619507,0.763896644115448,0.7638965845108032
1612,1612,10.3,What is a leaf?,A node that has no children.,the last child on any branch,4.0,5.0,4.5,0.5408016443252563,0.5408016443252563,0.5145156383514404,0.5145156383514404
1613,1613,10.3,What is a leaf?,A node that has no children.,The last value in the tree. A value with no children attatched.,5.0,5.0,5.0,0.7402628660202026,0.7402628064155579,0.732535183429718,0.732535183429718
1614,1614,10.3,What is a leaf?,A node that has no children.,a node with no children.,5.0,5.0,5.0,0.8420471549034119,0.8420470952987671,0.9024118185043335,0.9024118781089783
1615,1615,10.3,What is a leaf?,A node that has no children.,A node with no children.,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1616,1616,10.3,What is a leaf?,A node that has no children.,A leaf is a node with no children,5.0,5.0,5.0,0.615969181060791,0.615969181060791,0.8708103895187378,0.8708104491233826
1617,1617,10.3,What is a leaf?,A node that has no children.,a node with degree 0.  last node in the tree and furtherest away from the root.,3.0,5.0,4.0,0.6833545565605164,0.6833545565605164,0.6543135643005371,0.6543135643005371
1618,1618,10.3,What is a leaf?,A node that has no children.,an endpoint on a tree that contains no pointers or pointers that are set to null,4.0,5.0,4.5,0.5759897232055664,0.5759896636009216,0.5426377654075623,0.5426377654075623
1619,1619,10.3,What is a leaf?,A node that has no children.,A leaf is a node with no children.,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1620,1620,10.3,What is a leaf?,A node that has no children.,an element in a tree that has no children,5.0,5.0,5.0,0.5167086124420166,0.5167085528373718,0.6379658579826355,0.6379658579826355
1621,1621,10.3,What is a leaf?,A node that has no children.,A node with no children.,5.0,5.0,5.0,1.0,1.0,1.0,1.0
1622,1622,10.3,What is a leaf?,A node that has no children.,a leaf is a node that has no children nodes,5.0,5.0,5.0,0.665959894657135,0.6659598350524902,0.7604789137840271,0.7604788541793823
1623,1623,10.3,What is a leaf?,A node that has no children.,a leaf is a node with no children,5.0,5.0,5.0,0.6734670996665955,0.6734670400619507,0.763896644115448,0.7638965845108032
1624,1624,10.3,What is a leaf?,A node that has no children.,"The elements at the very bottom of an inverted tree (that is, those that have no elements below them) are called leaves.",5.0,5.0,5.0,0.7113776803016663,0.7113776206970215,0.668222963809967,0.668222963809967
1625,1625,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,"A tree data structure in which each done has at most two children, typical called left and right nodes.  The right node is usually greater than the left node and the parent node.",4.0,5.0,4.5,0.7723308205604553,0.7723308205604553,0.7037301659584045,0.7037301063537598
1626,1626,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,"A binary tree is a set of nodes that is either empty or partitioned into a root node and one or two subsets that are binary subtrees of the root. Each node can have no more than two children, a right and a left child.",5.0,5.0,5.0,0.766576886177063,0.7665768265724182,0.7271852493286133,0.7271853089332581
1627,1627,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,"A set of nodes that is either empty or partitioned into a root node and one or two subsets that are binary subtrees of the root.  Each node has at most two children, the left child and the right child.",5.0,5.0,5.0,0.7643198966979979,0.7643198370933533,0.7207911610603333,0.7207911014556885
1628,1628,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,"A set of zero or more nodes, partitioned into a root node and two possibly empty sets that are binary trees. Thus, each node in a binary tree has at most two children, the left child and the right child.",5.0,5.0,5.0,0.7985946536064148,0.79859459400177,0.735772967338562,0.735772967338562
1629,1629,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,A tree in which each parent has a maximum of 2 children.,5.0,5.0,5.0,0.7541875243186951,0.7541874647140503,0.8665151596069336,0.866515040397644
1630,1630,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,a tree where each node has at most 2 children.,5.0,5.0,5.0,0.7926561236381531,0.7926561236381531,0.7630919814109802,0.763092041015625
1631,1631,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,a tree with up to two children or a right subtree and/or a left subtree,5.0,5.0,5.0,0.600294291973114,0.6002943515777588,0.6255389451980591,0.6255389451980591
1632,1632,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,"A binary tree is a tree in which all nodes have a maximum of two degrees, or can only have two children each.",5.0,5.0,5.0,0.8359099626541138,0.8359099626541138,0.8333877921104431,0.8333878517150879
1633,1633,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,a binary tree is a tree data structure in which each node has at most two children.,5.0,5.0,5.0,0.8029523491859436,0.8029524683952332,0.7083115577697754,0.7083114981651306
1634,1634,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,"a tree with only 2 joints, left and right",4.0,5.0,4.5,0.54103022813797,0.5410302877426147,0.5914157629013062,0.5914157032966614
1635,1635,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,A binary search tree is a tree that also has the condition that each node may have at maximum 2 children,4.0,5.0,4.5,0.7037081122398376,0.7037081718444824,0.7223008871078491,0.7223010063171387
1636,1636,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,a tree where each parent can have at max two children.,5.0,5.0,5.0,0.6988688707351685,0.6988689303398132,0.7684074640274048,0.7684073448181152
1637,1637,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,a list of numbers that are ordered compared to how they compare to the other numbers already added in the tree,1.0,3.0,2.0,0.5203139781951904,0.5203139781951904,0.5367685556411743,0.5367684960365295
1638,1638,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,a tree where each node can have at most 2 children.,5.0,5.0,5.0,0.7926561236381531,0.7926561236381531,0.7630919814109802,0.763092041015625
1639,1639,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,"Starting at the root node, it branches off into one or two subsets that are binary subtrees of the root.  Each node has at most two children, the left child and the right child.",5.0,5.0,5.0,0.7374905347824097,0.7374904751777649,0.720990002155304,0.7209899425506592
1640,1640,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,"A binary tree is a set of nodes that is either empty or partitioned into a root node and one or two subsets that are binary subtrees of the root. Each node has at most two children, the left child and the right child.",5.0,5.0,5.0,0.7643198966979979,0.7643198370933533,0.7207911610603333,0.7207911014556885
1641,1641,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,a tree that has a maximum of 2 children per node,5.0,5.0,5.0,0.7642844319343567,0.7642843723297119,0.8486289978027344,0.8486290574073792
1642,1642,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,a tree with elements that can contain at most two pointers,5.0,5.0,5.0,0.5537624955177307,0.5537624955177307,0.5772089958190918,0.5772089958190918
1643,1643,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,A binary tree can have only two children for each node.,5.0,5.0,5.0,0.8210816383361816,0.8210816383361816,0.8227150440216064,0.8227150440216064
1644,1644,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,a tree where every parent has only two children,4.0,5.0,4.5,0.6021407842636108,0.6021407246589661,0.6685363054275513,0.6685362458229065
1645,1645,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,A tree where every node has no more than two children,5.0,5.0,5.0,0.7100910544395447,0.7100909352302551,0.7714337706565857,0.7714337706565857
1646,1646,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,"a binary tree is a special search tree where each node has either 2, 1, or 0 children",4.0,5.0,4.5,0.659714937210083,0.659714937210083,0.6796678900718689,0.6796678304672241
1647,1647,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,a binary tree is a special type of tree where each node can only have at maximum 2 children,5.0,5.0,5.0,0.7347564101219177,0.7347565293312073,0.7502658367156982,0.7502658367156982
1648,1648,10.4,What is a binary tree?,A tree for which the maximum number of children per node is two.,A binary tree is a special type of inverted tree in which each element has only two branches below it.,4.0,5.0,4.5,0.7089085578918457,0.7089086174964905,0.7051436305046082,0.7051435708999634
1649,1649,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"A tree data structure where each node has a value, where the total order is defined on these values.  the left subtree contains only values less than the parent node, and vice versa for the right subtree.",5.0,5.0,5.0,0.8017223477363586,0.8017222881317139,0.7350125908851624,0.7350126504898071
1650,1650,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,A binary search tree is a binary tree where the value in any node 'n' is greater than the value in every node in n's left subtree but less than every node in n's right subtree.,5.0,5.0,5.0,0.7210695147514343,0.7210695147514343,0.6618879437446594,0.6618878245353699
1651,1651,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"A binary tree where the value in any node n is greater than the value in every node in n's left subtree, but less than the value of every node in n's right subtree.",5.0,5.0,5.0,0.7329666614532471,0.7329666614532471,0.6644867062568665,0.6644867658615112
1652,1652,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"A binary tree where the search key in any node n is greater than the search key in any node in n's left subtree, but less than the search key in any node in n's right subtree.",5.0,5.0,5.0,0.7171286940574646,0.7171286940574646,0.6737546324729919,0.6737546920776367
1653,1653,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"A tree which is split based on values. This makes it very easy to search. One can compare the desired value to the root, and if the root is greater than, we search the left side of the tree, if it is less than, we search the right side... and do the same thing recursively. ",5.0,5.0,5.0,0.743108332157135,0.7431081533432007,0.6380614638328552,0.6380614042282104
1654,1654,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,a tree where each node has at most two nodes and the node on the left is less than the root and the node on the right is greater than the root.,4.0,5.0,4.5,0.824727475643158,0.824727475643158,0.7487038373947144,0.7487037777900696
1655,1655,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,a special binary tree that has a rule that all the subtrees on the right are smaller than the node value and all the subtrees on the left are larger than the node value,5.0,3.0,4.0,0.750932514667511,0.7509324550628662,0.6866070628166199,0.6866071224212646
1656,1656,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"Binary search trees are similar to binary trees, but have been implemented to organize data in a specific way for later searching.",3.0,4.0,3.5,0.7262912392616272,0.7262912392616272,0.6317067742347717,0.6317067742347717
1657,1657,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"it is a binary tree where each node has a value, a total order is defined on these values, the left subtree of a node contains only values less than the node's value, and the right subtree of a node contains only values greater than or equal to the node's value.",5.0,5.0,5.0,0.7426596879959106,0.7426595091819763,0.6395102739334106,0.6395103931427002
1658,1658,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,A binary tree with the data organized in a specific arangment,2.0,3.0,2.5,0.5520836710929871,0.5520836114883423,0.5593683123588562,0.5593681931495667
1659,1659,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"A binary search tree is a tree that also has the condition that each node may have at maximum 2 children and where the input data is compared to the data in the tree starting with the root. If the value is smaller than the root it traverses left, if it is larger it traverses right until it becomes a leaf.",4.0,5.0,4.5,0.7953499555587769,0.7953498959541321,0.7548513412475586,0.7548512816429138
1660,1660,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,a binary tree in which the data is in order from left to right.,4.0,4.0,4.0,0.6931328177452087,0.693132758140564,0.6563736796379089,0.6563737392425537
1661,1661,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,a tree that is set up so that it can be easily searched for numbers based on the location compared to the previous nodes.,3.0,4.0,3.5,0.6823048591613771,0.6823048591613771,0.6208085417747498,0.6208085417747498
1662,1662,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a binary tree where the children are ordered such that the right side is greater than the current node, and the left is less than or equal the current node.",5.0,5.0,5.0,0.768992006778717,0.7689918875694275,0.7983503341674805,0.7983503341674805
1663,1663,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"A binary tree where the value in any node n is greater than the value in every node n's left subtree, but less than every value in n's right subtree.",5.0,5.0,5.0,0.7270957231521606,0.7270956635475159,0.6656441688537598,0.6656441688537598
1664,1664,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,A binary search tree is a finite set of nodes that is either empty or consits of a root and two disjoint binary trees call the left and right subtrees.,1.0,4.0,2.5,0.7636678814888,0.7636679410934448,0.6935532093048096,0.6935531497001648
1665,1665,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,it is similar to a binary tree.  The keys in a nonempty left subtree (right subtree) are smaller (larger) than the key in the root of subtree.  the values in all nodes in the left subtree of a node are less than             the node value  the values in all nodes in the right subtree of a node are greater    than the node values,5.0,5.0,5.0,0.8021689653396606,0.8021690249443054,0.6781034469604492,0.6781035661697388
1666,1666,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a set of numbers arranged by links. each node can contain two pointers to other elements. each node to the left of the parent is smaller and each node to the right is larger. recursive implementation implies that if traversed in order, the output would be sorted",5.0,4.0,4.5,0.7887187004089355,0.788718581199646,0.6993895173072815,0.6993895173072815
1667,1667,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"A binary search tree is a special binary tree arranged such that every left child node contains a value less than its parent, and every right child node contains a value greater its parent.",5.0,5.0,5.0,0.8042505383491516,0.8042504787445068,0.7888485789299011,0.7888485789299011
1668,1668,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a binary tree with a special organization of data. where the left child of the element is less than it, and the right child is larger than it.",5.0,5.0,5.0,0.7946183085441589,0.7946182489395142,0.7803821563720703,0.7803821563720703
1669,1669,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,A tree in which the smaller values are located on the left of a parent node and the larger values are located on the right of the parent node.,5.0,5.0,5.0,0.8347234129905701,0.8347234129905701,0.8226512670516968,0.8226513266563416
1670,1670,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a binary search tree is a special tree in which each node has at most two children, labeled left child and right child",1.0,4.0,2.5,0.7894848585128784,0.7894847989082336,0.7929791212081909,0.7929791212081909
1671,1671,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"it is a binary tree where each node has a unique key, the left child of a node has only values less than that node, and the right child of each node has higher values than that node.",5.0,5.0,5.0,0.784877359867096,0.7848774194717407,0.7583407759666443,0.7583407163619995
1672,1672,10.5,What is a binary search tree?,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"Binary search trees are a fundamental data structure used to construct more abstract data structures such as sets, multisets, and associative arrays.",2.0,3.0,2.5,0.6272128820419312,0.6272128224372864,0.5599908828735352,0.5599908828735352
1673,1673,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.","For every node in the binary tree we first visit its left sub-tree (if its there) and then visit the parent node itself, and then the right sub-tree (if its there).",5.0,5.0,5.0,0.8454340100288391,0.8454340100288391,0.8497225046157837,0.8497225046157837
1674,1674,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.",The inorder traversal of a binary tree visits the node of a binary tree in order according to their data values.,2.0,3.0,2.5,0.6121290922164917,0.6121290326118469,0.5945038795471191,0.5945039391517639
1675,1675,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.",Traverses the binary tree in inorder.  It lets you visit the nodes in order according to their data values.,2.0,4.0,3.0,0.6940913200378418,0.6940913200378418,0.6204790472984314,0.6204789876937866
1676,1676,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.",Its used to visit nodes of a binary search tree in a search key order.,3.0,4.0,3.5,0.6330459117889404,0.6330459117889404,0.5753636956214905,0.5753637552261353
1677,1677,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.",(Left side of tree) (Root) (Right side of tree),5.0,5.0,5.0,0.7372665405273438,0.7372666001319885,0.7370017766952515,0.7370017766952515
1678,1678,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.",printing a tree in order from least to greatest. This done by going as far left down the tree as possible and printing the parent and then right tree. Then move up the tree.,5.0,5.0,5.0,0.7096818089485168,0.7096818089485168,0.6370461583137512,0.6370461583137512
1679,1679,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.","The in order is to go from left,root,right",5.0,5.0,5.0,0.7211374640464783,0.7211375832557678,0.7674328088760376,0.7674328684806824
1680,1680,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.","Inorder traversal of a binary tree will retrieve start at the furthest left hand leaf and checks it, it’s parent, and it’s right side sibling, then it goes up a level and repeats until it gets to the root.",4.0,5.0,4.5,0.7881523370742798,0.788152277469635,0.7259793877601624,0.7259794473648071
1681,1681,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.",traverse the left subtree. visit the root. traverse the right subtree.,5.0,5.0,5.0,0.864027738571167,0.8640277981758118,0.8762408494949341,0.8762407898902893
1682,1682,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.",postorder,0.0,3.0,1.5,0.21841110289096832,0.21841110289096832,0.3729739487171173,0.3729739487171173
1683,1683,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.",in order starts with the root then does right child then left child recursively,0.0,3.0,1.5,0.6531878709793091,0.6531879305839539,0.6757529377937317,0.6757529973983765
1684,1684,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.",Left Child -&gt; Parent -&gt; Right Child,5.0,5.0,5.0,0.6082509160041809,0.6082509756088257,0.6566738486289978,0.6566739082336426
1685,1685,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.",it goes from lowest to highest inside of the tree,1.0,3.0,2.0,0.4514967203140259,0.4514967501163482,0.44945791363716125,0.44945791363716125
1686,1686,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.","starting by displaying the node furthest to the right, then  the node, then the node on the right, in recursive order.",3.0,5.0,4.0,0.7477856278419495,0.7477855682373047,0.7963990569114685,0.796398937702179
1687,1687,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.",It travels left to right,3.0,4.0,3.5,0.5091901421546936,0.5091900825500488,0.553959846496582,0.553959846496582
1688,1688,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.",void inorder(ptNode ptr) { if (ptr) { inorder (ptr-&gt;left); cout&lt;&lt;ptr-&gt;data; inorder(ptr-&gt;right); } },5.0,5.0,5.0,0.6354334354400635,0.6354334354400635,0.6409510970115662,0.6409511566162109
1689,1689,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.","the root is in the middle.  The left subtree is traversed first, then the root, and finally the right subtree.",5.0,5.0,5.0,0.8731098175048828,0.8731098175048828,0.8921558260917664,0.8921558856964111
1690,1690,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.","a traversal that visits the left branch first, then the parent node, then the right branch, recursively.",5.0,5.0,5.0,0.8339751958847046,0.8339751958847046,0.8295497298240662,0.8295497298240662
1691,1691,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.","Inorder traversal visits the left branch of a node (all the way to it's deepest left-most leaf) before visiting the node itself. After visiting the entire left branch and the node, it visits the node's right branch following the same pattern of left child, node, right child.",5.0,5.0,5.0,0.7978430986404419,0.7978431582450867,0.7665085792541504,0.7665086388587952
1692,1692,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.",left middle right,5.0,5.0,5.0,0.35043248534202576,0.3504325449466705,0.5897550582885742,0.5897549986839294
1693,1693,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.","You traverse all the nodes to the left, then visit the root, then traverse all the nodes on the right.",5.0,5.0,5.0,0.83860182762146,0.83860182762146,0.82374107837677,0.8237411975860596
1694,1694,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.","you would go to the furthest down left most node, then to the root then to the right (if left and right exist) then you would return one node previous and do the same until you reached the root, then go to the furthest down left most node on the right side of the root and continue this process",5.0,5.0,5.0,0.7386207580566406,0.7386208176612854,0.7285243272781372,0.728524386882782
1695,1695,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.","it means that you traverse one subtree of a node, then look at the node itself before traversing the other subtree of the node",4.0,4.0,4.0,0.7372207045555115,0.7372207045555115,0.7469726204872131,0.7469726204872131
1696,1696,10.6,What is the inorder traversal of a binary tree?,"Traverse the left subtree, then the root, then the right subtree.","Level order traversal is a traversal method by which levels are visited successively starting with level 0 (the root node), and nodes are visited from left to right on each level, with Push and Pop methods. ",0.0,4.0,2.0,0.7618017792701721,0.7618017196655273,0.7662919163703918,0.7662919163703918
1697,1697,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,This is on the runtime order of log(n) where n is the number of nodes in the binary tree.,5.0,5.0,5.0,0.754098117351532,0.7540980577468872,0.7678358554840088,0.7678357362747192
1698,1698,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,In a binary search tree of size 'n' it takes log(n) comparisons to find a specified element.,5.0,5.0,5.0,0.744871973991394,0.744871973991394,0.7293909788131714,0.7293910980224609
1699,1699,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,n-1/2 is the algorithm to compare and find an element.,0.0,4.0,2.0,0.6709323525428772,0.6709323525428772,0.6598482728004456,0.6598482728004456
1700,1700,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,At most its equivalent to the height of the tree.,5.0,5.0,5.0,0.645034909248352,0.6450349688529968,0.710136890411377,0.710136890411377
1701,1701,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,Log(n),5.0,5.0,5.0,0.62618488073349,0.6261848211288452,0.7475894689559937,0.7475894689559937
1702,1702,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,O(log n),5.0,5.0,5.0,0.6617549657821655,0.6617549061775208,0.7538090348243713,0.7538090348243713
1703,1703,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,Depends on what half of the tree and the levels you have.,3.0,4.0,3.5,0.6542456746101379,0.6542456746101379,0.7015563249588013,0.7015563249588013
1704,1704,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,O(log n) in balanced trees,5.0,5.0,5.0,0.6703495383262634,0.6703495383262634,0.761976957321167,0.7619770169258118
1705,1705,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,n-1,2.0,3.0,2.5,0.4751177728176117,0.4751177728176117,0.5285018682479858,0.5285019278526306
1706,1706,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,log(n),5.0,5.0,5.0,0.6288979053497314,0.6288978457450867,0.7697444558143616,0.7697446346282959
1707,1707,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,O(nlog(n)),0.0,5.0,2.5,0.6620391607284546,0.662039041519165,0.6339071393013,0.6339071989059448
1708,1708,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,nLog(n),0.0,4.0,2.0,0.6281469464302063,0.6281470060348511,0.6866102814674377,0.6866102814674377
1709,1709,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,logn,5.0,5.0,5.0,0.2559179663658142,0.2559179365634918,0.5335885882377625,0.533588707447052
1710,1710,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,"at the minimum log(n)/log(2), at the maximum N searches, where N is the number of nodes.",4.0,5.0,4.5,0.7388675212860107,0.738867461681366,0.788802981376648,0.788802981376648
1711,1711,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,O(n),2.0,4.0,3.0,0.4702012240886688,0.4702012538909912,0.6780928373336792,0.6780927777290344
1712,1712,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,It takes at most 3 comparisons to find and element in a binary search tree,0.0,3.0,1.5,0.3579559922218323,0.35795602202415466,0.45615607500076294,0.4561561644077301
1713,1713,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,log (n)   where n equals the number of nodes.,5.0,5.0,5.0,0.7175686955451965,0.7175686359405518,0.7814656496047974,0.7814656496047974
1714,1714,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,it takes as many comparisons as the number of levels of the binary search tree. it only compares one number at each level,5.0,5.0,5.0,0.6539021134376526,0.6539021134376526,0.5687032341957092,0.5687032341957092
1715,1715,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,At most it takes one less comparisons than the tree's height. In big-O notation it takes O(log n) comparisons if the tree is balanced.,5.0,5.0,5.0,0.7563406825065613,0.7563406229019165,0.7127997279167175,0.7127996683120728
1716,1716,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,O(log n),5.0,5.0,5.0,0.6617549657821655,0.6617549061775208,0.7538090348243713,0.7538090348243713
1717,1717,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,log n comparisons,5.0,5.0,5.0,0.505470871925354,0.505470871925354,0.6471604108810425,0.6471604108810425
1718,1718,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,(n^k)-1   where k is the height of the tree,0.0,3.0,1.5,0.6762033700942993,0.6762033104896545,0.6981470584869385,0.6981469392776489
1719,1719,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,"it takes h comparisons, where h is the height of the tree",5.0,5.0,5.0,0.6095942854881287,0.6095942258834839,0.6678178310394287,0.6678178906440735
1720,1720,10.7,How many comparisons does it take to find an element in a binary search tree?,The height of the tree (or log of the number of elements in the tree).,2 way key comparison,0.0,2.0,1.0,0.4829476773738861,0.4829477369785309,0.5311225056648254,0.5311225056648254
1721,1721,11.1,What are the elements typically included in a class definition?,Function members and data members.,"The name of the class file, the parameters it must take to perform its function.  Also a brief description of what the class does.",1.5,3.75,2.625,0.7043948173522949,0.7043948173522949,0.6246454119682312,0.6246453523635864
1722,1722,11.1,What are the elements typically included in a class definition?,Function members and data members.,"access specifiers and functions, oftentimes a constructor.",3.0,3.0,3.0,0.6424846649169922,0.6424845457077026,0.6733225584030151,0.6733224987983704
1723,1723,11.1,What are the elements typically included in a class definition?,Function members and data members.,"The elements typically included in a class definition are the function prototypes, usually declared public, and the data members used in the class, which are usually declared private.",5.0,5.0,5.0,0.7087975144386292,0.7087975144386292,0.6557347178459167,0.6557347178459167
1724,1724,11.1,What are the elements typically included in a class definition?,Function members and data members.,"Class is user defined.  It contains members, data and functions.  The keyword class is used and includes brackets ({})",2.5,5.0,3.75,0.7059688568115234,0.7059688568115234,0.620705783367157,0.620705783367157
1725,1725,11.1,What are the elements typically included in a class definition?,Function members and data members.,Member functions and data members.,5.0,5.0,5.0,0.8203082084655762,0.8203081488609314,0.8466649651527405,0.8466650247573853
1726,1726,11.1,What are the elements typically included in a class definition?,Function members and data members.,the functions and variables used when the object is defined for the class.,5.0,3.0,4.0,0.7692886590957642,0.7692885994911194,0.7553520798683167,0.7553520798683167
1727,1727,11.1,What are the elements typically included in a class definition?,Function members and data members.,"Data members, functions and function definitions, variables.",5.0,5.0,5.0,0.7809482216835022,0.7809481620788574,0.7320694327354431,0.7320694923400879
1728,1728,11.1,What are the elements typically included in a class definition?,Function members and data members.,return type and input parameters,1.5,2.5,2.0,0.4981173574924469,0.4981173574924469,0.5424927473068237,0.542492687702179
1729,1729,11.1,What are the elements typically included in a class definition?,Function members and data members.,Constructor Data members Methods,5.0,4.0,4.5,0.770804226398468,0.7708043456077576,0.7088781595230103,0.7088781595230103
1730,1730,11.1,What are the elements typically included in a class definition?,Function members and data members.,"Function members and member attributes, or in other words, the class variables and functions.",5.0,5.0,5.0,0.8399930000305176,0.8399929404258728,0.8193707466125488,0.8193707466125488
1731,1731,11.1,What are the elements typically included in a class definition?,Function members and data members.,"The elements that are included in a class definition is the access-modifier, data types, variables, and function signatures.",4.0,4.0,4.0,0.7174551486968994,0.7174551486968994,0.6478239297866821,0.6478238701820374
1732,1732,11.1,What are the elements typically included in a class definition?,Function members and data members.,The variables and function prototypes.,5.0,3.0,4.0,0.7405934333801271,0.7405934333801271,0.7433523535728455,0.7433524131774902
1733,1733,11.1,What are the elements typically included in a class definition?,Function members and data members.,public and private variables and initiations of functions included in the class.,4.5,2.5,3.5,0.7416579127311707,0.7416579127311707,0.773480236530304,0.7734802961349487
1734,1734,11.1,What are the elements typically included in a class definition?,Function members and data members.,The return value and the accepted value.,1.5,1.25,1.375,0.6865805983543396,0.6865805387496948,0.6395655274391174,0.6395654678344727
1735,1735,11.1,What are the elements typically included in a class definition?,Function members and data members.,"A class definition typically includes the class name, the classes constructor(s), and any extra functions and class variables.",5.0,2.5,3.75,0.7067538499832153,0.7067539095878601,0.6985812187194824,0.6985812783241272
1736,1736,11.1,What are the elements typically included in a class definition?,Function members and data members.,"Parameters and their type, Class name, and return type, and the code to be executed in the class.",2.0,3.75,2.875,0.667046308517456,0.6670463681221008,0.5914973616600037,0.5914973616600037
1737,1737,11.1,What are the elements typically included in a class definition?,Function members and data members.,"data members, class variables, and functions",5.0,5.0,5.0,0.6530205607414246,0.653020441532135,0.7440295219421387,0.7440295219421387
1738,1738,11.1,What are the elements typically included in a class definition?,Function members and data members.,"Constructor, functions, and variables native to the class.",5.0,3.0,4.0,0.7341253161430359,0.7341252565383911,0.6549158692359924,0.6549158692359924
1739,1739,11.1,What are the elements typically included in a class definition?,Function members and data members.,functions and data members,5.0,5.0,5.0,0.6897145509719849,0.6897145509719849,0.7901949882507324,0.7901949882507324
1740,1740,11.1,What are the elements typically included in a class definition?,Function members and data members.,data members and function definitions,5.0,5.0,5.0,0.7379727959632874,0.7379727959632874,0.7973508834838867,0.7973508238792419
1741,1741,11.1,What are the elements typically included in a class definition?,Function members and data members.,member functions and data members,5.0,5.0,5.0,0.7485931515693665,0.7485931515693665,0.808127760887146,0.808127760887146
1742,1742,11.1,What are the elements typically included in a class definition?,Function members and data members.,"constructor, and function definitions.",3.5,2.5,3.0,0.6641287207603455,0.6641287207603455,0.6716726422309875,0.6716725826263428
1743,1743,11.1,What are the elements typically included in a class definition?,Function members and data members.,class name data of class definition of functions and methods,5.0,3.75,4.375,0.6409522294998169,0.6409522294998169,0.6793229579925537,0.6793228983879089
1744,1744,11.1,What are the elements typically included in a class definition?,Function members and data members.,"A class definition includes the definitions of the class' constructor(s) and any public or private functions. Of course, it also #includes the class header and any necessary C libraries",3.0,2.5,2.75,0.6863861680030823,0.6863862872123718,0.5789672136306763,0.5789672136306763
1745,1745,11.1,What are the elements typically included in a class definition?,Function members and data members.,"Class name, {}, semicoln at the end of the defination, private and bublic followed by "": """,2.5,2.5,2.5,0.6223191022872925,0.6223190426826477,0.5140620470046997,0.5140619874000549
1746,1746,11.1,What are the elements typically included in a class definition?,Function members and data members.,"a constructor, private and public variables, and function prototypes",5.0,2.5,3.75,0.6434726715087891,0.6434726119041443,0.6325039267539978,0.632503867149353
1747,1747,11.1,What are the elements typically included in a class definition?,Function members and data members.,"Data variables and Functions, Data members",5.0,5.0,5.0,0.8127849102020264,0.8127848505973816,0.7662966251373291,0.7662965059280396
1748,1748,11.1,What are the elements typically included in a class definition?,Function members and data members.,class definitions include the name of the class and type of parameters,1.5,3.75,2.625,0.5739765167236328,0.5739764571189879,0.5277988910675049,0.5277989506721497
1749,1749,11.1,What are the elements typically included in a class definition?,Function members and data members.,"class variables, class function prototypes",5.0,3.75,4.375,0.7141658663749695,0.7141659259796143,0.7098028659820557,0.7098028063774109
1750,1750,11.1,What are the elements typically included in a class definition?,Function members and data members.,input  & return type elements,1.5,3.0,2.25,0.4788953065872192,0.4788953363895416,0.5540027022361755,0.5540027618408203
1751,1751,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,Public and private specifiers.,5.0,5.0,5.0,0.792628824710846,0.7926288843154907,0.8200492262840271,0.8200492262840271
1752,1752,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,"Public, Private, Restricted",4.5,4.75,4.625,0.6233147978782654,0.6233147978782654,0.7172904014587402,0.7172905206680298
1753,1753,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,The access specifiers are public and private.,5.0,5.0,5.0,0.6840898990631104,0.6840899586677551,0.6761462688446045,0.6761463284492493
1754,1754,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,public private protected,5.0,4.75,4.875,0.576007604598999,0.576007604598999,0.7304553389549255,0.7304553985595703
1755,1755,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,Public or Private.,5.0,5.0,5.0,0.8823441863059998,0.8823441863059998,0.923347532749176,0.9233475923538208
1756,1756,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,public: the function or variable can be used outside the class private: the function or variable can only be used with the class,5.0,5.0,5.0,0.5313246250152588,0.5313246846199036,0.6385496854782104,0.6385497450828552
1757,1757,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,Public and Private,5.0,5.0,5.0,0.6625223159790039,0.6625223159790039,0.7453699111938477,0.7453700304031372
1758,1758,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,public private and protected,5.0,4.75,4.875,0.576007604598999,0.576007604598999,0.7304553389549255,0.7304553985595703
1759,1759,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,Public Private,5.0,5.0,5.0,0.6625223159790039,0.6625223159790039,0.7453699111938477,0.7453700304031372
1760,1760,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,"Private, public, protected",5.0,4.75,4.875,0.6245101690292358,0.6245101094245911,0.7996253967285156,0.7996254563331604
1761,1761,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,The access-specifiers that can be used in a C++ class definition is private and public.,5.0,5.0,5.0,0.7852469086647034,0.7852469682693481,0.8940402865409851,0.8940403461456299
1762,1762,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,public and private.,5.0,5.0,5.0,0.8794531226158142,0.8794528841972351,0.9137258529663086,0.9137258529663086
1763,1763,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,"static, long, unsigned",0.0,1.25,0.625,0.5331671237945557,0.5331671833992004,0.571365475654602,0.5713655352592468
1764,1764,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,"Private, Public, Protected, or Friend.",5.0,4.75,4.875,0.599320113658905,0.5993200540542603,0.6964859962463379,0.6964859962463379
1765,1765,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,"A C++ class definition may include access-specifiers public, private, and static.",4.0,5.0,4.5,0.6579023599624634,0.6579024195671082,0.713346004486084,0.7133460640907288
1766,1766,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,"local, global, local-variable, function specific",1.5,2.5,2.0,0.4747408628463745,0.4747409522533417,0.5625419616699219,0.5625419020652771
1767,1767,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,"public, private",5.0,5.0,5.0,0.7016289830207825,0.7016289830207825,0.8026683330535889,0.8026683926582336
1768,1768,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,"Public, protected, and private.",5.0,4.75,4.875,0.7245919704437256,0.7245919108390808,0.8051985502243042,0.8051986694335938
1769,1769,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,"private, public",5.0,5.0,5.0,0.7075194120407104,0.7075194120407104,0.8221823573112488,0.8221824169158936
1770,1770,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,public - can be accessed by any of the program  private - can only be accessed by the class functions themselves and no outside functions or calls,5.0,5.0,5.0,0.5494389533996582,0.5494389533996582,0.567530632019043,0.567530632019043
1771,1771,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,"public , private, protected",5.0,5.0,5.0,0.5522892475128174,0.5522892475128174,0.7741038203239441,0.7741038203239441
1772,1772,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,public and private,5.0,5.0,5.0,0.6037477850914001,0.6037477254867554,0.7729586362838745,0.7729586362838745
1773,1773,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,"public, private, protected",5.0,4.75,4.875,0.5522892475128174,0.5522892475128174,0.7741038203239441,0.7741038203239441
1774,1774,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,"functions and data members can be given access-specifications of public, private, and friend. public access is given to any functions or members not given specific access rights.",5.0,4.75,4.875,0.5943912863731384,0.5943912863731384,0.6298148036003113,0.6298148036003113
1775,1775,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,data member or data functions are access specifiers,0.0,1.25,0.625,0.41520044207572937,0.41520050168037415,0.41073617339134216,0.41073617339134216
1776,1776,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,public or private,5.0,5.0,5.0,0.6037477850914001,0.6037477254867554,0.7729586362838745,0.7729586362838745
1777,1777,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,public and private,5.0,5.0,5.0,0.6037477850914001,0.6037477254867554,0.7729586362838745,0.7729586362838745
1778,1778,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,public and private,5.0,5.0,5.0,0.6037477850914001,0.6037477254867554,0.7729586362838745,0.7729586362838745
1779,1779,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,"public - can be accessed from outside the class private - accessible only from inside the class, not inherited protected - accessible only from inside the class, inherited",5.0,4.75,4.875,0.5712934732437134,0.5712934732437134,0.554134726524353,0.5541346669197083
1780,1780,11.2,What are the access-specifiers that can be used in a C++ class definition?,Private and public.,public private protected,5.0,5.0,5.0,0.576007604598999,0.576007604598999,0.7304553389549255,0.7304553985595703
1781,1781,11.3,How are objects initialized when they are created?,By using constructors.,ie. GradeBook myGradeBook();  call upon the class and then give it a name like shown,0.0,2.5,1.25,0.5651257038116455,0.5651257634162903,0.5210022330284119,0.5210023522377014
1782,1782,11.3,How are objects initialized when they are created?,By using constructors.,They are initialized as a named instance of the template formed by the class. This named instance can then be modified to be different from the class that it was created from.,3.0,3.75,3.375,0.6291697025299072,0.629169762134552,0.5652895569801331,0.5652896165847778
1783,1783,11.3,How are objects initialized when they are created?,By using constructors.,not answered,0.0,0.0,0.0,0.3385434150695801,0.3385434150695801,0.4339312016963959,0.4339311718940735
1784,1784,11.3,How are objects initialized when they are created?,By using constructors.,Objects are initialized by a value given.  When an object is defined for a certain task.,2.0,2.5,2.25,0.6892753839492798,0.689275324344635,0.6271148920059204,0.6271149516105652
1785,1785,11.3,How are objects initialized when they are created?,By using constructors.,"They are initialized with a "" . "" (dot) between the constructor and the object being created.",0.0,4.5,2.25,0.64390629529953,0.64390629529953,0.6109112501144409,0.6109112501144409
1786,1786,11.3,How are objects initialized when they are created?,By using constructors.,objectname classname();  to call a function from the class:  objectname.funciton();,0.0,2.5,1.25,0.5746833086013794,0.5746832489967346,0.5780738592147827,0.5780738592147827
1787,1787,11.3,How are objects initialized when they are created?,By using constructors.,"If the object refers to a class, the constructor(s) will initialize the objects based on return type and parameters passed. Compiler will auto-create one if one is not provided.",5.0,5.0,5.0,0.6932280659675598,0.6932281255722046,0.6778185963630676,0.6778186559677124
1788,1788,11.3,How are objects initialized when they are created?,By using constructors.,classname objectname(input parameters);,3.0,2.5,2.75,0.5507691502571106,0.5507691502571106,0.5941692590713501,0.5941693186759949
1789,1789,11.3,How are objects initialized when they are created?,By using constructors.,When the class is called by the Constructor,2.0,5.0,3.5,0.6426334381103516,0.642633318901062,0.5994042158126831,0.5994040966033936
1790,1790,11.3,How are objects initialized when they are created?,By using constructors.,"Constructors; default when not provided by user, or programmer specified constructors.",5.0,5.0,5.0,0.7166655659675598,0.7166656851768494,0.7088902592658997,0.7088902592658997
1791,1791,11.3,How are objects initialized when they are created?,By using constructors.,Objects are usually initialized at the beginning of the program and are initialized usually in the main function. They are initialized after the class's name.,1.0,3.75,2.375,0.670210599899292,0.6702106595039368,0.5802634954452515,0.5802634358406067
1792,1792,11.3,How are objects initialized when they are created?,By using constructors.,"&lt;variable type&gt; &lt;variable name&gt;; or, if you want to initialize a variable to a certain value, &lt;variable type&gt; &lt;variable name&gt; = &lt;value&gt;;",1.0,3.75,2.375,0.3917612731456757,0.3917612731456757,0.45542287826538086,0.45542284846305847
1793,1793,11.3,How are objects initialized when they are created?,By using constructors.,"variables are set to a given value, or 0 if none is given.",1.0,1.25,1.125,0.6074540615081787,0.6074541211128235,0.5760615468025208,0.5760615468025208
1794,1794,11.3,How are objects initialized when they are created?,By using constructors.,"When the object is initialized, its constructor is called (whether one is provided or c++ assigns a default constructor).",5.0,5.0,5.0,0.7069606184959412,0.7069606184959412,0.6793263554573059,0.6793263554573059
1795,1795,11.3,How are objects initialized when they are created?,By using constructors.,"Objects are initialized essentially as copies of the corresponding classes, complete with their own separate variables.",2.0,3.0,2.5,0.6298428177833557,0.6298428177833557,0.5974704623222351,0.5974704027175903
1796,1796,11.3,How are objects initialized when they are created?,By using constructors.,"If you had a class Gradebook, you would initialize it in your main function by use of a constructor in the Gradebook class.  If no constructor is specified or found, c++ will use a default one with no parameters.  Gradebook myGradebook;  In this bit of code, the class Gradebook has been initialized as object myGradebook.",5.0,5.0,5.0,0.6452721357345581,0.6452721357345581,0.6504647135734558,0.6504647135734558
1797,1797,11.3,How are objects initialized when they are created?,By using constructors.,objects are initialized by stating the classname first then assigning a name to the object. Within the object's ( ) is a place where it can be initialized.,3.0,3.75,3.375,0.6907204985618591,0.6907204389572144,0.6252585053443909,0.6252584457397461
1798,1798,11.3,How are objects initialized when they are created?,By using constructors.,They are initialized with a constructor.,5.0,5.0,5.0,0.6639395952224731,0.6639396548271179,0.6863918900489807,0.6863919496536255
1799,1799,11.3,How are objects initialized when they are created?,By using constructors.,"The value is specified after declaration,  It can initialized anywhere between the declaration and the corresponding }.",1.0,3.75,2.375,0.5890247821807861,0.5890247821807861,0.614361584186554,0.614361584186554
1800,1800,11.3,How are objects initialized when they are created?,By using constructors.,"with the default constructor for that object in its class.  if no constructor is specified, it uses the default system constructor.",4.0,5.0,4.5,0.7150685787200928,0.715068519115448,0.6860365867614746,0.6860366463661194
1801,1801,11.3,How are objects initialized when they are created?,By using constructors.,initialized using the same name as the class,1.0,4.0,2.5,0.5124295949935913,0.5124295949935913,0.565930187702179,0.565930187702179
1802,1802,11.3,How are objects initialized when they are created?,By using constructors.,they are initialized to a value dependent on the compiler,1.0,1.25,1.125,0.40418991446495056,0.40418991446495056,0.4686407744884491,0.4686407744884491
1803,1803,11.3,How are objects initialized when they are created?,By using constructors.,memory is allocated in accordance with their type and initialization input.,1.0,2.5,1.75,0.6213287711143494,0.6213288307189941,0.5709928274154663,0.5709927678108215
1804,1804,11.3,How are objects initialized when they are created?,By using constructors.,Objects are assigned a space in memory when they are created. the name given to the object points to the memory address where the objects data resides.,1.0,1.25,1.125,0.5825172662734985,0.5825172662734985,0.5454152226448059,0.5454152226448059
1805,1805,11.3,How are objects initialized when they are created?,By using constructors.,using constructor,5.0,5.0,5.0,0.5415852069854736,0.5415852069854736,0.7292208075523376,0.7292208075523376
1806,1806,11.3,How are objects initialized when they are created?,By using constructors.,by giving them a value,2.0,1.25,1.625,0.3649349510669708,0.3649348914623261,0.4252234101295471,0.42522338032722473
1807,1807,11.3,How are objects initialized when they are created?,By using constructors.,"By declaring the class first, the name of the variable, and then any variables that need to be put in the constructor.  Ex. Class myClass(x, y)",5.0,5.0,5.0,0.7084816694259644,0.7084816694259644,0.6798980832099915,0.6798980832099915
1808,1808,11.3,How are objects initialized when they are created?,By using constructors.,"objects are initialized by giving the object a type, name, and initial value",1.0,3.75,2.375,0.5939745306968689,0.5939745306968689,0.540038526058197,0.540038526058197
1809,1809,11.3,How are objects initialized when they are created?,By using constructors.,they are initialized to 0,1.0,1.25,1.125,0.17520472407341006,0.17520470917224884,0.3535146415233612,0.3535146415233612
1810,1810,11.3,How are objects initialized when they are created?,By using constructors.,"obj. are initialized by the variables that call them, when they are created within a class.   e.i. classname objectname etc. ",1.0,3.75,2.375,0.6465435624122621,0.6465436220169067,0.6208779215812683,0.6208778619766235
1811,1811,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","Name of the function, parameters it must receive in order to perform and a return type.",5.0,5.0,5.0,0.8067702054977417,0.8067702651023865,0.7894905209541321,0.7894904613494873
1812,1812,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",a function signature is the elements that make it unique such as the variables it calls for and also I suppose this includes the program it is in.,3.5,4.0,3.75,0.7051894664764404,0.7051894664764404,0.6251566410064697,0.6251566410064697
1813,1813,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","A function signature is the return type of a function, its name, and the number and type of its parameters.",5.0,5.0,5.0,0.8107923269271851,0.8107923269271851,0.8472491502761841,0.8472490906715393
1814,1814,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",function prototype that contains functions and data members.,1.0,5.0,3.0,0.7698984742164612,0.7698984742164612,0.7267761826515198,0.726776123046875
1815,1815,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",A function signature is a declaration of the function that includes the parameter types and the number of parameters.,5.0,5.0,5.0,0.8159500360488892,0.8159500956535339,0.8363425731658936,0.8363425731658936
1816,1816,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",the declaration of the function.,2.0,3.0,2.5,0.6527798175811768,0.652779757976532,0.6639166474342346,0.6639166474342346
1817,1817,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","Includes the name, accepted parameters, and return type.",5.0,5.0,5.0,0.8101586103439331,0.8101586699485779,0.8368487358093262,0.8368486762046814
1818,1818,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",its return type and its input parameters,5.0,5.0,5.0,0.5188022851943971,0.5188022255897522,0.5521091818809509,0.5521091818809509
1819,1819,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",Contains the function name and its paramaters.  The return type is not included,5.0,5.0,5.0,0.8105608224868774,0.8105608224868774,0.7421257495880127,0.7421258091926575
1820,1820,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","Return type, function name, and the parameter types",5.0,5.0,5.0,0.7089366316795349,0.7089365720748901,0.7966938614845276,0.7966938018798828
1821,1821,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",The function signature tells what the function parameters and includes all the function calls,2.5,5.0,3.75,0.6730896830558777,0.6730897426605225,0.6267917156219482,0.6267916560173035
1822,1822,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","The function's name, as well as what it returns and what it accepts.",5.0,5.0,5.0,0.7997802495956421,0.7997801899909973,0.6951088905334473,0.6951088309288025
1823,1823,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",the body of the function that holds all the actual code,1.0,2.5,1.75,0.5069919824600221,0.5069920420646667,0.48868393898010254,0.4886839687824249
1824,1824,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",A function signature is the return type and accepted pass value type it takes,3.0,4.0,3.5,0.6294839978218079,0.6294839978218079,0.5399267077445984,0.5399267673492432
1825,1825,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",A function signature specifies the name and input variables of a function.,5.0,5.0,5.0,0.7912412285804749,0.7912412881851196,0.7810125350952148,0.7810125946998596
1826,1826,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",A function signature is the function's parameters and their type and the name of the function.  The return type is not a part of the function signature.,5.0,5.0,5.0,0.878342866897583,0.8783428072929382,0.7908506989479065,0.7908506989479065
1827,1827,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",the name of the function and what it accepts/ returns,5.0,5.0,5.0,0.5728873014450073,0.5728872418403625,0.6069650053977966,0.6069650053977966
1828,1828,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","the unique identifier of a function, which includes input variables along with the function name, but excludes the output type.",5.0,4.0,4.5,0.7335413694381714,0.7335413694381714,0.7512068748474121,0.7512068748474121
1829,1829,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","The order, number, and type of data items included inside the function parameters.",4.5,5.0,4.75,0.8246721625328064,0.824672281742096,0.8625096678733826,0.8625096678733826
1830,1830,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","its the scope, type, and parameters of that function that give it it's properties and defines it against other functions.",5.0,5.0,5.0,0.7565940618515015,0.7565940618515015,0.7622981071472168,0.762298047542572
1831,1831,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","is the name of the fuction, return type, and parameters that are being used",5.0,5.0,5.0,0.6846506595611572,0.6846505999565125,0.7809653282165527,0.7809653282165527
1832,1832,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","a function signature should include the name of the function, parameters, and a body.",2.5,5.0,3.75,0.7982922196388245,0.7982922792434692,0.8234931230545044,0.8234930634498596
1833,1833,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",the name of the function and the arguments passed to that function,5.0,5.0,5.0,0.564294695854187,0.564294695854187,0.5991618633270264,0.5991619229316711
1834,1834,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","A function signature, used in a function's prototype, is the set of object types it take in as parameters, with or without names given for the objects.",5.0,5.0,5.0,0.8225021958351135,0.8225021958351135,0.711251437664032,0.7112513780593872
1835,1835,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",function name and parameter are called function signature.,5.0,5.0,5.0,0.804042637348175,0.8040425777435303,0.7284931540489197,0.7284931540489197
1836,1836,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.",fuction name and parameters,5.0,5.0,5.0,0.5742879509925842,0.5742879509925842,0.5901941657066345,0.5901941657066345
1837,1837,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","The parameters needed, the return type, and name of the function.",5.0,5.0,5.0,0.8429257273674011,0.8429257869720459,0.8731311559677124,0.8731312155723572
1838,1838,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","the signature of a function includes the name of the function, the number and types of parameters, and the return type",5.0,5.0,5.0,0.7758819460868835,0.7758818864822388,0.8126464486122131,0.8126464486122131
1839,1839,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","It is what uniquely separates overloaded functions. It includes the return type, and the parameter list of the function.",4.5,5.0,4.75,0.8087570667266846,0.8087571263313293,0.7810080051422119,0.7810080051422119
1840,1840,11.4,What is a function signature?,"The name of the function and the list of parameters, including their types.","function sig is, is what is the class recognizes as the main function, or rather its specification ",0.0,3.75,1.875,0.71952223777771,0.7195221185684204,0.6453164219856262,0.6453164219856262
1841,1841,11.5,What is a recursive function?,A function that calls itself.,A function that calls upon it self to solve a problem.  Each time it calls upon it self it splits up a problem into a simplier form until it reaches a 'base case' which is the most simplest form of the problem.,5.0,5.0,5.0,0.5628988146781921,0.5628988742828369,0.5430169701576233,0.5430169701576233
1842,1842,11.5,What is a recursive function?,A function that calls itself.,A function that calls itself to perform an opperation such as a factorial recursive function.,5.0,5.0,5.0,0.6314004063606262,0.6314004063606262,0.716684103012085,0.716684103012085
1843,1843,11.5,What is a recursive function?,A function that calls itself.,not answered,0.0,0.0,0.0,0.3385434150695801,0.3385434150695801,0.4339312016963959,0.4339311718940735
1844,1844,11.5,What is a recursive function?,A function that calls itself.,A base case that calls upon itself until the problem becomes smaller and terminates.,2.5,5.0,3.75,0.5941333174705505,0.5941333174705505,0.5963438749313354,0.5963438749313354
1845,1845,11.5,What is a recursive function?,A function that calls itself.,It's a function that calls itself. It runs multiple times until the base case is reached.,5.0,5.0,5.0,0.6386163234710693,0.6386163234710693,0.5965431332588196,0.5965430736541748
1846,1846,11.5,What is a recursive function?,A function that calls itself.,a function that calls itself untill it reaches a base case.,5.0,5.0,5.0,0.5603430271148682,0.5603430271148682,0.6112533807754517,0.6112533211708069
1847,1847,11.5,What is a recursive function?,A function that calls itself.,"A function that calls itself. Each time it does, it must get smaller, and eventually MUST converge to a base case, otherwise you can start an infinite loop.",5.0,5.0,5.0,0.5692555904388428,0.569255530834198,0.5684861540794373,0.568486213684082
1848,1848,11.5,What is a recursive function?,A function that calls itself.,a function that calls itself until a base case is met,5.0,5.0,5.0,0.4991905987262726,0.4991905391216278,0.5489960312843323,0.5489959120750427
1849,1849,11.5,What is a recursive function?,A function that calls itself.,A function that calls itself. With each function call the problem is diminished.,5.0,5.0,5.0,0.7634162902832031,0.7634162902832031,0.7419174313545227,0.7419175505638123
1850,1850,11.5,What is a recursive function?,A function that calls itself.,A function that calls itself to perform a certain task,5.0,5.0,5.0,0.6211665272712708,0.621166467666626,0.678158700466156,0.6781588196754456
1851,1851,11.5,What is a recursive function?,A function that calls itself.,A recursive function is a function that calls itself. Usually called the base case. If the base case is not correct it causes a infinite loop.,5.0,5.0,5.0,0.6133970022201538,0.613396942615509,0.6749693155288696,0.6749693751335144
1852,1852,11.5,What is a recursive function?,A function that calls itself.,"A function that calls itself, in order to solve a problem.",5.0,5.0,5.0,0.7277829647064209,0.7277828454971313,0.7703906297683716,0.7703905701637268
1853,1853,11.5,What is a recursive function?,A function that calls itself.,"a function that calls itself over and over until it finds the simplest form of solution, or the base case.",5.0,5.0,5.0,0.6003103256225586,0.6003102660179138,0.6295830011367798,0.629582941532135
1854,1854,11.5,What is a recursive function?,A function that calls itself.,"A recursive function is a function that calls itself repeatedly until a base case is achieved. The fundamental idea is to break one large problem into a series of smaller, similar problems.",5.0,5.0,5.0,0.5774118900299072,0.5774118900299072,0.606840193271637,0.606840193271637
1855,1855,11.5,What is a recursive function?,A function that calls itself.,"A recursive function typically simplifies a problem by calling itself, until arriving at a base case, at which it recursively returns a solution.",5.0,5.0,5.0,0.5708555579185486,0.5708555579185486,0.5945127606391907,0.5945127606391907
1856,1856,11.5,What is a recursive function?,A function that calls itself.,"A recursive function is a function that breaks down a large problem into two or more smaller problems and calls itself to solve those smaller problems until a base case or terminating point is reached.  At the base case, a definite answer is called and the function no longer recurses, but unwinds itself back through function calls to determine the answer to the original large problem.",5.0,4.0,4.5,0.5401626825332642,0.5401626825332642,0.5344306826591492,0.5344308018684387
1857,1857,11.5,What is a recursive function?,A function that calls itself.,a function that calls itself into a loop with a base case for a loop exit.,2.5,5.0,3.75,0.5948715806007385,0.5948716402053833,0.6376541256904602,0.6376540660858154
1858,1858,11.5,What is a recursive function?,A function that calls itself.,a function that calls itself until the base cases are met.,5.0,5.0,5.0,0.6392139792442322,0.6392139196395874,0.6995425224304199,0.6995425224304199
1859,1859,11.5,What is a recursive function?,A function that calls itself.,A recursive function only knows how to solve base cases  A recursive function calls itself directly or indirectly until a base case is reached.,5.0,5.0,5.0,0.6172311305999756,0.6172310709953308,0.6605378985404968,0.6605378985404968
1860,1860,11.5,What is a recursive function?,A function that calls itself.,a function that calls on itself and uses a base case to stop the recursion,5.0,5.0,5.0,0.4922748804092407,0.492274820804596,0.5155068039894104,0.5155068039894104
1861,1861,11.5,What is a recursive function?,A function that calls itself.,"a function that calls itself, and which eaach calls get closer and close to the base case.",5.0,5.0,5.0,0.6034993529319763,0.6034993529319763,0.6673717498779297,0.6673718094825745
1862,1862,11.5,What is a recursive function?,A function that calls itself.,A function that divides and conquers a problem.  There is a base case that will eventually be reached.  The function calls itself over and over until the base case is satisfied.,5.0,5.0,5.0,0.628800094127655,0.628800094127655,0.5771609544754028,0.5771610140800476
1863,1863,11.5,What is a recursive function?,A function that calls itself.,a function that calls itself in the definition code,5.0,5.0,5.0,0.470098078250885,0.4700980484485626,0.6002650856971741,0.6002650856971741
1864,1864,11.5,What is a recursive function?,A function that calls itself.,A recursive function solves a problem by repeatedly calling itself. the initial problem is broken into successively smaller parts until a much simpler base case is reached. the solutions to each piece of the problem are then returned a step at a time.,5.0,5.0,5.0,0.5252885222434998,0.525288462638855,0.5037766098976135,0.5037766098976135
1865,1865,11.5,What is a recursive function?,A function that calls itself.,"It invoke by itself again ana again, unless it reach bas case",4.0,5.0,4.5,0.5424137711524963,0.5424137711524963,0.5800301432609558,0.5800301432609558
1866,1866,11.5,What is a recursive function?,A function that calls itself.,"a function that solves a problem by dividing the problem into smaller problems, by calling its self again and again, until a base case is reached.",5.0,5.0,5.0,0.5610793828964233,0.5610793828964233,0.5709268450737,0.5709267854690552
1867,1867,11.5,What is a recursive function?,A function that calls itself.,"A function that calls itself over and over again till a base case is reached, then it returns back to the original function.",5.0,5.0,5.0,0.6351332664489746,0.6351332664489746,0.672419011592865,0.6724190711975098
1868,1868,11.5,What is a recursive function?,A function that calls itself.,"a recursive function is a function that during execution, calls itself over and over until a base case is reached",5.0,5.0,5.0,0.5900045037269592,0.5900045037269592,0.632144570350647,0.6321445107460022
1869,1869,11.5,What is a recursive function?,A function that calls itself.,A function that calls itself. Usually used to split a problem into several smaller problems of the same type.,5.0,5.0,5.0,0.6342570185661316,0.6342570185661316,0.6561437249183655,0.6561437249183655
1870,1870,11.5,What is a recursive function?,A function that calls itself.,function that calls it self till the base case is met,5.0,5.0,5.0,0.5153905749320984,0.5153905153274536,0.5349090695381165,0.5349090695381165
1871,1871,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,"Iteration, performers  a series of checks and loops.",5.0,5.0,5.0,0.7839922904968262,0.7839924097061157,0.6886635422706604,0.6886634826660156
1872,1872,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,The alternative method is to use loops in the program instead of a function which calls itself.,5.0,2.5,3.75,0.6276963353157043,0.6276963353157043,0.4501079022884369,0.4501079320907593
1873,1873,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,An alternative to solving a problem using recursive functions is to solve the problem using iteration.,5.0,5.0,5.0,0.7690344452857971,0.7690345048904419,0.7565402984619141,0.7565402388572693
1874,1874,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,"Iteration, this would be more efficient and has repetition structure.",5.0,5.0,5.0,0.7850364446640015,0.7850363850593567,0.7343019247055054,0.7343018054962158
1875,1875,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,One can use iteration or by using a simple while/for loop.,5.0,5.0,5.0,0.6681537628173828,0.6681538224220276,0.6885489821434021,0.6885489821434021
1876,1876,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,iteration,5.0,5.0,5.0,0.603847324848175,0.6038473844528198,0.7688791155815125,0.7688790559768677
1877,1877,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,"Iteration. A while loop or a for loop will be able to accomplish the same desired outcome... It may be faster than recursion, but could also be harder to understand.",5.0,5.0,5.0,0.7017036080360413,0.7017036080360413,0.6452296376228333,0.6452296376228333
1878,1878,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,you can also solve the problem iteratively,5.0,5.0,5.0,0.4954077005386353,0.4954077303409576,0.6753309369087219,0.6753309965133667
1879,1879,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,iterative,5.0,5.0,5.0,0.5742934346199036,0.5742934346199036,0.6864533424377441,0.6864534020423889
1880,1880,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,Using iteration loops.,5.0,5.0,5.0,0.8048742413520813,0.8048743009567261,0.7613280415534973,0.7613281607627869
1881,1881,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,Another alternative way to solve a problem instead of using recursive functions is by using iteration.,5.0,5.0,5.0,0.7776541113853455,0.7776542901992798,0.7508687376976013,0.7508686184883118
1882,1882,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,"A recursive function can often be solved using an iterative function, which runs faster, but is often more complicated.",5.0,5.0,5.0,0.6538721323013306,0.6538721919059753,0.641845703125,0.641845703125
1883,1883,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,iteration,5.0,5.0,5.0,0.603847324848175,0.6038473844528198,0.7688791155815125,0.7688790559768677
1884,1884,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,Any recursive function can be solved using an iterative method.,5.0,5.0,5.0,0.659648060798645,0.659648060798645,0.7343465089797974,0.7343464493751526
1885,1885,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,"Many recursive solutions may also be solved with looping control statements, such as while, for, do-while, etc.",5.0,3.0,4.0,0.5984528064727783,0.5984527468681335,0.5518026351928711,0.5518025159835815
1886,1886,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,"Using an iterative function, which repeats a specified operation or set of operations until a terminating point or base case is reached.  ",5.0,5.0,5.0,0.6425201296806335,0.6425202488899231,0.5844731330871582,0.5844731330871582
1887,1887,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,iteratively,5.0,5.0,5.0,0.5544381737709045,0.5544382333755493,0.6647166013717651,0.6647166013717651
1888,1888,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,using an Iterative calls,5.0,5.0,5.0,0.5579640865325928,0.5579640865325928,0.6629243493080139,0.6629244089126587
1889,1889,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,Iteration.,5.0,5.0,5.0,0.8197628855705261,0.8197629451751709,0.8505167961120605,0.8505167961120605
1890,1890,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,iteration is the alternative way to solve a problem,5.0,5.0,5.0,0.603847324848175,0.6038473844528198,0.7688791155815125,0.7688790559768677
1891,1891,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,using an iterative solution instead,5.0,5.0,5.0,0.6084088683128357,0.6084088683128357,0.5958293080329895,0.5958293676376343
1892,1892,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,"Using an iterative solution.  For, while, or do while loop.",5.0,5.0,5.0,0.7518198490142822,0.751819908618927,0.71405029296875,0.7140501737594604
1893,1893,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,the alternative way to solve a problem that could be solved using recursion is iteration.,5.0,5.0,5.0,0.7389093041419983,0.7389093637466431,0.7526532411575317,0.7526532411575317
1894,1894,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,"Any problem solved recursively could be solved with an iterative function. Iterative replacements for recursive functions may be more difficult to program, but often lead to more efficient solutions to a problem. ",5.0,5.0,5.0,0.7195320129394531,0.7195320129394531,0.6314274072647095,0.6314274072647095
1895,1895,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,by iteration,5.0,5.0,5.0,0.603847324848175,0.6038473844528198,0.7688791155815125,0.7688790559768677
1896,1896,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,"itteration, like a for loop, a while loop, or a do while loop",5.0,5.0,5.0,0.5982561707496643,0.5982561707496643,0.6481292247772217,0.6481292247772217
1897,1897,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,Iteration by using loops,5.0,5.0,5.0,0.6787822246551514,0.6787822246551514,0.6742009520530701,0.6742009520530701
1898,1898,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,iterative functions,5.0,5.0,5.0,0.5742934346199036,0.5742934346199036,0.6864533424377441,0.6864534020423889
1899,1899,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,iteration,5.0,5.0,5.0,0.603847324848175,0.6038473844528198,0.7688791155815125,0.7688790559768677
1900,1900,11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,Through iteration.,"the alt, way is to use a functions parameter in a call ""to"" function. ",2.5,2.5,2.5,0.5766270756721497,0.5766271948814392,0.47044646739959717,0.4704464077949524
1901,1901,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,The array that is declared static retains its modified elements so once it is called upon again the latest elements are modified again.  An array that is not declared static will keep its original elements.,5.0,4.5,4.75,0.6539098620414734,0.6539098620414734,0.6452442407608032,0.6452442407608032
1902,1902,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,A static array only has a specific size and it cannot grow. Also static arrays cannot be accessed outside the program which created it.,2.0,3.75,2.875,0.7397688031196594,0.7397688627243042,0.7032800316810608,0.703279972076416
1903,1903,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,Arrays declared as static are not created and initialized when a function is called and destroyed when the function terminates.,5.0,5.0,5.0,0.8074869513511658,0.8074870109558105,0.8470621109008789,0.8470621705055237
1904,1904,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,Static can be initialized and non-static cannot in C++.,1.0,4.0,2.5,0.694986879825592,0.6949869394302368,0.6297190189361572,0.6297189593315125
1905,1905,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,An array declared static remains the same throughout the execution of the program.,0.5,4.0,2.25,0.6358600854873657,0.6358600854873657,0.4923464357852936,0.49234649538993835
1906,1906,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,a static array will be called only once. once it has been declared the complier will ignore the static line if it comes to it again.,3.5,5.0,4.25,0.686163067817688,0.6861631274223328,0.6581245064735413,0.6581245064735413
1907,1907,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,"The static array will be available to the whole of the program, whereas an array that is not static is only available within the scope in which it is declared.   //pass-by-reference???",3.5,3.75,3.625,0.6987760663032532,0.698776125907898,0.6614357829093933,0.6614357829093933
1908,1908,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,a static array has a predetermined size and that size cannot be altered,2.0,3.75,2.875,0.4745016098022461,0.4745016396045685,0.40182581543922424,0.40182584524154663
1909,1909,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,Arrays declared static can not be changed.  One not declared static can be altered.,0.5,3.75,2.125,0.6451953053474426,0.6451953053474426,0.6988077163696289,0.6988077163696289
1910,1910,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,"an array that is declared as static will retain the values stored in it's elements between function calls, and will not reinitialize them to default values.",5.0,4.0,4.5,0.6714310050010681,0.6714309453964233,0.7132639288902283,0.713263988494873
1911,1911,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,An array that is declared static causes anything that is not initialized to be set to 0.,1.0,3.75,2.375,0.7009551525115967,0.7009552717208862,0.7358292937278748,0.73582923412323
1912,1912,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,A static array will have a null character at the end of the array.,2.5,2.5,2.5,0.6750305891036987,0.6750306487083435,0.6344735622406006,0.6344735622406006
1913,1913,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,static arrays cannot be changed while normal arrays can be changed,0.5,3.75,2.125,0.5010638236999512,0.5010638833045961,0.5698518753051758,0.5698519349098206
1914,1914,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,An array they is declared as static can be accessed outside of the method it was declared without passing it as an argument to other functions in the same class.,3.0,3.0,3.0,0.7806284427642822,0.7806284427642822,0.7364888191223145,0.7364888191223145
1915,1915,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,"A static array has class scope, allowing it to remain where other arrays might be recycled.",5.0,3.25,4.125,0.7242175340652466,0.7242175340652466,0.666644811630249,0.6666449308395386
1916,1916,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,An array that is static does not change or uninitialize if called later unless explicitly acted upon.  It does not terminate or change across objects.  An automatic local array will be cleared and uninitialized if called later outside of it's specific scope.,5.0,4.5,4.75,0.6910167932510376,0.6910167932510376,0.6643816828727722,0.6643818020820618
1917,1917,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,"one declared as static is one that is already defined. The program knows the length and the array from the start, whereas non-static arrays are declared or assigned later.",2.0,3.75,2.875,0.7499158978462219,0.7499158978462219,0.7341392636299133,0.7341392040252686
1918,1918,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,"a non static array must reinitialize itself every function call, while a static array will only initialize itself once, unless otherwise forced.",5.0,5.0,5.0,0.6774215698242188,0.677421510219574,0.6609383821487427,0.6609383821487427
1919,1919,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,A static array retains any modified values after a function call. Automatic arrays reset to their initial values when the function ends.,5.0,3.75,4.375,0.7525339126586914,0.7525338530540466,0.7597383260726929,0.7597383260726929
1920,1920,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,"a static array is one that keeps its values and is not initialized every time a class function is called, it's data is not lost at function end.",5.0,4.0,4.5,0.7808472514152527,0.7808472514152527,0.6988131403923035,0.6988131999969482
1921,1921,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,an array that is declared as static can only be used in the function that its being called in. Its a constant array. Static is another way of say const.,0.5,4.0,2.25,0.6590726971626282,0.6590726971626282,0.7107881903648376,0.7107882499694824
1922,1922,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,Values in an array that is not delcared as static will remain constant.  When an array is declared const values within the array can be manipulated.,0.5,3.75,2.125,0.7030802965164185,0.703080415725708,0.6672593355178833,0.6672593951225281
1923,1923,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,the data of a static array cannot be changed,0.5,3.75,2.125,0.315603107213974,0.3156030774116516,0.4373965859413147,0.4373966157436371
1924,1924,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,"Standard arrays terminate when the functions that call them finish. A static array is not removed from memory when it's parent function terminates, leaving it available for other functions (or new instances of the original function).",5.0,2.5,3.75,0.7302886247634888,0.7302885651588441,0.7173745036125183,0.7173745036125183
1925,1925,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,by defining static array it doese not lose scope in locala function. static array makes programm more scalable. non static array lose scope inside the local function.,4.0,4.5,4.25,0.6407555937767029,0.6407555937767029,0.6715301871299744,0.6715302467346191
1926,1926,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,static arrays can be called from anywhere,3.0,1.25,2.125,0.5583763718605042,0.5583764314651489,0.627491295337677,0.6274912357330322
1927,1927,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,A static array cannot be changed. A regular array can be changed when it is passed to a function or manually.,0.5,3.75,2.125,0.6837571263313293,0.6837571263313293,0.6490628719329834,0.6490629315376282
1928,1928,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,"a static array can be can be edited throughout the program, while a non-static array can only be edited within a given function",3.0,3.75,3.375,0.6205810904502869,0.6205810308456421,0.5732503533363342,0.5732502937316895
1929,1929,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,"An array that is declared static is allocated when the program begins to run, and is not freed until the program exits, but has limited scope. A non-static array is allocated and freed every time that it comes in and out of scope.",5.0,3.75,4.375,0.6906642317771912,0.6906642913818359,0.6282299757003784,0.6282300353050232
1930,1930,11.7,What is the difference between an array that is declared as static and one that is not?,The static arrays are intialized only once when the function is called.,static has a predetermined size that cannot be passed while vis versa.,2.0,3.75,2.875,0.6045804619789124,0.6045804619789124,0.5440964698791504,0.5440965294837952
1931,1931,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,the type char[] has a  null ('\n' ) element at the very end.,5.0,5.0,5.0,0.7659313678741455,0.7659314274787903,0.7328075766563416,0.7328076958656311
1932,1932,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,a variable char is basically any non command key on the keyboard that you can press. A string is a collection of letters or numbers that is stored together to be used later. Comonly strings are used for words. Chars can be used for less but can have opperations performed on them in a useful way.,0.0,3.75,1.875,0.6529409289360046,0.6529408693313599,0.6107072830200195,0.6107073426246643
1933,1933,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,The programmer must provide the null terminating character in a string of characters using type char[] and must also ensure that the array is large enough to contain the input string of characters and the null terminating character.,5.0,5.0,5.0,0.7945194840431213,0.7945194840431213,0.7198373675346375,0.7198373675346375
1934,1934,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,String of characters are followed by a null statement.  type string is for example   string s;,5.0,5.0,5.0,0.6724633574485779,0.6724633574485779,0.7467143535614014,0.7467142939567566
1935,1935,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,String contains a word where as char can contain phrases or a string of characters.,0.0,3.75,1.875,0.673913300037384,0.673913300037384,0.6186005473136902,0.618600606918335
1936,1936,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,a string is a variable with a single entinty of letters combined into one while in a char[] each letter is assigned a memory value and each has its own variable assigned i.e. char[0] char[1].,0.0,4.0,2.0,0.6533380746841431,0.6533380150794983,0.7295143604278564,0.7295144200325012
1937,1937,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"A string contains a null character at the end of the string, which makes it easily possible to get the string length. A char array can have a virtually unlimited length, therefore, its size must be declared/limited.",5.0,2.5,3.75,0.7337778210639954,0.7337778806686401,0.7568325400352478,0.7568326592445374
1938,1938,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,an array of characters stores a null character at the end,5.0,5.0,5.0,0.5866193771362305,0.5866193175315857,0.7323816418647766,0.7323817610740662
1939,1939,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"When you read a string of characters, you also read in the white space.  When you read characters declared char you only read the characters, no white space.",1.5,4.0,2.75,0.6772546768188477,0.6772547364234924,0.5883594155311584,0.5883594751358032
1940,1940,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"Character arrays will terminate at any whitespace, including spaces. Strings terminate when they encounter the new line character.",1.5,5.0,3.25,0.7093007564544678,0.7093008756637573,0.6911649107933044,0.6911649107933044
1941,1941,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,The difference is that a string that is declared a variable of type char[] is each char is included in the array versus the string of characters that is read into a variable.,0.0,3.75,1.875,0.6649894714355469,0.6649894714355469,0.7249419689178467,0.7249420285224915
1942,1942,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"An array of strings reads the string literals, meaning anything within ""quotes"". A char array reads a string as each individual character.",0.0,3.75,1.875,0.7399721741676331,0.7399721741676331,0.6720171570777893,0.6720171570777893
1943,1943,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,character arrays can call on individual letters were a string array can only call words.,0.0,3.75,1.875,0.6433491110801697,0.6433491706848145,0.5783880352973938,0.5783880949020386
1944,1944,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,The character array has an end of line character at the end of it.,4.5,5.0,4.75,0.7937495112419128,0.7937495112419128,0.7104251384735107,0.710425078868866
1945,1945,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"Type char[] may contain a null value as the last element, whereas type string will not.",5.0,5.0,5.0,0.8103682398796082,0.8103682398796082,0.7974317669868469,0.7974318861961365
1946,1946,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,The variable of type string has a terminating character \0 at the end of it.,2.5,5.0,3.75,0.8366445302963257,0.8366446495056152,0.8380429148674011,0.8380429744720459
1947,1947,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,the one that is type string has an extra string member. The /0 at the end.,2.5,5.0,3.75,0.7489138841629028,0.7489138841629028,0.7513494491577148,0.7513493895530701
1948,1948,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"a string has variable size and function calls available, while an character array usually has a static size.",2.5,4.0,3.25,0.6877539753913879,0.6877539753913879,0.715511679649353,0.7155116200447083
1949,1949,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,a string char[] adds a null value to the end of the string.,5.0,5.0,5.0,0.841060996055603,0.841060996055603,0.8189388513565063,0.8189388513565063
1950,1950,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"char array needs an end character signature and is made up of characters each separate from each other, a string is an object in itself, with a value that the user enters.",5.0,5.0,5.0,0.7430470585823059,0.7430471777915955,0.7217500805854797,0.7217501401901245
1951,1951,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"the variable of type char[], each character is stored into a different memory address and can be accessed easly, where as in a string of character, its not easy to be able to access each character in the string.",0.0,4.0,2.0,0.6655246019363403,0.6655246615409851,0.6506730914115906,0.6506731510162354
1952,1952,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"When the string is passed into the array char, individual characters are stored and can be manipulated.  Although when a word is stored into a string variable, it is stored as one word and not as individual characters.",0.0,4.0,2.0,0.682178795337677,0.6821787357330322,0.6339015364646912,0.6339015960693359
1953,1953,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"a string variable can change in size and is passed to functions by value, whereas a type char[] cannot change in size and is passed to functions by reference only",0.0,3.75,1.875,0.6267309784889221,0.6267309784889221,0.5699470043182373,0.5699469447135925
1954,1954,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"A string type string acts as a single object, with individual char entities accessible only through specific string class functions. A char array is less robust, but allows direct access to specific char entities.",1.5,3.75,2.625,0.6892837882041931,0.6892837285995483,0.6848148703575134,0.6848150491714478
1955,1955,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"In arrays strings are stored as a characters (char[]), each character of string will be stored in each memory location of the array, while string of characters is only one memory location.",0.0,3.75,1.875,0.7032485604286194,0.7032486796379089,0.6302289962768555,0.630229115486145
1956,1956,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"an array of characters has one more element, its last element,the terminating element, or null, which doesnt exist in a variable of type string",5.0,5.0,5.0,0.6454766988754272,0.6454766988754272,0.6461977362632751,0.6461977958679199
1957,1957,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,A string of characters is a specific variable type that has no extra data at the end. A string of type char[] is all the characters and a null ('\0'),5.0,5.0,5.0,0.7875267267227173,0.7875267267227173,0.7743498086929321,0.7743498086929321
1958,1958,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,a string of characters will have a null character or value at the end of the string,5.0,5.0,5.0,0.6042084097862244,0.6042084693908691,0.7229018211364746,0.7229019403457642
1959,1959,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"when the characters are put in a char array, there is also a null terminating character added to the end, '\0'",5.0,5.0,5.0,0.7769030332565308,0.7769030928611755,0.7696720361709595,0.769672155380249
1960,1960,11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,The char[] will automatically add a null \0 character at the end of the string.,"string of characters that is read into a variable of type string includes, ",0.0,3.0,1.5,0.4979280233383178,0.4979279935359955,0.46267566084861755,0.46267563104629517
1961,1961,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","For example we have an array on n elements, the divide and conquer splits up the array into equal halves and repeats this process until each element is by itself",3.0,4.5,3.75,0.6998292803764343,0.6998292207717896,0.721566379070282,0.721566379070282
1962,1962,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",Divide and coquer means dividing a problem into 2+ problems which are solved and then merged  back together for a final solution to the whole problem.,5.0,5.0,5.0,0.8191485404968262,0.8191485404968262,0.8106153607368469,0.8106152415275574
1963,1963,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",The divide and conquer paradigm divides a problem into smaller and smaller portions that are easier to solve.,4.0,4.5,4.25,0.6638829708099365,0.6638829112052917,0.652712345123291,0.6527124047279358
1964,1964,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","Divide elements,recur then conquer, which works in merge sort and quicksort.",3.0,4.5,3.75,0.6922313570976257,0.692231297492981,0.8082799315452576,0.8082799315452576
1965,1965,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","To divide and conquer, you divide the program in half once or multiple times to the extent that the program as a whole is easier to work in groups to solve the problem.",4.0,4.5,4.25,0.7508828639984131,0.7508827447891235,0.7314116358757019,0.7314115166664124
1966,1966,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",to divide one larger string/line of values and sepereate them into smallers lines to easily manipulate them and then replace them in the order in which they should be.,2.0,5.0,3.5,0.6830357909202576,0.6830358505249023,0.7281491756439209,0.7281491756439209
1967,1967,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","Split the problem into smaller, more manageable parts, and proceed to address the smaller problems.",4.0,4.5,4.25,0.8340404033660889,0.8340402841567993,0.8062126040458679,0.8062125444412231
1968,1968,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",dived and conquer is the breaking up of a large complex program into small easy to solve components.,4.0,4.5,4.25,0.5971134305000305,0.597113311290741,0.6588993668556213,0.6588994264602661
1969,1969,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",Dividing a larger problem into the smallest incident of the problem and solving the smallest incident.,4.0,4.5,4.25,0.6754481792449951,0.6754481196403503,0.706026554107666,0.7060266137123108
1970,1970,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","Break up very large data structures into smaller sub-units, that are easier to manipulate.",4.0,4.5,4.25,0.7152829170227051,0.7152829766273499,0.7288804650306702,0.7288805246353149
1971,1971,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",The divide-and-conquer technique is where it takes the sorting algorithm and breaks up the array into smaller elements of the array to tackle the problem and run the algorithm.,4.0,4.25,4.125,0.6523399949073792,0.6523399949073792,0.6483439207077026,0.6483438611030579
1972,1972,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","The divide-and-conquer paradigm divides the problem into two pieces and works on each piece separately, allowing for a faster approach to 2 separate smaller problems. ",4.0,4.5,4.25,0.7594040632247925,0.7594040632247925,0.7485784292221069,0.7485783696174622
1973,1973,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","Take a problem and divide it into a smaller problem and solve that smaller problem, or divide it into a smaller problem and solve it, thus solving the whole problem in the process.",4.5,4.5,4.5,0.8338706493377686,0.8338707089424133,0.7904303669929504,0.7904303669929504
1974,1974,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",The idea is to split the problem into half and solve for the smaller split-problems.,4.0,4.5,4.25,0.7158352136611938,0.7158352136611938,0.649871826171875,0.6498717069625854
1975,1975,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","The divide and conquer paradigm, splits a large problem into simpler problems, at which point it solves the simpler problems and merges the simple solutions together to answer the large problem.",5.0,5.0,5.0,0.8038407564163208,0.8038407564163208,0.8317582607269287,0.8317583203315735
1976,1976,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","Divide-and-conquer refers to abstraction, the act of separating large, complex problems into smaller, easier problems that can be solved by a relatively simple algorithm.",4.0,4.5,4.25,0.7693280577659607,0.7693280577659607,0.7860724329948425,0.786072313785553
1977,1977,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","It takes a large problem and splits it into two or more easier or faster solutions, and  makes for better readability. ",4.0,4.5,4.25,0.697196364402771,0.697196364402771,0.7219057679176331,0.7219057679176331
1978,1978,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",it is the taking of a larger problem and splitting it into simpler smaller problems.,4.0,4.5,4.25,0.6812278032302856,0.6812278032302856,0.6655679941177368,0.6655680537223816
1979,1979,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",It divides the problem into singular units and works on the problem piece by piece until the problem is solved.,4.0,4.5,4.25,0.7037342190742493,0.7037340998649597,0.6954792141914368,0.6954792141914368
1980,1980,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","smaller parts are easier to compare than comparing the whole, so it divides the problem down in halves until it can easily compare, then works backwards putting it back together to give the solution.",5.0,5.0,5.0,0.7859280705451965,0.7859280705451965,0.7842897176742554,0.7842897176742554
1981,1981,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","a divide-and-conquer paradigm. takes some data, divides it into two parts, and works on each part indiviually until the item is found.",4.0,4.5,4.25,0.72871333360672,0.7287133932113647,0.7457156777381897,0.7457155585289001
1982,1982,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","The idea of divide and conquer is to take a large problem, split it into n smaller problems, making the program easier to read and modify.",4.0,4.5,4.25,0.7950141429901123,0.7950141429901123,0.7653501629829407,0.7653501629829407
1983,1983,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",the divide and conquer paradigm is a recursive solution that keeps dividing the problem into halves until a base case is reached.,4.0,4.5,4.25,0.7455238699913025,0.7455238699913025,0.7239919900894165,0.7239919900894165
1984,1984,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","dividing and conquering means breaking a problem into two smaller problems, solving both of those, and putting the two solutions together.",5.0,5.0,5.0,0.7971738576889038,0.797173798084259,0.8201874494552612,0.8201873898506165
1985,1985,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","Divide the big problem into small problem, solve small problem and join small solved elements of the problem. if there is two ore more elements in the array, divide the array into parts and compare the elements, after comperison, conquer the elements. If array have n element, first half have n/2 elements",5.0,5.0,5.0,0.7689282894134521,0.7689282894134521,0.8150140047073364,0.8150140643119812
1986,1986,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","divide the array in half, sort each half, then sort them back in one array",3.0,3.0,3.0,0.6798122525215149,0.6798121929168701,0.7169699668884277,0.7169699668884277
1987,1987,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",You take a class and break down everything it is supposed to do into easily managed functions.,1.0,4.5,2.75,0.4914143979549408,0.4914144575595856,0.5573183298110962,0.5573183298110962
1988,1988,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","this is shown by the use of .cpp and header files.  by splitting the program up into smaller subsections of individual code, it becomes easier to write and keep up with as opposed to having all of your code in one file",1.0,4.5,2.75,0.6830835342407227,0.6830835342407227,0.6920968890190125,0.6920969486236572
1989,1989,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","When a problem is too big, split it into smaller problems of the same type, and solve those, then from the solutions of the smaller problem, give the solution to the larger original problem.",5.0,4.5,4.75,0.8403099775314331,0.8403100371360779,0.8373507857322693,0.8373507261276245
1990,1990,11.9,Briefly describe the divide-and-conquer paradigm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",it is the separating of large program into smaller classes then until target is reached.,1.5,5.0,3.25,0.5806151032447815,0.5806150436401367,0.574349582195282,0.5743495225906372
1991,1991,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","It uses the divide and conqure technique recursively and then when merging back together it compares each element together in a sorted list, this is done by reversing the divide and conquer technique",5.0,5.0,5.0,0.7926743030548096,0.7926743030548096,0.7231208086013794,0.7231208682060242
1992,1992,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",A merge sort works by removing all items to sepperate memory locations and merging them back together in order.,2.0,5.0,3.5,0.730488121509552,0.7304880023002625,0.7355844378471375,0.7355844378471375
1993,1993,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","It divides the array into two halves, sorts each half, then merges the two halves together.",5.0,5.0,5.0,0.9262174367904664,0.9262173771858216,0.9288859963417053,0.9288861155509949
1994,1994,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","Divide into two sublists and then those sublists break into length 1, then merges the sublists sorted. ",5.0,5.0,5.0,0.7863465547561646,0.7863464951515198,0.8332728743553162,0.8332729339599609
1995,1995,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","Merge sort uses the ""divide and conquer"" idea where it divides the array in half multiple times and then joins each element of the array back into one sorted array. This is one of the best sorting algorithms besides Quicksort.",5.0,5.0,5.0,0.7686859965324402,0.7686859369277954,0.7681499719619751,0.7681500911712646
1996,1996,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",divides the line in half coninuously until you get to only a single value then recombine the values to form a sorted line.,5.0,5.0,5.0,0.7803292870521545,0.7803293466567993,0.7238782644271851,0.7238783240318298
1997,1997,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","Continually split array in half, sort each side of the halves, then put them back together once organized.",5.0,5.0,5.0,0.8119605183601379,0.8119605183601379,0.7998583912849426,0.7998585104942322
1998,1998,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",merge sort splits the array of elements into smaller arrays until the arrays reach size 1 and then the merge sort merges the smaller arrays into arrays of size 2 then it moves to the next step and merges the next arrays.,5.0,5.0,5.0,0.7575760483741759,0.7575759887695312,0.7405880689620972,0.7405880689620972
1999,1999,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",By divide and conquer.,1.5,5.0,3.25,0.4592465758323669,0.4592465758323669,0.5555306077003479,0.5555306077003479
2000,2000,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","Break a single array down into many arrays with individual elements, then sort the elements as you reconstruct them back into a single array.",5.0,5.0,5.0,0.8363720774650574,0.8363720774650574,0.7700229287147522,0.7700229287147522
2001,2001,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","Merge sort breaks the array in half, and continues to do so until it has 2 elements to compare and sorts them, after doing so it ""merges"" back as it keeps on sorting the algorithm as it does so.",5.0,5.0,5.0,0.8419299721717834,0.8419298529624939,0.8323783874511719,0.8323783278465271
2002,2002,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","Merge sort divides the problem in half, organizes each half, then brings the two halves together again.",5.0,5.0,5.0,0.8228921890258789,0.8228921890258789,0.8416554927825928,0.8416554927825928
2003,2003,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","Take an array and split it into two, then solve these simpler problems and merge the two answers in correct order.",5.0,5.0,5.0,0.7370386123657227,0.7370384931564331,0.7649450898170471,0.7649450302124023
2004,2004,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","A merge sort recursively divides the array into half until only one element remains, then it sorts the data on its way out of the recursive call by merging the cells.",5.0,5.0,5.0,0.7462348341941833,0.7462348937988281,0.790519118309021,0.790519118309021
2005,2005,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","Merge sort recursively divides an array into two arrays until all arrays have 1 element, at which point it merges the 1 element arrays into larger sorted arrays, the final returned array being the sorted version of the initial array.",5.0,5.0,5.0,0.8138758540153503,0.8138759136199951,0.8316637873649597,0.8316639065742493
2006,2006,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",Merge sort continuously breaks an array in half then sorts the arrays as it concatenates them back together into one sorted array.,5.0,5.0,5.0,0.8058304190635681,0.8058304190635681,0.8003700971603394,0.8003701567649841
2007,2007,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","It takes an array, splits itself in half, sorts the two halves (either by recursion or iteration) and compares them together giving a third array a full sorted list with both halves rejoined. ",5.0,5.0,5.0,0.9161108732223512,0.9161107540130616,0.8696972727775574,0.8696972727775574
2008,2008,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","it splits a large array into small arrays and recurs until the array is a size of 1, and then merges all of the arrays back together until the source array is completely sourted.",5.0,5.0,5.0,0.8394197225570679,0.8394197821617126,0.8319938778877258,0.831993818283081
2009,2009,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",Mergesort divides the array into smaller halves and then combines the sorted subarrays into one sorted array.,5.0,5.0,5.0,0.8727067708969116,0.8727067112922668,0.833206057548523,0.8332059383392334
2010,2010,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","merge sort breaks the array down in halves until it is comparing two values, sorts those two values, then merges that back with the other broken down parts that it sorted, each level merging more sets together till you return back to your whole array in order.",5.0,5.0,5.0,0.8819798231124878,0.881979763507843,0.8742582201957703,0.8742582201957703
2011,2011,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","Divides the data into twor separate arrays, sorts the two arrays and merges them back to back together recursively. ",5.0,5.0,5.0,0.8757674098014832,0.8757674098014832,0.8622552752494812,0.8622552156448364
2012,2012,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","Take the initial array and split it into two, temporary, smaller arrays, sort the two smaller arrays, and merge them back into a single array.",5.0,5.0,5.0,0.8316192030906677,0.831619143486023,0.8271889090538025,0.827189028263092
2013,2013,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",merge sort divides the data into halves until data of one element is reached and then merges each element together according to its placement in comparison to the rest of the data,5.0,5.0,5.0,0.6853110194206238,0.6853110194206238,0.6503112316131592,0.650311291217804
2014,2014,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","merge sort uses the divide and conquer strategy, sorting an array in parts, then merging the sorted parts back together.",5.0,5.0,5.0,0.8631987571716309,0.8631987571716309,0.8409504890441895,0.8409504294395447
2015,2015,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","Divide recursuivly big array into two arrays, sort two array and merge them togather recuruivly.",5.0,5.0,5.0,0.7149316072463989,0.7149314880371094,0.7634856104850769,0.7634856700897217
2016,2016,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","divides an array in half and sorts each half by calling its self, thus dividing each half again and again and sorting it until the array is sorted. then putting the elements back in the original array sorted.",5.0,5.0,5.0,0.8447558879852295,0.8447558283805847,0.8278759121894836,0.8278758525848389
2017,2017,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",Merge sort takes an array and splits it in half and sends each half back to itself recursively and merges and sorts the two halves when it starts going back up.,5.0,5.0,5.0,0.7875871062278748,0.7875871658325195,0.7748623490333557,0.7748624086380005
2018,2018,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","merge sort splits an array into two halves and then sorts the two smaller arrays, and then merges them back together to form a sorted array",5.0,5.0,5.0,0.8610826134681702,0.8610826730728149,0.8910658359527588,0.891065776348114
2019,2019,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","the merge sort continually divides the array (or set of containers) into halves, until it reaches the point where there is just one element left, then merges each of the sets of two sorted arrays (containers).",5.0,5.0,5.0,0.8301001787185669,0.8301001191139221,0.8948281407356262,0.894828200340271
2020,2020,11.11,Briefly describe in one sentence how does merge sort work?,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",merge sort splits an array of elements into smaller and smaller array's till the value of 1 is reached.,2.5,5.0,3.75,0.8110352158546448,0.8110350966453552,0.7700814604759216,0.7700815796852112
2021,2021,12.1,What is a pointer?,The address of a location in memory.,A variable in memory that hold the address of another memory location to which it points too,5.0,5.0,5.0,0.7301728129386902,0.7301727533340454,0.7048091292381287,0.7048091292381287
2022,2022,12.1,What is a pointer?,The address of a location in memory.,A pointer is a variable that contains the memory address of a given value.,4.5,5.0,4.75,0.7931021451950073,0.7931020855903625,0.7722411751747131,0.7722411751747131
2023,2023,12.1,What is a pointer?,The address of a location in memory.,A pointer is a variable that stores the address of another variable.,5.0,5.0,5.0,0.7661492228507996,0.76614910364151,0.6642327904701233,0.6642328500747681
2024,2024,12.1,What is a pointer?,The address of a location in memory.,A pointer is a variable that holds a memory address or location of another variable.,5.0,5.0,5.0,0.8400434255599976,0.8400434851646423,0.7780261635780334,0.7780262231826782
2025,2025,12.1,What is a pointer?,The address of a location in memory.,A data type that points to an address in memory which contains certain information. Used for pass-by-reference to save memory.,5.0,5.0,5.0,0.747543454170227,0.747543454170227,0.7077029943466187,0.7077030539512634
2026,2026,12.1,What is a pointer?,The address of a location in memory.,a pointer points to a location in memory of a certain data type,4.5,5.0,4.75,0.6218321323394775,0.6218321919441223,0.6653399467468262,0.6653400659561157
2027,2027,12.1,What is a pointer?,The address of a location in memory.,A pointer is a variable that points to the address location of another variable.  Represented by (*).,5.0,5.0,5.0,0.7542287111282349,0.7542286515235901,0.7054664492607117,0.7054663896560669
2028,2028,12.1,What is a pointer?,The address of a location in memory.,A pointer is a variable that holds the address of a given variable (and of a given data type),5.0,5.0,5.0,0.6724327206611633,0.6724327206611633,0.66290283203125,0.6629028916358948
2029,2029,12.1,What is a pointer?,The address of a location in memory.,pointer is a programming data type whose value points to another value stored in computer memory by its address.,5.0,5.0,5.0,0.7472534775733948,0.7472535967826843,0.7147704362869263,0.714770495891571
2030,2030,12.1,What is a pointer?,The address of a location in memory.,A data type that points to a specific memory address.,5.0,5.0,5.0,0.7745611667633057,0.7745611071586609,0.7796986103057861,0.7796985507011414
2031,2031,12.1,What is a pointer?,The address of a location in memory.,Its like a variable except it only holds the address in memory of the variable not the physical information.,5.0,5.0,5.0,0.7198244333267212,0.7198244333267212,0.7082226872444153,0.7082226276397705
2032,2032,12.1,What is a pointer?,The address of a location in memory.,a pointer is a reference to a memory location.,5.0,5.0,5.0,0.7960079312324524,0.7960079312324524,0.8225978016853333,0.8225977420806885
2033,2033,12.1,What is a pointer?,The address of a location in memory.,A pointer is an alias to an object in memory.,3.5,4.25,3.875,0.8143987655639648,0.8143987059593201,0.7515955567359924,0.7515956163406372
2034,2034,12.1,What is a pointer?,The address of a location in memory.,"A pointer is a variable that contains a memory address for something that you can use, such as a value, array, or even a function.",5.0,5.0,5.0,0.7262097597122192,0.7262097597122192,0.7044559121131897,0.7044559121131897
2035,2035,12.1,What is a pointer?,The address of a location in memory.,its a data type with a memory address and a value,1.5,5.0,3.25,0.6020486354827881,0.6020486354827881,0.6985572576522827,0.6985572576522827
2036,2036,12.1,What is a pointer?,The address of a location in memory.,a form of storing data that keeps the location in memory of an data type or object.,5.0,5.0,5.0,0.722101628780365,0.7221016883850098,0.7483702898025513,0.7483701705932617
2037,2037,12.1,What is a pointer?,The address of a location in memory.,it contains a object's memory address,5.0,5.0,5.0,0.6582666039466858,0.6582666635513306,0.6764316558837891,0.6764317154884338
2038,2038,12.1,What is a pointer?,The address of a location in memory.,variable that contains the memory address of a data object.,5.0,5.0,5.0,0.7809240221977234,0.7809239029884338,0.7803595066070557,0.7803594470024109
2039,2039,12.1,What is a pointer?,The address of a location in memory.,A pointer is an element that references a memory location.,5.0,5.0,5.0,0.8113205432891846,0.8113204836845398,0.7912183403968811,0.7912183403968811
2040,2040,12.1,What is a pointer?,The address of a location in memory.,"an object that points to a specific place in memory, where a variable or value is stored.",5.0,5.0,5.0,0.7377300858497621,0.7377300858497621,0.7367794513702393,0.7367795705795288
2041,2041,12.1,What is a pointer?,The address of a location in memory.,a variable that stores the address of a memory location,5.0,5.0,5.0,0.6531875729560852,0.65318763256073,0.721348762512207,0.721348762512207
2042,2042,12.1,What is a pointer?,The address of a location in memory.,"A pointer is a variable that points to an address in memory, which contains some data. The pointer does not contain or point to any data, only a memory address.",5.0,5.0,5.0,0.8126453161239624,0.8126453757286072,0.7252343893051147,0.7252343893051147
2043,2043,12.1,What is a pointer?,The address of a location in memory.,Pointer is a variable which have a memory address of a variable.,5.0,5.0,5.0,0.78508061170578,0.7850806713104248,0.7887209057807922,0.788720965385437
2044,2044,12.1,What is a pointer?,The address of a location in memory.,a pointer points to a location in memory where data is stored,5.0,5.0,5.0,0.5635114312171936,0.5635114908218384,0.6678369641304016,0.6678369641304016
2045,2045,12.1,What is a pointer?,The address of a location in memory.,a variable that holds the address of another variable and can access the contents of the variable.,5.0,5.0,5.0,0.6864316463470459,0.6864317655563354,0.6754241585731506,0.6754241585731506
2046,2046,12.1,What is a pointer?,The address of a location in memory.,a pointer is a memory address that points to a data member,5.0,5.0,5.0,0.6162627339363098,0.6162627935409546,0.7017521262168884,0.7017521858215332
2047,2047,12.1,What is a pointer?,The address of a location in memory.,A data type that stores the memory address of another variable.,5.0,5.0,5.0,0.8126651644706726,0.8126651644706726,0.722067654132843,0.722067654132843
2048,2048,12.1,What is a pointer?,The address of a location in memory.,its like a variable but only holds an address in meomrry not the physical address.,1.0,5.0,3.0,0.6819770336151123,0.6819770932197571,0.6677444577217102,0.6677443385124207
2049,2049,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,"Try several sets of data on an algorithm that includes worst case, best case, and random cases.  Also try and run the same program on a different computer with the same specs",5.0,3.75,4.375,0.5193855762481691,0.5193856358528137,0.6142890453338623,0.6142891049385071
2050,2050,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,not answered,0.0,0.0,0.0,0.3385434150695801,0.3385434150695801,0.4339312016963959,0.4339311718940735
2051,2051,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,time complexity using big O  logarthmic O(log n) linear O(n) exponential O(n^2) quadratic O(n^k) k&gt;=1 Polynomial O(a^n) n&gt;1,1.5,3.0,2.25,0.37576669454574585,0.3757667243480681,0.4650940001010895,0.4650940001010895
2052,2052,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,Using some sort of counting principle of the number of operations performed in an algorithm.,5.0,3.75,4.375,0.5918561816215515,0.5918561816215515,0.6552993059158325,0.6552994251251221
2053,2053,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,Experimental means you would actually write a prototype of the algorithm and measure the time it takes to run given certain parameters.,5.0,5.0,5.0,0.7413973212242126,0.7413972020149231,0.6922350525856018,0.6922350525856018
2054,2054,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,measuring the relationship of running an algorithm with different input sizes.,5.0,3.75,4.375,0.6793917417526245,0.6793918013572693,0.6966091990470886,0.6966091394424438
2055,2055,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,"Oposite of a theoretical assessment of the algorithm to determine runtime, but to run the code first to determine the the runtime.  This is not recommended because it is a limited test.  It does not include all possibilities of the data, nor the hardware used to process the data.",5.0,4.25,4.625,0.5983580350875854,0.5983580946922302,0.6609790921211243,0.660979151725769
2056,2056,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,not answered,0.0,0.0,0.0,0.3385434150695801,0.3385434150695801,0.4339312016963959,0.4339311718940735
2057,2057,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,The experimental approach for measuring the running time is by using the Big O equation which tells you the running time.,1.5,3.75,2.625,0.6344814300537109,0.6344814896583557,0.5768767595291138,0.576876699924469
2058,2058,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,"You create and run  the algorithm multiple times, while measuring the amount of time it takes, you then average the results.",5.0,5.0,5.0,0.642833411693573,0.6428333520889282,0.63531893491745,0.6353189945220947
2059,2059,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,keep a value of how many operations it takes and add to this value each time a function is called.,3.0,3.75,3.375,0.6540845036506653,0.6540845632553101,0.682633101940155,0.6826330423355103
2060,2060,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,BIG-OH,1.5,3.0,2.25,0.3274251520633697,0.32742512226104736,0.43326249718666077,0.43326252698898315
2061,2061,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,Running the program with various input data and measuring the running time with system time.,5.0,5.0,5.0,0.6445213556289673,0.6445213556289673,0.7407510876655579,0.7407512664794922
2062,2062,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,"You run a program with different data sizes, like 10^x.  As you increase x and measure the completion speeds for the program, you can find patterns and attempt the measure the running time.  It's very important to keep the same software and hardware however, which makes experimental testing inferior to theoretical in the eyes of most.",5.0,3.0,4.0,0.6548961400985718,0.654896080493927,0.6235832571983337,0.6235832571983337
2063,2063,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,to run the program through and see how many times each thing is called and the runtime of each function is based on that.,5.0,3.5,4.25,0.5243154764175415,0.5243154168128967,0.617296576499939,0.6172966361045837
2064,2064,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,the number of times a specific segments get called per unit work.,3.0,3.0,3.0,0.5303472876548767,0.5303473472595215,0.525346577167511,0.5253466367721558
2065,2065,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,"For every call into memory, add/ multiply it into an equation of type O(n)",1.5,3.0,2.25,0.5528524518013,0.5528524518013,0.6266833543777466,0.6266834139823914
2066,2066,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,"adding a time marker at the before the algorithm is called and another time marker immediately after so that you have the change in time, then you can calculate the efficiency by the speed of the computers cpu.",3.0,4.25,3.625,0.6583965420722961,0.6583964824676514,0.6926219463348389,0.6926219463348389
2067,2067,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,Big O(h) notation,1.5,3.0,2.25,0.4185056686401367,0.4185056984424591,0.5554083585739136,0.5554084181785583
2068,2068,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,the experimental approach measures actual running time in t.  t= seconds.,5.0,5.0,5.0,0.5340492725372314,0.5340492725372314,0.6321119666099548,0.6321119666099548
2069,2069,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,running an algorithm on a specific set of data,5.0,3.0,4.0,0.4021947979927063,0.4021948873996735,0.44944000244140625,0.44944003224372864
2070,2070,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,"In experimental terms, the running time of an algorithm is measured by the number of operations required to complete the function. This number can usually be expressed in big-O notation.",2.5,3.75,3.125,0.5532640814781189,0.5532641410827637,0.6494815945625305,0.6494815945625305
2071,2071,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,"run the code for n-times and get average values, drop the constant and lowest number. for example if             f(x) = 3n +1 the running time will bef  f(x) = O(n)",2.5,4.5,3.5,0.4595983326435089,0.4595983624458313,0.50437992811203,0.5043799877166748
2072,2072,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,to measure the actual time of the program to run. and calculate the running time using the input and operations done,5.0,5.0,5.0,0.5994638800621033,0.5994638800621033,0.7474441528320312,0.747444212436676
2073,2073,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,adding up the number of operations performed based on the worst case possible.,2.0,3.0,2.5,0.5609592795372009,0.5609592795372009,0.6374360918998718,0.6374361515045166
2074,2074,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,the experimental approach would be to run through the algorithm and see how long it takes,5.0,5.0,5.0,0.561141848564148,0.561141848564148,0.4143153429031372,0.4143153727054596
2075,2075,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,"trying it with different sets of inputs, and measuring the amount of time that the algorithm actually takes.",5.0,5.0,5.0,0.6029136180877686,0.6029136776924133,0.6199979782104492,0.619998037815094
2076,2076,12.2,What is the experimental approach for measuring the running time of an algorithm?,Implement the algorithm and measure the physical running time.,running the input with various inputs measuring the running time with  system time,5.0,3.75,4.375,0.5239496231079102,0.5239496231079102,0.5359554290771484,0.5359554886817932
2077,2077,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","it scans the list and selects the smallest(largest) element and places it in the front, increment the curPtr by one, scan the list again for the next smallest(largest) element and place it in with respect with the other sorted elements.",5.0,5.0,5.0,0.8365973234176636,0.8365972638130188,0.7812114357948303,0.7812114357948303
2078,2078,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","Selection sort searches the array for the lowest value and swaps it with the first value in the array. Then searches for the next lowest value and swaps it with the second item in the array, and so on.",5.0,5.0,5.0,0.8324986100196838,0.8324987888336182,0.8170014023780823,0.8170014023780823
2079,2079,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",Compare the largest element to the front element and swap data according to value if needed.,4.0,3.75,3.875,0.7049100399017334,0.7049100399017334,0.6344069242477417,0.6344068646430969
2080,2080,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","Selection sort is a sorting algorithm that divides a list in half and has two lists. It then compares the first elements in both these lists and puts these elements in another list, having the smaller element before the bigger one.",1.0,3.0,2.0,0.7682814598083496,0.7682814002037048,0.7291064262390137,0.7291064858436584
2081,2081,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","Iterate through the list (assume list of integers), find the smallest one, and put it in a separate ""sorted"" list... then traverse again and find the next smallest, and move it to the sorted section... and repeat until you run out of elements to sort.",5.0,4.5,4.75,0.7283774018287659,0.7283774018287659,0.7302290797233582,0.7302289605140686
2082,2082,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",selection sort selects the smallest element out of the list then the second smallest ....and sorts them acordingly.,5.0,5.0,5.0,0.7543441653251648,0.7543441653251648,0.7227798700332642,0.7227798700332642
2083,2083,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",You select the smallest element and place it on the left.  You select the smallest element and sort it with respect the the item already on the left.  You continue this till the end of the collection of items.,5.0,5.0,5.0,0.7827342748641968,0.7827343344688416,0.7485924959182739,0.7485924959182739
2084,2084,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","A selection sort scrolls through the data structure looking for the lowest (or highest) unsorted piece of data, moves it to the held spot, increments that spot by one, and starts the process over.",5.0,5.0,5.0,0.7987890243530273,0.7987889051437378,0.7346134781837463,0.7346134781837463
2085,2085,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",Selection sort works by finding the smallest element and then compares it with the largest and sorts the elements.,0.0,3.75,1.875,0.7638105750083923,0.7638106346130371,0.6888117790222168,0.6888117790222168
2086,2086,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","Selection sort is usually a recursive sorting method where you divide the elements to be sorted in half repeatedly. You then sort the smallest case, then work your way up, sorting each until they are all sorted.",1.0,4.0,2.5,0.7765071988105774,0.7765072584152222,0.6285388469696045,0.6285388469696045
2087,2087,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","goes to the middle of the list, checks to see if it is greater or less then the value given and moves through the list accordingly to add the value into the proper place.",0.0,3.75,1.875,0.7609962821006775,0.7609962821006775,0.682731568813324,0.6827316284179688
2088,2088,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",selection sort finds the lowest element in the data set and places it behind the pivot point.,5.0,3.75,4.375,0.678250789642334,0.6782508492469788,0.7222095727920532,0.7222094535827637
2089,2089,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","Selection sort iterates through the array one element at a time, seeking the least value from the right and replacing the current value with it.",5.0,3.75,4.375,0.7198881506919861,0.7198881506919861,0.7233456373214722,0.7233456969261169
2090,2090,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","Selection sort traverses an unsorted array looking for the smallest value, when it's found it is put at the beginning of the unsorted array.  Performed several times, this will output a sorted array.",5.0,5.0,5.0,0.7592970132827759,0.7592969536781311,0.7195637822151184,0.7195637822151184
2091,2091,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",it runs through the list and finds the smallest (or largest) value and puts it at the appropriate position,5.0,3.75,4.375,0.6567872166633606,0.656787097454071,0.7146798968315125,0.7146798968315125
2092,2092,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","pick a number, and set all values less than that number to the left, while all numbers on the right of that number is larger.",1.0,5.0,3.0,0.7466174960136414,0.7466174960136414,0.7125102281570435,0.7125102877616882
2093,2093,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",It takes the largest item in the unsorted array and swaps it with last item in the unsorted array.,5.0,3.75,4.375,0.7903038263320923,0.7903038263320923,0.7487729787826538,0.7487730979919434
2094,2094,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","by selecting the first object and comparing it with the next objects to find one that is smaller, if it does it switches the two.  then it comes back the other way and sees if the objects previous to the last one is greater, if it does it switches them.  it does this while decreasing the range it looks at until it finishes in the middle.",1.0,3.75,2.375,0.788300096988678,0.7883000373840332,0.7304925918579102,0.7304925322532654
2095,2095,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","Selection sorts works by going through a certain list. Goes through the unsorted list and selecting the largest item in the list and placing it in a sorted array. There are two arrays, unsorted and sorted. Complete these steps until the list is sorted.",5.0,3.75,4.375,0.7894022464752197,0.789402186870575,0.7109517455101013,0.7109518051147461
2096,2096,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","selection sort works by pulling all of the values off to the side, leaving one value in the list.  It will then insert a value into the list.  if the value is bigger it will go to the right, if smaller if will go to the left.",1.0,3.75,2.375,0.7307201623916626,0.7307202219963074,0.7014711499214172,0.7014710903167725
2097,2097,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",selection sort searches for the smallest element of the remaining data organization and places it at the largest point of the new data organization,5.0,3.75,4.375,0.7480005025863647,0.74800044298172,0.6839433908462524,0.6839434504508972
2098,2098,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","Selection sort sorts an array one element at at time. It first finds the element with the smallest key and puts it into the first location within its array or list, then finds the next smallest and puts it in the second location, and so on.",5.0,5.0,5.0,0.8308481574058533,0.8308481574058533,0.8539407849311829,0.8539407253265381
2099,2099,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","select an element compare it with 2nd element if it is greater, swap it ",1.0,4.5,2.75,0.6670976877212524,0.6670976877212524,0.6545716524124146,0.6545715928077698
2100,2100,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","it selects the smallest element in a list and switches it with the element in its correct position, then it selects the next smallest and does the same...",5.0,4.25,4.625,0.8025401830673218,0.8025400638580322,0.7617411017417908,0.761741042137146
2101,2101,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",It starts at the first element and replaces it with the smallest element found to the right. It then repeats with the next element in the list.,5.0,4.25,4.625,0.7715530991554259,0.7715531587600708,0.7668117880821228,0.7668117880821228
2102,2102,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","selection sort is when you pick a data member and put it in a new array, then you pick another data member and put it in order with the new array, then pick another and insert it in the correct place in the new array, etc etc",1.0,5.0,3.0,0.7670671343803406,0.7670670747756958,0.7288421988487244,0.7288421392440796
2103,2103,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","it searches through the entire data set for the best element to go in the current position, then it moves up a position and searches through the remainder of the set for the best element for the new position.",5.0,3.0,4.0,0.8206365704536438,0.8206366300582886,0.7563566565513611,0.7563567757606506
2104,2104,12.4,"Briefly, how does selection sort work?","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",selection sort  iterates through the array one element @ a time searching for the right and replacing current value with it.,5.0,3.0,4.0,0.6605415940284729,0.6605415940284729,0.6678275465965271,0.6678276658058167
2105,2105,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",A link list can grow to a infinite size as a array has a fixes size.,5.0,5.0,5.0,0.72952800989151,0.7295279502868652,0.7268205881118774,0.7268206477165222
2106,2106,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",The advantage of linked lists is that they are not limited in size like arrays.,5.0,5.0,5.0,0.6392368078231812,0.6392367482185364,0.5430406928062439,0.5430406332015991
2107,2107,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",link lists dont have a fixed size,5.0,5.0,5.0,0.5654739141464233,0.5654739141464233,0.5343118906021118,0.534311830997467
2108,2108,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","Linked Lists can be of variable size, where arrays have fixed size.",5.0,5.0,5.0,0.7931894063949585,0.7931894063949585,0.8214627504348755,0.8214626312255859
2109,2109,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","Linked lists do not have a definite size. They can be as big or as small as needed, and they don't have to allocate extra memory for elements you don't need. Arrays size must be defined.",5.0,5.0,5.0,0.8041563034057617,0.8041562438011169,0.7239340543746948,0.72393399477005
2110,2110,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","a linked list has a dynamic size , but an array only has a fixed size and takes allot of extra operations to increase its size.",5.0,5.0,5.0,0.7605379223823547,0.7605379223823547,0.7302826642990112,0.7302826642990112
2111,2111,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",You do not have to predetermine your list size as you do with arrays. Linked list have the ability to be as large as you want them adding memory as needed.,5.0,5.0,5.0,0.8135372400283813,0.8135371804237366,0.769505500793457,0.769505500793457
2112,2112,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",The main advantage to a linked list is that it can have it's size adjusted during runtime.,5.0,5.0,5.0,0.7323836684226991,0.7323836684226991,0.648770272731781,0.648770272731781
2113,2113,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",Linked lists are able to grow in size. So elements can be added to the list.,5.0,5.0,5.0,0.805548369884491,0.8055484294891357,0.8063396215438843,0.8063395619392395
2114,2114,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","Linked lists are not confined to a specific size, and can have elements added and removed far easier. They are also easier to traverse.",4.5,5.0,4.75,0.7891291379928589,0.7891291379928589,0.7609382271766663,0.760938286781311
2115,2115,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",There is no predetermined length,5.0,5.0,5.0,0.453835517168045,0.4538354873657226,0.493137925863266,0.4931378662586212
2116,2116,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","Inserts into a linked list are far cheaper than an insert into an array. With an array, all items after the one being inserted must me shifted, with a linked list, only the pointers are replaced.",4.0,5.0,4.5,0.7732278108596802,0.7732277512550354,0.7215343117713928,0.7215344309806824
2117,2117,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",Linked lists may be dynamically grown.,5.0,5.0,5.0,0.623492956161499,0.6234930157661438,0.7269030213356018,0.726902961730957
2118,2118,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","Linked lists are very dynamic in that they can change and be added/subtracted to very easily because they are not linear in memory.   Arrays are pre-specified in size to be cast over a certain amount of disk space.  This makes insertion into Arrays difficult because all elements must be shifted, and if you reach the end of the array, you are done even if you have more data to input.  Linked Lists do not run into these problems.",5.0,5.0,5.0,0.7826089262962341,0.7826089859008789,0.7669837474822998,0.7669838070869446
2119,2119,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","linked lists have an indefinite size, whereas arrays are a specific size.",5.0,5.0,5.0,0.7048842906951904,0.7048842310905457,0.6251755952835083,0.6251755952835083
2120,2120,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","Linked lists have no predefined length, and thus you can have virtually unlimited items in that list.",5.0,5.0,5.0,0.8603597283363342,0.8603597283363342,0.798892080783844,0.7988920211791992
2121,2121,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","They grow dynamically, unlike the fixed size array",5.0,5.0,5.0,0.7106356024742126,0.7106356024742126,0.7054063081741333,0.7054062485694885
2122,2122,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","you can add as many nodes as you like without having to specify a list size, if an array gets too big you have to copy its entire contents to another larger array to get more room",5.0,5.0,5.0,0.7408801317214966,0.7408801317214966,0.6131959557533264,0.6131959557533264
2123,2123,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",Linkded list does not have a fixed size. Arrays have a fixed size.,5.0,5.0,5.0,0.8053651452064514,0.8053650856018066,0.7323872447013855,0.732387125492096
2124,2124,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","Linked lists have a dynamic size, where as arrays have a static size.",5.0,5.0,5.0,0.8084308505058289,0.8084308505058289,0.8141186833381653,0.8141185641288757
2125,2125,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",linked lists do not have a memory constraint other than total memory,5.0,5.0,5.0,0.44607439637184143,0.44607436656951904,0.5449487566947937,0.5449487566947937
2126,2126,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","The primary advantage of linked lists over arrays is their ability to become larger or smaller as data is added and removed from the list, whereas arrays may waste memory for small data sets, and run out of space for large data sets.",5.0,5.0,5.0,0.7562967538833618,0.7562967538833618,0.7189933657646179,0.7189933657646179
2127,2127,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","Array have fixed size, in Link List are flexible for adding or deleting an element. ",5.0,5.0,5.0,0.8398413658142091,0.8398413658142091,0.7809581160545349,0.7809582352638245
2128,2128,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",they are resizeable,5.0,5.0,5.0,0.4858927726745606,0.4858927726745606,0.46890896558761597,0.46890902519226074
2129,2129,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",Linked lists can be dynamically allocated and their size can change as needed.,5.0,5.0,5.0,0.8059167861938477,0.8059166669845581,0.7729446291923523,0.7729445099830627
2130,2130,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","linked lists do not have to have a specified size, they are easier to add to and remove from",5.0,5.0,5.0,0.6413562297821045,0.6413561701774597,0.6274560689926147,0.6274560689926147
2131,2131,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.","they dont have a fixed size, no shiftnig needs to be done for insertion/deletion.",5.0,5.0,5.0,0.6987858414649963,0.6987859606742859,0.6386659741401672,0.638666033744812
2132,2132,12.5,What is the advantage of linked lists over arrays?,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",linked list many be dynamically grown. It has not limit,5.0,5.0,5.0,0.6811118721961975,0.6811118721961975,0.6677908897399902,0.6677910089492798
2133,2133,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,A data structure in C++ where the the first element in the queue is the first element taken out of the queue.,5.0,5.0,5.0,0.7414994239807129,0.7414993643760681,0.7286013960838318,0.728601336479187
2134,2134,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,A queue is an abstract data type that performs operations on both ends of the list and exhibits first-in first-out behavior.,5.0,5.0,5.0,0.7600952982902527,0.7600952386856079,0.7357286214828491,0.7357285618782043
2135,2135,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,First in first out.,4.0,5.0,4.5,0.5453457832336426,0.5453457832336426,0.5844014883041382,0.5844014883041382
2136,2136,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,"A queue is an abstract data type that involves putting an element at the back of the list. Queues use the FIFO, first in first out, idea where the first element in the list is the first that comes out.",5.0,5.0,5.0,0.8273286223411559,0.8273285031318665,0.8085708022117615,0.8085708618164062
2137,2137,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,"A data structure that implements first in, first out. The element that has been there the longest is the first to get served.",5.0,5.0,5.0,0.8271088600158691,0.8271088600158691,0.7895738482475281,0.7895738482475281
2138,2138,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,a data structure that inserts elements at the end of it and removes elements from the front.,5.0,5.0,5.0,0.729340136051178,0.7293401956558228,0.6654723286628723,0.6654722690582275
2139,2139,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,A queue is a collection of elements with the characteristics of first in first out (FIFO).  The first item in is the first item out.  All additional items are added to the end of the list.,5.0,5.0,5.0,0.8095558881759644,0.8095558285713196,0.7683019042015076,0.7683019042015076
2140,2140,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,"A queue is a data structure that inserts data into a FIFO configuration, that is, data input to the structure is always at it's end, and data taken is always from the beginning.",5.0,5.0,5.0,0.7725656032562256,0.7725656628608704,0.7375122308731079,0.7375122904777527
2141,2141,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,It is a particular set of entities that are put in to a certain order by the enqueue and the dequeue functions.,1.5,5.0,3.25,0.8189465999603271,0.8189464807510376,0.8206340074539185,0.8206340074539185
2142,2142,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,A queue is a data type that operates under a FILO (First In Last Out) method. This means that the first element inserted into the queue is the first element removed.,5.0,2.5,3.75,0.7509063482284546,0.7509062886238098,0.7946438789367676,0.7946438789367676
2143,2143,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,like a linked list except it is first in last out,0.0,5.0,2.5,0.5266491174697876,0.5266491174697876,0.47277209162712097,0.4727720022201538
2144,2144,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,A queue is like a stack except it follows FIFO (First in first out) .,5.0,5.0,5.0,0.7081174254417419,0.7081173062324524,0.7221460938453674,0.7221460342407227
2145,2145,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,A queue is a data structure where the first node in is the first node out.,5.0,5.0,5.0,0.7241472601890564,0.7241472601890564,0.7289077043533325,0.7289077043533325
2146,2146,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,A queue is a First in First out data structure much like a line for a movie theatre.  The first object in line is the first object to be handled or enacted upon.,5.0,5.0,5.0,0.7937867045402527,0.7937866449356079,0.794222891330719,0.794222891330719
2147,2147,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,"its a lot like a stack, except that the first item put into the list is the first item to be taken from the list.",5.0,5.0,5.0,0.693114697933197,0.6931145787239075,0.66678386926651,0.66678386926651
2148,2148,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,"a first in first out list of items, like if you put 5, 4, 3, 2, and 1 in the queue it will when you dequeue items remove the items in the same order as put in, so thus it will put out, 5, 4, 3, 2, and 1 in that exact order.",5.0,5.0,5.0,0.6923088431358337,0.692308783531189,0.6710562109947205,0.6710560321807861
2149,2149,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,"A linked list with a First In, Out structure dequeue at the head of the list enqueue at the end of the list",5.0,5.0,5.0,0.7665551900863647,0.76655513048172,0.7739020586013794,0.7739020586013794
2150,2150,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,"a list of objects that follow the rule first in first out, essentially a linked list that goes in order of the first object in the list is the first to be taken off.",5.0,5.0,5.0,0.7392516732215881,0.7392516732215881,0.7231752872467041,0.7231752872467041
2151,2151,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,A queue is an abstract data type that is based off of the priniple of first in first out. FIFO. The first item inserted into the list will the first item taken out.,5.0,5.0,5.0,0.7990416884422302,0.7990415692329407,0.7763940095901489,0.7763941287994385
2152,2152,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,"It is a ""first in first out"" data structure.  It can be implemented with either a linked list or an array.",5.0,5.0,5.0,0.7310663461685181,0.7310662865638733,0.7118090391159058,0.7118089199066162
2153,2153,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,an ordered list that performs task in the order of first in first out. adding items to the queue places items behind the rest of them. taking items off the queue takes the one that has waited the longest.,5.0,5.0,5.0,0.7170140147209167,0.7170140147209167,0.7030925154685974,0.7030925750732422
2154,2154,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,"A queue is a linear, first-in first-out data structure. Data must be accessed in the same order it was put into the queue, so only the oldest item in the queue is accessible at any time. Main functions defined are enqueue and dequeue.",5.0,5.0,5.0,0.8755876421928406,0.8755875229835509,0.8736220002174377,0.873621940612793
2155,2155,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,"Queue is a buffer, it follows the rule of First In and First out. Queue is very useful in computer science for scheduleing .",5.0,5.0,5.0,0.7890240550041199,0.7890239953994751,0.795261025428772,0.7952610850334167
2156,2156,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,a queue is a set of elements where the first element inserted is the first element to be removed,5.0,5.0,5.0,0.6047983765602112,0.6047983765602112,0.5663565993309021,0.5663566589355469
2157,2157,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,Is a list of items where the the user only has access to the first element and each new element is added at the end.,5.0,5.0,5.0,0.7171348929405212,0.7171348929405212,0.6339172124862671,0.6339172124862671
2158,2158,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,"a queue is a list of data that follows the fifo principle, an example of this would be when you get into a line at a movie theater...the first one there gets to buy a ticket first",5.0,5.0,5.0,0.6795581579208374,0.6795582175254822,0.6835721731185913,0.6835721731185913
2159,2159,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,"A queue is a data structure that holds a set of objects, which has a FIFO (first in first out) priority.",5.0,5.0,5.0,0.7833800911903381,0.7833800911903381,0.8065585494041443,0.8065586090087891
2160,2160,12.6,What is a queue?,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,like a linked list expect first in last out,0.0,2.5,1.25,0.5669417381286621,0.5669416785240173,0.4355815351009369,0.4355815052986145
2161,2161,12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,5.0,5.0,1.0,1.0,1.0,1.0
2162,2162,12.7,What are the main operations associated with a stack?,push and pop,"Pop, which removes the head, or least recently inserted node from the stack. Push, which inserts a new node at the head of the stack.",5.0,5.0,5.0,0.4283655285835266,0.4283655285835266,0.4534354507923126,0.4534354507923126
2163,2163,12.7,What are the main operations associated with a stack?,push and pop,Push and pop,5.0,5.0,5.0,0.804286777973175,0.804286777973175,0.8518117666244507,0.8518117666244507
2164,2164,12.7,What are the main operations associated with a stack?,push and pop,The Push function and the Pop function.,5.0,5.0,5.0,0.4501151740550995,0.4501151740550995,0.5749040246009827,0.5749040842056274
2165,2165,12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,5.0,5.0,1.0,1.0,1.0,1.0
2166,2166,12.7,What are the main operations associated with a stack?,push and pop,push - puts an element on the stack pop- takes an element off the stack,5.0,5.0,5.0,0.5509117245674133,0.5509117841720581,0.6480852365493774,0.6480851769447327
2167,2167,12.7,What are the main operations associated with a stack?,push and pop,Push  and pop.,5.0,5.0,5.0,0.5239550471305847,0.5239550471305847,0.714713454246521,0.7147135138511658
2168,2168,12.7,What are the main operations associated with a stack?,push and pop,Push and Pop,5.0,5.0,5.0,0.8424305319786072,0.8424305319786072,0.8607896566390991,0.8607895970344543
2169,2169,12.7,What are the main operations associated with a stack?,push and pop,push and pop.,5.0,5.0,5.0,0.586686372756958,0.586686372756958,0.7720787525177002,0.7720787525177002
2170,2170,12.7,What are the main operations associated with a stack?,push and pop,"Push and Pop. Push adds an element to the stack, while Pop removes the top element from a stack.",5.0,5.0,5.0,0.4726361036300659,0.4726360738277435,0.5181542634963989,0.5181542634963989
2171,2171,12.7,What are the main operations associated with a stack?,push and pop,pop and push,5.0,5.0,5.0,0.8534134030342102,0.8534132838249207,0.8194524049758911,0.8194525241851807
2172,2172,12.7,What are the main operations associated with a stack?,push and pop,"push,pop,search,isEmpty",4.0,5.0,4.5,0.3775880038738251,0.3775879740715027,0.4742191433906555,0.4742191433906555
2173,2173,12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,5.0,5.0,1.0,1.0,1.0,1.0
2174,2174,12.7,What are the main operations associated with a stack?,push and pop,"Push, Pop, isEmpty, isFull  Maybe List to show all elements or an operation to count how many elements in the stack.",4.5,5.0,4.75,0.4054321050643921,0.4054320752620697,0.44345322251319885,0.44345328211784363
2175,2175,12.7,What are the main operations associated with a stack?,push and pop,"pop, push",5.0,5.0,5.0,0.6444767117500305,0.6444766521453857,0.6858301758766174,0.6858302354812622
2176,2176,12.7,What are the main operations associated with a stack?,push and pop,"isempty, push and pop, along with usually, ",5.0,5.0,5.0,0.4417979717254639,0.4417979717254639,0.5195999145507812,0.5195999145507812
2177,2177,12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,5.0,5.0,1.0,1.0,1.0,1.0
2178,2178,12.7,What are the main operations associated with a stack?,push and pop,push and pop. push puts objects into the stack and pop takes them out following the first in last out rule.,5.0,5.0,5.0,0.5257290601730347,0.5257290601730347,0.5951593518257141,0.5951594114303589
2179,2179,12.7,What are the main operations associated with a stack?,push and pop,"The main operations in a stack are push and pop. Push adds an item to the top of the stack, pop removes the top item from the stack.",5.0,5.0,5.0,0.4975451231002808,0.4975451529026032,0.5539097785949707,0.5539098381996155
2180,2180,12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,5.0,5.0,1.0,1.0,1.0,1.0
2181,2181,12.7,What are the main operations associated with a stack?,push and pop,"push, which adds an item to the top of the stack, and pop, which takes the first item off the top to the stack",5.0,5.0,5.0,0.4394512474536896,0.4394512474536896,0.5017067790031433,0.5017068386077881
2182,2182,12.7,What are the main operations associated with a stack?,push and pop,"the main functions defined for a stack are push, which puts an element on the top of the stack, and pop, which removes an item from the top.",5.0,5.0,5.0,0.4589693248271942,0.4589693248271942,0.4954433739185333,0.4954433739185333
2183,2183,12.7,What are the main operations associated with a stack?,push and pop,Push() Pop() Full() IsEmpty(),4.5,5.0,4.75,0.3700960874557495,0.3700960874557495,0.41148892045021057,0.41148898005485535
2184,2184,12.7,What are the main operations associated with a stack?,push and pop,pop and push to remove an element and to insert an element,5.0,5.0,5.0,0.6348260045051575,0.6348259449005127,0.6355077028274536,0.6355077028274536
2185,2185,12.7,What are the main operations associated with a stack?,push and pop,"Push, Pop",5.0,5.0,5.0,0.6268903613090515,0.6268904209136963,0.6708168983459473,0.670816957950592
2186,2186,12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,5.0,5.0,1.0,1.0,1.0,1.0
2187,2187,12.7,What are the main operations associated with a stack?,push and pop,push - Add an element to the top of the stack pop - remove the top element from the stack,5.0,5.0,5.0,0.4599516689777374,0.4599516987800598,0.6227273344993591,0.6227273941040039
2188,2188,12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,5.0,5.0,1.0,1.0,1.0,1.0
2189,2189,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",When you traverse a tree of any size you will visit each node three times.  Its on the order of 3n or O(n) running time.,5.0,3.0,4.0,0.7428048253059387,0.7428048253059387,0.7827796339988708,0.7827795743942261
2190,2190,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","The Euler tour traversal of a tree begins at the root and visits each node in the tree from the left, then bottom, then right sides.",5.0,5.0,5.0,0.7988776564598083,0.7988777160644531,0.8544961810112,0.8544963598251343
2191,2191,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",Where you visit the in order according to its data value.,2.5,3.0,2.75,0.6190820932388306,0.6190820932388306,0.5955621004104614,0.5955620408058167
2192,2192,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","It is a tree that shows how it functions. It contains parents, children, siblings, ancestors and descendents. The use of tree type algorithm is also an alternative sorting algorithm. ",0.0,3.75,1.875,0.7240110039710999,0.7240110039710999,0.7379885315895081,0.7379885315895081
2193,2193,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","Start from the root, circle around the _whole_ ""tree"", naming each node as you see it.",5.0,4.25,4.625,0.7935062646865845,0.7935062646865845,0.785481870174408,0.7854819297790527
2194,2194,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",it is where you visit the parent then you vistit the children,0.0,3.0,1.5,0.3760615885257721,0.3760616183280945,0.48018378019332886,0.48018378019332886
2195,2195,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","To start from the root , traveling left and visiting ever child along the way till you return to the root from the right.",4.0,4.25,4.125,0.7488486766815186,0.748848557472229,0.7590816020965576,0.7590816617012024
2196,2196,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","Traversing a tree down to it's terminal child and then all of it's siblings, then it traverses up the terminal child's parent and all of it's siblings (repeating the first step if those siblings have children) until the root node has been visited.",4.0,4.25,4.125,0.7071602344512941,0.7071602940559387,0.6924939751625061,0.6924939751625061
2197,2197,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",The Euler tour traversal of a tree the function that iteratively keeps track of the pointer on each node.,1.5,3.75,2.625,0.5838884115219116,0.5838882923126221,0.6376663446426392,0.6376662850379944
2198,2198,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","You travel the outside edge of the tree, clockwise, while naming each node.",4.5,3.0,3.75,0.8006003499031067,0.8006002902984619,0.8055077195167542,0.8055076599121094
2199,2199,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",children to root,0.0,3.75,1.875,0.3491533398628235,0.3491532802581787,0.38569462299346924,0.3856946527957916
2200,2200,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",go to the bottom of the left sub tree and visit the parent and then its children,2.0,3.75,2.875,0.5551360249519348,0.5551360845565796,0.5661060810089111,0.5661060810089111
2201,2201,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",The Euler tour traverses through the tree in a rubber-band style shape.,3.5,3.0,3.25,0.5941779613494873,0.5941779017448425,0.5060924887657166,0.5060924887657166
2202,2202,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","The Euler tour traversal of a tree is a specific way of navigating a tree that involves following the tree starting at the very top and moving along the left side of the tree first, cupping in to visit the parents of children nodes.  It allows for each node to be visited from the left, the right and the bottom.  The Euler tour first progresses to a left child if there is one, then progresses to it's parent, then it's next child, then it's parent's parent.",5.0,3.75,4.375,0.7621435523033142,0.7621434330940247,0.7899025082588196,0.7899026274681091
2203,2203,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",it runs through the parents and the children in order,2.5,3.0,2.75,0.4684929251670837,0.4684929251670837,0.43456196784973145,0.4345620274543762
2204,2204,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","it starts node on the left of the root and then proceeds to visits each node in a left to right order, visits the root, and then proceeds to repeat the previous step on the right side of the tree.",2.5,3.75,3.125,0.7345121502876282,0.7345120906829834,0.7685903906822205,0.7685902714729309
2205,2205,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","Travel from the root to the farthest left child Backup, travel the leftmost children in the right side repeat until reaching the rightmost child.",3.5,5.0,4.25,0.6563925743103027,0.6563926339149475,0.7004151344299316,0.7004151344299316
2206,2206,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","has preorder, in order, and postorder of a tree.  preorder = puts the parent node in front of the child node(s).  in order = puts the parent node between the left child and right child node(s).  postorder = puts the parent node after the child node(s).",2.5,3.75,3.125,0.7160564661026001,0.7160565257072449,0.709122359752655,0.709122359752655
2207,2207,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","The Euler traveral is when you go through a tree looking for nodes to put in the order of left, root, right. Like inOrder traversal. ",2.5,5.0,3.75,0.7717858552932739,0.7717857956886292,0.8295382261276245,0.829538106918335
2208,2208,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","An Euler traversal is a traversal that begins with the root, and travels around the outside of the tree.  Each element in the tree is visited 3 times.  From the left, from the bottom and from the right.",5.0,5.0,5.0,0.8483741283416748,0.8483741879463196,0.8908166289329529,0.8908165693283081
2209,2209,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",Euler tour traversal of a tree traverses down each branch straight to one leaf then starts again at the root and repeats until all elements have been traversed.,4.0,3.75,3.875,0.6487062573432922,0.648706316947937,0.6457322835922241,0.6457323431968689
2210,2210,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","The Euler tour visits every node in a tree, starting with the root and working around the tree counterclockwise. in-order, post-order, and pre-order traversals can be seen as variations of the Euler tour traversal.",4.0,4.5,4.25,0.775381863117218,0.7753819823265076,0.8153930902481079,0.8153932094573975
2211,2211,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",not answered,0.0,0.0,0.0,0.3385434150695801,0.3385434150695801,0.4339312016963959,0.4339311718940735
2212,2212,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",to traverse going down to the left then go to the right of last children and back to the top.. kind of like going around the tree,5.0,4.5,4.75,0.6492725610733032,0.6492725610733032,0.6467111110687256,0.6467110514640808
2213,2213,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","You recursively visit every node on the list. You visit the node from the left, the bottom, and from the right.",5.0,5.0,5.0,0.7751186490058899,0.7751185894012451,0.8416457772254944,0.8416458964347839
2214,2214,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","the euler tour is a way to traverse a tree where you come into contact with each node three times, from the left, from the right, and from the bottom",5.0,5.0,5.0,0.7936215400695801,0.7936215400695801,0.864450991153717,0.8644511103630066
2215,2215,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",traversing a tree level by level,0.0,3.0,1.5,0.4108351469039917,0.4108351767063141,0.4369073510169983,0.4369073212146759
2216,2216,12.8,What is the Euler tour traversal of a tree?,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",The Euler traversal through the tree in a rubber band style shape.,3.5,3.0,3.25,0.5711185336112976,0.5711184740066528,0.5653213262557983,0.5653213262557983
2217,2217,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","if root, set root to NULL else if deleting right leaf, set rightPtr of parent node to NULL else if deleting left leaf, set leftPtr of parent node to NULL else if deleting a left or right subtree child node, set the max leaf child in the left subtree as the new child node.",4.5,4.0,4.25,0.7609532475471497,0.7609531283378601,0.7731980681419373,0.7731980681419373
2218,2218,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","Traverse the tree and find the node, if the node has no children, simply delete it; otherwise set the node's data equal to the data of one of its children then set the pointer for that child to NULL.",3.0,3.75,3.375,0.6576894521713257,0.6576895117759705,0.6324442625045776,0.6324443221092224
2219,2219,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",first attaching the elements from the node to be deleting to alternate nodes and then deleting that node.    delete node;,3.0,3.75,3.375,0.6983938217163086,0.6983938217163086,0.6558042764663696,0.6558043360710144
2220,2220,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","If you delete a node from a tree, you have to link that nodes parents to the children of that node.",2.5,3.75,3.125,0.6917575597763062,0.6917575597763062,0.6379818320274353,0.6379818916320801
2221,2221,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","Must delete the information that the node contains (to free up memory/ ""garbage collect"") and also delete the pointer (in that node's ""parent"") that points to the node you wish to delete.",0.5,3.0,1.75,0.7071403264999391,0.7071403861045837,0.6753477454185486,0.6753477454185486
2222,2222,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",you replace the node with the largest element of its left subtree or replace it with the smallest element of the right subtree.,5.0,5.0,5.0,0.8096342682838441,0.8096343278884888,0.8146830201148987,0.8146830201148987
2223,2223,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","You traverse the tree till you find the node you are wanting to delete.  If the node has no children you delete it.  If the node has children, before you delete, you find the left-most of its children and attach it to the root then you can delete the node.",3.5,4.25,3.875,0.7251392602920532,0.7251392602920532,0.7007434964179993,0.7007436156272888
2224,2224,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",Link the to-be-deleted's left child to the to-be-deleted's parent's left child pointer.,3.5,5.0,4.25,0.6859374046325684,0.6859375238418579,0.6745177507400513,0.6745177507400513
2225,2225,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",The way you delete a node from a binary search tree is first you have take the root and then see the nodes that are coming from the root. And delete the nodes and set the root to NULL.,0.0,3.75,1.875,0.6986146569252014,0.698614776134491,0.6705803275108337,0.6705803871154785
2226,2226,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",You remove the element from the tree and move the next highest element from the left into its place.,5.0,3.75,4.375,0.7426915168762207,0.7426915764808655,0.7232500910758972,0.7232500910758972
2227,2227,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",delete node;,0.0,3.0,1.5,0.3529784679412842,0.3529784381389618,0.3794902563095093,0.3794902265071869
2228,2228,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","the deletion of a node depends upon if it has children and if it is an AVL binary search tree. Assuming it is not an AVL tree, and the node being deleted has no children, you just set its pointer to null. If it has a left child or a right child exclusively, that child replaces the deleted node, if it has two children, the left most child of the right sub tree (or right most child of the left subtree)will replace it",5.0,5.0,5.0,0.7716499567031859,0.7716498970985413,0.7407287359237671,0.7407287359237671
2229,2229,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","If the node is a leaf, just set it's parent's pointer to null and delete it, if it has a single child, set the parent's pointer to the child and delete; if it has two children, set the node to one of the middle children and remove that child from its previous position as a leaf (rightmost child of the left subtree or leftmost child of the right subtree).",5.0,5.0,5.0,0.7841037511825562,0.7841037511825562,0.7878879904747009,0.7878879308700562
2230,2230,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","In a binary search tree, you must first establish a proper replacement for the node you are about to delete, usually a child from the soon to be deleted node.  Once that replacement node has been found, you simply reassign it to where the node that is going to be deleted is.  After the deleted node has been usurped, you remove the deleted node from memory so it may be used again. ",4.0,3.75,3.875,0.6896863579750061,0.6896864175796509,0.6524348855018616,0.6524348855018616
2231,2231,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",It all depends on where the node is located. If its a child it can just be deleted but for a node inside the tree it must be replaced with another node that works in its place.,3.0,3.75,3.375,0.6633312106132507,0.663331151008606,0.6403194069862366,0.6403193473815918
2232,2232,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","if the node has no children, delete it right away, otherwise, put either the furthest right node on the left side or the furthest left node on the right side in that place and perform a the above on that node to guarantee that it's children get handled properly.",5.0,5.0,5.0,0.7458052635192871,0.7458052039146423,0.7136226892471313,0.7136228084564209
2233,2233,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",Create a temp Node  Set temp's values to the Node after head  or NULL in the case of only head Node in the list.   Set head equal to temp. Delete temp,0.0,3.75,1.875,0.6931954622268677,0.6931955218315125,0.6308979988098145,0.6308979988098145
2234,2234,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","by searching down the tree until you find the node, and replacing the link to that node with the greatest child node on the left subtree or the least child node on the right subtree.",5.0,4.25,4.625,0.8194963335990906,0.8194963335990906,0.8558715581893921,0.8558716773986816
2235,2235,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","Set the nodes to NULL, where that it doesn't point to anything, and the use the DELETE opertator to clear space from memory.",0.0,3.0,1.5,0.7320725321769714,0.7320725321769714,0.69307941198349,0.6930794715881348
2236,2236,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","You must first traverse the tree to find the appropriate value.  Then you must make sure that the node is a leaf node.  If it is, then you can delete the pointer to that specific node.",1.5,3.75,2.625,0.7302543520927429,0.7302542924880981,0.6781967878341675,0.6781967878341675
2237,2237,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","if the node is a leaf, you set it's parent's pointer to null. if the node is in the tree you must replace the node with one in the tree: either the largest in the left of the tree or the smallest in the right of the tree. this can be done recursively if needed.",5.0,5.0,5.0,0.7272440791130066,0.7272440791130066,0.7266117334365845,0.7266117930412292
2238,2238,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","if the node is a leaf it can simply be deallocated/deleted from memory, and its parent's reference to it changed to NULL. If the node has a single child, the pointer to it should be made to point to its child before deleting the node. Should the node have two children, the easiest solution may be to copy the node's entire subtree to a new array or tree, delete the node and all descendants, then add the elements taken from the subtree back into the main tree.",4.0,4.5,4.25,0.7092060446739197,0.7092060446739197,0.7119730710983276,0.7119731307029724
2239,2239,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",not answered,0.0,0.0,0.0,0.3385434150695801,0.3385434150695801,0.4339312016963959,0.4339311718940735
2240,2240,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",you cannot delete a node because that can cause a node to have more than 2 children,0.0,2.5,1.25,0.3763330578804016,0.3763330280780792,0.3553605079650879,0.35536056756973267
2241,2241,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","You search the tree for the node using recursion. When you find the node, you determine whether it is a leaf or a internal node. If it is a leaf, you just delete it and set the parent pointer to that node to NULL. If it is a  node, you replace the node with either of the children nodes.",3.5,3.75,3.625,0.7287805080413818,0.7287805080413818,0.7083495855331421,0.7083496451377869
2242,2242,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","to delete the node, you would have to link the children nodes that are connected to the node to be deleted to the remaining nodes of the tree in such a way that nodes on the right of the parent node are larger than the parent and nodes on the left of the parent node are smaller",3.0,5.0,4.0,0.637129545211792,0.6371294856071472,0.6274155378341675,0.6274155974388123
2243,2243,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","if it has no children, you just delete it. if it only has one child, just replace the node with whichever child it has. if it has both children, replace it with one of its children, and send the other child down along the other side of the new node.",3.5,3.75,3.625,0.6664713025093079,0.6664713621139526,0.7069410681724548,0.7069411277770996
2244,2244,12.9,How do you delete a node from a binary search tree?,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",pointer to the child and delete it has 2 children set the node to the child and delete it. the node to th middle will then take its place,2.0,3.75,2.875,0.6212008595466614,0.6212009191513062,0.5674425959587097,0.5674427151679993
2245,2245,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,Log(n) where n is the number of nodes.,4.5,5.0,4.75,0.5342115163803101,0.5342115163803101,0.5956900119781494,0.5956899523735046
2246,2246,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,log(n) steps,4.5,5.0,4.75,0.4335702955722809,0.4335702657699585,0.6019287705421448,0.6019287109375
2247,2247,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,The number of levels and the height of the tree,5.0,5.0,5.0,0.6048793792724609,0.6048794388771057,0.6397783160209656,0.6397783756256104
2248,2248,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,It is the same as the height of the tree.,5.0,5.0,5.0,0.8214927911758423,0.8214927911758423,0.8879006505012512,0.8879005312919617
2249,2249,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,"Given n elements, it would take n/2 steps to find the search criteria.",0.0,3.0,1.5,0.5661299228668213,0.5661299228668213,0.5847861170768738,0.584786057472229
2250,2250,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,log n,4.5,5.0,4.75,0.4370098114013672,0.4370098412036896,0.5536662936210632,0.5536662936210632
2251,2251,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,Depends on the location of the node you are looking for. If it is the root it is one step.  else If it is smaller than the current you are on node you go to the left.  If it is larger than the current node you are on go to the right.,0.0,3.75,1.875,0.5086508393287659,0.5086508393287659,0.5450837016105652,0.5450837016105652
2252,2252,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,2^n where n is the # of levels the binary tree has,0.0,3.75,1.875,0.461627334356308,0.461627334356308,0.43749579787254333,0.43749576807022095
2253,2253,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,The number of steps to search a node is the function n-1.,2.5,4.0,3.25,0.6658050417900085,0.6658050417900085,0.6778689622879028,0.6778689026832581
2254,2254,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,"It would take n/2 elements, given n.",0.0,3.0,1.5,0.5870259404182434,0.5870259404182434,0.6268314719200134,0.6268314719200134
2255,2255,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,log(n),4.5,5.0,4.75,0.6288979053497314,0.6288978457450867,0.7697444558143616,0.7697446346282959
2256,2256,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,O(log n),4.5,5.0,4.75,0.6617549657821655,0.6617549061775208,0.7538090348243713,0.7538090348243713
2257,2257,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,O( Log (n) ),4.5,5.0,4.75,0.4129596650600433,0.4129596650600433,0.5486664772033691,0.5486664175987244
2258,2258,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,"If the binary search tree is constructed efficiently, best case scenario is O(log n) time.  Where n is the number of items in the tree.  If the binary search tree is constructed poorly, with for instance the root of the tree being 1, and progressing downwards and to the right its children are each more than the last: you have a one-way linear linked list.  That worse case scenario would be a full traversal at O(n) time. Where n is the number of items in the tree.",5.0,5.0,5.0,0.4813177585601807,0.4813178181648254,0.5254861116409302,0.5254861116409302
2259,2259,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,"N, n being the number of nodes.",2.5,5.0,3.75,0.4977939426898956,0.4977939426898956,0.5845573544502258,0.5845573544502258
2260,2260,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,"depending on the way that the tree is ordered, it could be anywhere between log(n) and N steps.",5.0,5.0,5.0,0.5641257166862488,0.5641257166862488,0.6410567164421082,0.6410566568374634
2261,2261,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,log(n),4.5,5.0,4.75,0.6288979053497314,0.6288978457450867,0.7697444558143616,0.7697446346282959
2262,2262,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,"worst case scenario = the number of levels of the tree, ie: the node at the farthest position from the root node.  best case = 1 step if its the root node.",5.0,5.0,5.0,0.4563559293746948,0.4563558995723725,0.5792108178138733,0.5792107582092285
2263,2263,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,3 steps at most.  There are 3 cases.,0.0,3.0,1.5,0.6605160236358643,0.6605160236358643,0.5567470788955688,0.5567470192909241
2264,2264,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,log(n)    where n equals the total number of nodes in the tree.,4.5,5.0,4.75,0.4912631809711456,0.4912630915641785,0.5722139477729797,0.5722139477729797
2265,2265,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,the same number of steps as the number of levels or generations in the tree,5.0,5.0,5.0,0.4182225465774536,0.4182225167751312,0.38877198100090027,0.38877198100090027
2266,2266,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,to find a node in a binary search tree takes at most the same number of steps as there are levels of the tree.,5.0,5.0,5.0,0.5949707627296448,0.5949708223342896,0.6474407911300659,0.6474406719207764
2267,2267,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,"three steps visit the root node, then go to right subtree, after visiting right subtree visit left subtree",0.0,4.5,2.25,0.4250306487083435,0.4250306487083435,0.4171093702316284,0.4171093702316284
2268,2268,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,log n,4.5,5.0,4.75,0.4370098114013672,0.4370098412036896,0.5536662936210632,0.5536662936210632
2269,2269,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,( n(n-1) ) / 2,0.0,3.0,1.5,0.44382184743881226,0.44382184743881226,0.49082714319229126,0.49082711338996887
2270,2270,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,2n-1,0.0,4.75,2.375,0.3579863607883453,0.3579863905906677,0.41672033071517944,0.41672036051750183
2271,2271,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,"it takes at most h steps, where h is the height of the tree.",5.0,5.0,5.0,0.6626455187797546,0.6626455187797546,0.6951339244842529,0.6951339244842529
2272,2272,12.11,How many steps does it take to search a node in a binary search tree?,The height of the tree.,it depends on the install search tree then from there for whatever the case is the it repeats it back along the case of the primary node,0.0,3.0,1.5,0.414814442396164,0.4148144125938416,0.3604404628276825,0.3604404926300049
